# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-03-14 17:09\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/chef_overview_server.rst:34
# 7d9a2962983e4d938eeb01e85a507116
msgid "The Chef Server"
msgstr ""

#: ../../includes_chef_server/includes_chef_server.rst:4
# 73874e80c89246eca07cf63d849a54b7
msgid "The |chef server| acts as a hub for configuration data. The |chef server| stores cookbooks, the policies that are applied to cookbooks, and metadata that describes each registered node in the infrastructure. Nodes use the |chef client| to ask the |chef server| for configuration details, such as recipes, templates, and file distributions. The |chef client| then does as much of the configuration work as possible on the nodes themselves (and not on the |chef server|). This scalable approach distributes the configuration effort throughout the organization."
msgstr ""

#: ../source/chef_overview_server.rst:38
# 31298ce4895b4ceba9658876dc2cf8d8
msgid "There are three types of |chef| servers:"
msgstr ""

#: ../source/chef_overview_server.rst:44
# 2bb6483b1fd54a5986c1170e1e961c2f
msgid "Flavor"
msgstr ""

#: ../source/chef_overview_server.rst:45
#: ../source/chef_overview_server.rst:70
#: ../source/chef_overview_server.rst:103
# 9580e49367b24d06b232c7e7ab3a4f90
# d5b5c64a9ae54e89a45f35d0537b9de0
# 5f7ec73a15dd4a80a6a5ca397e27f818
msgid "Description"
msgstr ""

#: ../source/chef_overview_server.rst:46
# 83b12f8cba2c493682e75832b1d1a779
msgid ":doc:`Hosted Chef </chef_overview_server_hosted>`"
msgstr ""

#: ../../includes_chef/includes_chef_hosted.rst:4
# 270597a3147f496a86c4e5db5ceebbc0
msgid "|chef hosted| is a version of a |chef server| that is hosted by |opscode|. |chef hosted| is cloud-based, scalable, and available (24x7/365), with resource-based access control. |chef hosted| has all of the automation capabilities of |chef|, but without requiring it to be set up and managed from behind the firewall."
msgstr ""

#: ../source/chef_overview_server.rst:49
# 7c08e0100f7e4e9da7456151344fd851
msgid "|chef hosted| is based on the idea that an infrastructure management tool should be built around a collection of API primitives. By using an API to talk to a cloud provider (such as |amazon vpc|, |windows azure|, or |rackspace|), it allows the freedom to think of those primitives as building blocks. |chef| only needs to know about the desired state, how it should get there, and what the proper functionality of that desired state should be."
msgstr ""

#: ../source/chef_overview_server.rst:50
# d314bc2b2d5e436aab131004322e26c2
msgid ":doc:`Private Chef </chef_overview_server_private>`"
msgstr ""

#: ../../includes_chef/includes_chef_private.rst:4
# 85d51be9e33842d08a1c677c79df8778
msgid "|chef private| is a version of a |chef server| that is designed to provide all of the infrastructure automation capabilities of |chef|, set up and managed from within the organization."
msgstr ""

#: ../source/chef_overview_server.rst:53
# 75ef4f1f58184595a20753517a3f7c18
msgid "|chef private| evolved out of a need for customers to have the same functionality provided by |chef hosted|, but located behind the firewall. |chef private| is the same as |chef hosted| in every other way. |chef hosted| is the largest |chef private| deployment in the world."
msgstr ""

#: ../source/chef_overview_server.rst:54
# ca8c8f5a80bd41be82e75f6777443965
msgid ":doc:`Open Source Chef Server </chef_overview_server_open_source>`"
msgstr ""

#: ../../includes_chef/includes_chef_open_source.rst:4
# ec4bcad5df3e45e29d4229658dee9d8d
msgid "The open source |chef server| is a free version of the |chef server| that contains much of the same functionality as |chef hosted|, but requires that each instance be configured and managed locally, including performing data migrations, applying updates to the open source |chef server|, and ensuring that the open source |chef server| scales as the local infrastructure it is supporting grows. The open source |chef server| includes support from the |chef| community, but does not include support directly from |opscode|."
msgstr ""

#: ../source/chef_overview_server.rst:58
# 595c4aacc4384f4d9f3064ba3d123560
msgid "Components"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_erchef_background.rst:4
# aabd4d759e0c4ac9ae1a141d59d5a3c0
msgid "Starting with the release of |chef 11|, the front-end for the |chef server| is written using `Erlang <http://www.erlang.org/>`_, which is a programming language that `first appeared in 1986 <http://en.wikipedia.org/wiki/Erlang_%28programming_language%29>`_, was open sourced in 1998, and is excellent with critical enterprise concerns like concurrency, fault-tolerance, and distributed environments. This version of |chef| can scale to the size of any enterprise and is often referred to as |erchef|."
msgstr ""

#: ../source/chef_overview_server.rst:61
# a925b5c2061a4f6087208897830e65c0
msgid "The following diagram shows the various components that are part of a |chef server| deployment and how they relate to one another."
msgstr ""

#: ../source/chef_overview_server.rst:69
# 66f11f33e52944caa7ace1e20dd122e8
msgid "Component"
msgstr ""

#: ../source/chef_overview_server.rst:71
# a2da7e48202a4f3998c346da0fd628bf
msgid "Bookshelf"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_bookshelf.rst:4
# 90f4ed9d93384258add361f1c6a299bf
msgid "|chef bookshelf| is used to store cookbook content---files, templates, and so on---that have been uploaded to the |chef server| as part of a cookbook version. Cookbook content is stored by content checksum. If two different cookbooks or different versions of the same cookbook include the same file or template, |chef bookshelf| will store that file only once. The cookbook content managed by |chef bookshelf| is stored in flat files and is separated from the |chef server| and search index repositories."
msgstr ""

#: ../source/chef_overview_server.rst:74
# 2a43c683cdbb4db9847ff8abe8573a89
msgid "All cookbooks are stored in a dedicated repository."
msgstr ""

#: ../source/chef_overview_server.rst:75
# 546c726dc4b24bb58187fd353a3248b6
msgid "WebUI"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_webui.rst:4
# 0e4b145f4bee440781511f702581f3f1
msgid "|chef server webui| is a |ruby on rails| 3.0 application that hosts the web interface for the |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:77
# 763a7c02c963450b83673cc58d588f86
msgid "Erchef"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_erchef.rst:4
# 78689f1e6b084e5d8ba14bfaf220b0e7
msgid "|erchef| is a complete rewrite of the core API for the |chef server|, which allows it to be faster and more scalable than previous versions. The API itself is still compatible with the original |ruby|-based |chef server|, which means that cookbooks and recipes that were authored for the |ruby|-based |chef server| will continue to work on the |erlang|-based |chef server|. The |chef client| is still written in |ruby|."
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_erchef.rst:6
# ad95f2e15b3b4a9ab6f7cd2b4484dd04
msgid "Even though |chef 11| is authored in |erlang|, writing code in |erlang| is NOT a requirement for using |chef 11|."
msgstr ""

#: ../source/chef_overview_server.rst:79
# a432b2d9249c4342a149c44c88b00430
msgid "Message Queues"
msgstr ""

#: ../source/chef_overview_server.rst:80
# 3fb84bca01514fc9acfd90820a68d2a7
msgid "Messages are sent to the Search Index using the following components:"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_rabbitmq.rst:4
# 565ed2f502fa44b69ee6db9ee7d8b07f
msgid "|rabbitmq| is used as the message queue for the |chef server|. All items that will be added to the search index repository are first added to a queue."
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_expander.rst:4
# 17dfa83d49dc4b72bf19179f8eb68ea5
msgid "|chef expander| is used to pull messages from the |rabbitmq| queue, process them into the required format, and then post them to |chef solr| for indexing."
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_solr.rst:4
# 6cdeb1e8fe2a40ad87f4c6ff5e7e0399
msgid "|chef solr| wraps |apache solr| and exposes its REST API for indexing and search."
msgstr ""

#: ../source/chef_overview_server.rst:86
# ec8f8e6e311a4c2abb9a6964f63de08f
msgid "All messages are added to a dedicated search index repository."
msgstr ""

#: ../source/chef_overview_server.rst:87
# ff9291c9bcff43c4817b2f91adc40c7b
msgid "Nginx"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_nginx.rst:4
# 9a360a6efd8a43e99765229b4f82d87a
msgid "|nginx| is an open-source HTTP and reverse proxy server that is used as the front-end load balancer for the |chef server|. All requests to the |api chef server| are routed through |nginx|."
msgstr ""

#: ../source/chef_overview_server.rst:89
# 041809e459214cbb873afa98da5d34f9
msgid "PostgreSQL"
msgstr ""

#: ../../includes_chef_server/includes_chef_server_component_postgresql.rst:4
# 5daf5e5b917e4162a74fc82d24d2a4e4
msgid "|postgresql| is the data storage repository for the |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:92
# 125ee9347c834cef8c780c446ce6876f
msgid "For |chef hosted|, these components are mostly transparent because of the hosted interface for the |chef server|. For |chef private| and the open source |chef server|, these relationships can be more complex, depending on how the machines on which the |chef server| will run need to be deployed."
msgstr ""

#: ../source/chef_overview_server.rst:95
# 7887cc7b37d742ca8068366275a5ea24
msgid "Common Features"
msgstr ""

#: ../source/chef_overview_server.rst:96
# bd7036dccca74626b3f2419900c14d76
msgid "Each type of |chef server| provides the following features:"
msgstr ""

#: ../source/chef_overview_server.rst:102
# 22bbd973d0cc41d0afb19c6ea87ebf6d
msgid "Feature"
msgstr ""

#: ../source/chef_overview_server.rst:104
# 5e131a8e9fcc4d33af3d7b6d14a36ed1
msgid ":doc:`Chef Server API </api_chef_server>`"
msgstr ""

#: ../source/chef_overview_server.rst:105
# caaa7d90842649129fa31c8f4c042c00
msgid "The |api chef server| is used to provide access to objects on the |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:106
# 47a01e6699ba4df38fd055677c091fcf
msgid ":doc:`Data Bags </essentials_data_bags>`"
msgstr ""

#: ../source/chef_overview_server.rst:107
# f4dd51eb899e419b8fbee0f4778a4da3
msgid "A data bag is a global variable that is stored as |json| data and is accessible from a |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:108
# 2c41108719f44d0595d0072c10713528
msgid ":doc:`Environments </essentials_environments>`"
msgstr ""

#: ../source/chef_overview_server.rst:109
# 85cda29bc29e4ac983c7d70382708d86
msgid "An environment is a way to map an organization’s real-life workflow to what can be configured and managed when using |chef server|."
msgstr ""

#: ../source/chef_overview_server.rst:110
# 6ac5b91857a54199930b152f9fd5850b
msgid ":doc:`Node Objects </essentials_node_object>`"
msgstr ""

#: ../source/chef_overview_server.rst:111
# 9213b49dd060429695aede0b74bc7ccf
msgid "The node object consists of the run-list and node attributes, which is a |json| file that is stored on the |chef server|. The |chef client| gets a copy of the node object from the |chef server| during each |chef| run and places an updated copy on the |chef server| at the end of each |chef| run."
msgstr ""

#: ../source/chef_overview_server.rst:112
# c998c4532595442aaaf5b4db040269d8
msgid ":doc:`Roles </essentials_roles>`"
msgstr ""

#: ../source/chef_overview_server.rst:113
# 5ae836e58ccf4e82b90591f582c0f9a6
msgid "A role is a way to define certain patterns and processes that exist across nodes in a |chef| organization as belonging to a single job function."
msgstr ""

#: ../source/chef_overview_server.rst:114
# e94ad199b7a94e7ea04ab1b7af784b2a
msgid ":doc:`Search </essentials_search>`"
msgstr ""

#: ../source/chef_overview_server.rst:115
# e05188d1092343449426421ce111b6bd
msgid "Search indexes allow queries to be made for any type of data that is indexed by the |chef server|, including data bags (and data bag items), environments, nodes, and roles."
msgstr ""

