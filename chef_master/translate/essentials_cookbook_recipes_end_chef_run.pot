# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-03-14 17:09\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_cookbook_recipes_end_chef_run.rst:34
# 15d92416839a44a9b50cd2e69e0a9de8
msgid "Ending a |chef| Run"
msgstr ""

#: ../source/essentials_cookbook_recipes_end_chef_run.rst:36
# fff7da0977eb4a96a3733259132209f1
msgid "Sometimes it may be necessary to end a |chef| run before it completes. There are a few ways to do this:"
msgstr ""

#: ../source/essentials_cookbook_recipes_end_chef_run.rst:38
# 795614cd601c460e9c4ab42978163e77
msgid "Using the ``return`` keyword and a condition"
msgstr ""

#: ../source/essentials_cookbook_recipes_end_chef_run.rst:39
# 131b6d3674ce4e4eab96cacd401a5b76
msgid "Using the ``raise`` keyword to trigger an unhandled exception"
msgstr ""

#: ../source/essentials_cookbook_recipes_end_chef_run.rst:40
# 39e924683bda43bcabfd1fefbb573d7b
msgid "Using the ``rescue`` block in |ruby| code"
msgstr ""

#: ../source/essentials_cookbook_recipes_end_chef_run.rst:41
# 729f9e7d871e42eb8e9c580b875b2687
msgid "Using ``Chef::Application.fatal!`` to log a fatal message to the |chef| logger and ``STDERR``"
msgstr ""

#: ../source/essentials_cookbook_recipes_end_chef_run.rst:42
# 4178e4d3b5974d4b86e733dacda506b2
msgid "Using an :doc:`exception handler </essentials_handlers>`"
msgstr ""

#: ../source/essentials_cookbook_recipes_end_chef_run.rst:45
# 0a81ec4837674fdda3e63aaa24bdfbee
msgid "Examples"
msgstr ""

#: ../source/essentials_cookbook_recipes_end_chef_run.rst:46
# cf65c655214441f9b5b7e17c3827cd34
msgid "The following examples show various approaches to ending a |chef| run."
msgstr ""

#: ../source/essentials_cookbook_recipes_end_chef_run.rst:48
# 375d9790decd493793bfe1ae0a96cc92
msgid "**Using the raise keyword**"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:3
# 36b0e1d6ce444223978e0b584dc518b8
msgid "In certain situations it may be useful to stop a |chef| run entirely, such as when an unhandled exception occurs. For example, a |resource template| resource may not be able to find its source file or a user who is running |chef| does not have permission to create a directory. The ``raise`` keyword can be useful for stopping the |chef| run if an unhandled exception occurs. There are two approaches:"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:5
# 401cd3c57b7d478e8a9513655bea244b
msgid "Place the ``raise`` keyword in a recipe (instead of the ``return`` keyword) to raise an exception during the compile phase"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:6
# 7a561838d5664c889a2e0ce78eaf8c84
msgid "Place the ``raise`` keyword in a |resource ruby block| resource to raise an exception during the execution phase"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:8
# 27abe0dd78bc4f8dbf2d95de5220e88a
msgid "For example, using the ``raise`` keyword in a recipe to raise an exception during the compile phase may look something like this:"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_raise.rst:22
# d3a1c0c1589d4da295b512ccff69c7d1
msgid "where ``node['platform'] == 'windows'`` is the condition set on the ``raise`` keyword. This condition is useful in a situation where the |windows| system does not have a package manager available, but the package (``name_of_package``) should be installed. Because the package should be installed, but cannot be, |chef| will exit the run with a fatal error and will provide a stack trace."
msgstr ""

#: ../source/essentials_cookbook_recipes_end_chef_run.rst:52
# 10b53379b2024be482e0314ab7c444dd
msgid "**Using the return keyword**"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_return.rst:3
# ef49cf3d5c4340788243da1f59c0f82f
msgid "Using the ``return`` keyword and a condition is typically the most direct approach to stopping a |chef| run. When the condition is met, stop the run. When the condition is not met, allow the run to continue. The following example shows how the ``return`` keyword can be used to set a condition that, if met, will stop a |chef| run:"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_keyword_return.rst:17
# 178bd59d26194337a4b87c35eff20e44
msgid "where ``node['platform'] == 'windows'`` is the condition set on the ``return`` keyword. This condition is useful in a situation where a |windows| system cannot install the package named ``name_of_package``. In a situation where this condition is met, there is no need for the recipe to continue and consequently it is OK for the |chef| run to be stopped."
msgstr ""

#: ../source/essentials_cookbook_recipes_end_chef_run.rst:56
# ff4f34a12b054e61b93977235451df29
msgid "**Using a rescue block**"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_rescue_block.rst:3
# 43c3704b930c4eb493f43144d6dfe600
msgid "Since recipes are written in |ruby|, they can be written to attempt to handle error conditions using the ``rescue`` block."
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_rescue_block.rst:5
# f91c4001eb7049df9ceb0a1b85f11674
msgid "For example:"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_rescue_block.rst:16
# 760e2a277535408a81f09717f5c7fb3b
msgid "where ``data_bag_item`` makes an HTTP request to the |chef server| to get a data bag item named ``flowers``. If there is a problem, the request will return a ``Net::HTTPServerException``. The ``rescue`` block can be used to try to retry or otherwise handle the situation. If the ``rescue`` block is unable to handle the situation, then the ``raise`` keyword is used to specify the message to be raised."
msgstr ""

#: ../source/essentials_cookbook_recipes_end_chef_run.rst:60
# b8e7be0b96344da08e1f8db5a55d9b3a
msgid "**Sending a fatal message to a log file**"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_send_fatal_message.rst:3
# c196b446c3404264a1238b4b3d1586e3
msgid "If a log entry is required, use ``Chef::Application.fatal!`` to log a fatal message to a log file using standard error output. After the log message is sent, |chef| will stop the run. Something like the following can be used to trigger this type of log entry:"
msgstr ""

#: ../../step_recipe/step_recipe_end_chef_run_send_fatal_message.rst:9
# c536ababcc81481bae9606dd1018f156
msgid "where ``some_condition`` is the condition to be met, ``return_code`` is the code that will be identified in the log entry. When this condition is met, |chef| will exit, send a log message and return the code specified with ``return_code`` from the process."
msgstr ""

