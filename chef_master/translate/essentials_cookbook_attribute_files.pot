# SOME DESCRIPTIVE TITLE.
# Copyright (C) This work is licensed under a Creative Commons Attribution 3.0 Unported License
# This file is distributed under the same license as the Chef Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Chef Docs 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-03-14 17:09\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/essentials_cookbook_attribute_files.rst:34
# cc6df8b56f274ceeba2abdb5edadc655
msgid "About Attribute Files"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute.rst:4
# 6d660b9144ee443c924db1c24751c8c6
msgid "An attribute can be defined in a cookbook (or a recipe) and then used to override the default settings on a node. When a cookbook is loaded during a |chef| run, these attributes are compared to the attributes that are already present on the node. When the cookbook attributes take precedence over the default attributes, |chef| will apply those new settings and values during the |chef| run on the node."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file.rst:4
# 340bff1f543b47998bb75c55b46fe681
msgid "An attribute file is located in the ``attributes/`` sub-directory for a cookbook. When a cookbook is run against a node, the attributes contained in all attribute files are evaluated in the context of the node object. Node methods (when present) are used to set attribute values on a node. For example, the |apache| cookbook contains the following attribute file (called ``default.rb``):"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_file.rst:11
# 2c98c06293e3457facb4e09dc20bbef8
msgid "The use of the node object is implicit here. The following example is equivalent to the one above:"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:44
#: ../source/essentials_cookbook_attribute_files.rst:59
# d2a9d74eecc9463d8bce464bea315866
# bfd904b2b8714dbd9c5276d21e7d6685
msgid "Method"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:45
#: ../source/essentials_cookbook_attribute_files.rst:60
# e49797016517436bb1ae531ec7f4e4de
# 6765542620eb44fc937c5d6a19e7ed9e
msgid "Description"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:46
# 82f06bb692774d5581990a9bb8c8aa6c
msgid ":doc:`essentials_cookbook_attribute_files_ordering`"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:47
# 678a82c31eaa475b932a5164cfd22497
msgid "When |chef| loads cookbook attribute files, it does so in alphabetical order for all the cookbooks."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:48
# 1ec99d59477c423d9c11fdc8717301d3
msgid ":doc:`essentials_cookbook_attribute_files_accessor_methods`"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:49
# 02c4df8e4e664596bb36214ea76a060d
msgid "Attribute accessor methods are automatically created and the method invocation can be used interchangeably with the keys."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:50
# cb90cc4dd6714360b625f295a84e219e
msgid ":doc:`essentials_cookbook_attribute_files_reload`"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:51
# f5450fa7c2e94ccbb4283b72af9b917f
msgid "Attributes sometimes depend on actions taken from within recipes, so it may be necessary to reload a given attribute from within a recipe."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_when_to_use.rst:5
# b7c51313374e422fa56d400364ec3af4
msgid "An attribute is a specific detail about a node, such as an IP address, a host name, a list of loaded kernel modules, the version(s) of available programming languages that are available, and so on. An attribute may be unique to a specific node or it can be identical across every node in the organization. Attributes are most commonly set from a cookbook, by using |knife|, or are retrieved by |ohai| from each node prior to every |chef| run. All attributes are indexed for search on the |chef server|. Good candidates for attributes include:"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_when_to_use.rst:7
# 4529dab5dbc34f7faba53b2fa7bd0264
msgid "any cross-platform abstraction for an application, such as the path to a configuration files"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_when_to_use.rst:8
# 1f19c4c92b6c4d63852bd95ed6f61d56
msgid "default values for tunable settings, such as the amount of memory assigned to a process or the number of workers to spawn"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_when_to_use.rst:9
# 73040509c3444b0ab4c543cb2a90ecd8
msgid "anything that may need to be persisted in node data between |chef| runs"
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_when_to_use.rst:11
# 28a8a6faddb44f24ba0fe761d1331d48
msgid "In general, attribute precedence is set to enable cookbooks and roles to define attribute defaults, for normal attributes to define the values that should be specific for a node, and for override attributes to force a certain value, even when a node already has that value specified."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_when_to_use.rst:13
# fcabd995e2bb4ad3a786f4a5a64ac5d3
msgid "One approach is to set attributes at the same precedence level by setting attributes in a cookbook's attribute files, and then also setting the same default attributes (but with different values) using a role. The attributes set in the role will be deep merged on top of the attributes from the attribute file, and the attributes set by the role will take precedence over the attributes specified in the cookbook's attribute files."
msgstr ""

#: ../../includes_cookbooks/includes_cookbooks_attribute_when_to_use.rst:15
# 5dd1f8c930584ae890f3e71f24d1eb51
msgid "Another (much less common) approach is to set a value only if an attribute has no value. This can be done by using the ``_unless`` variants of the attribute priority methods: ``default_unless``, ``set_unless``, and ``override_unless``. These variants should be used carefully because when they are used, the attributes applied to nodes may become out of sync with the values in the cookbooks as these cookbooks are updated. This approach can create situations where two otherwise identical nodes end up having slightly different configurations. This approach can also be a challenge to debug, so it is recommended to use the ``_unless`` variants carefully (and only when they are really necessary)."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:61
# a35fc152d51148b584bb856d6432cae6
msgid ":doc:`essentials_cookbook_attribute_files_attribute_types`"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:62
# 6afed0bbda764d3881acbf35eaa3b1ca
msgid "There are four types of attributes: ``default``, ``normal``, ``override``, and ``automatic``."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:63
# 02260aa271c144f99dc5655c37ddf02f
msgid ":doc:`essentials_cookbook_attribute_files_attribute_persistence`"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:64
# 1a32f31aa750422093fafcc97a7d9845
msgid "During a |chef| run, saved attributes are retrieved from the |chef server| and are merged with the attributes on the local system."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:65
# ff9724e41cf34e9780bc9f00aa8816e3
msgid ":doc:`essentials_cookbook_attribute_files_attribute_precedence`"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:66
# 1fe20ec862754418a73df5baa199fd0f
msgid "At the beginning of a |chef| run, all default, override, and automatic attributes are reset."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:67
# 7a81290e58a94345b0ee81519a866b9d
msgid ":doc:`essentials_cookbook_attribute_files_attribute_automatic`"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:68
# b4ae70b3d2e54379a6f0880c69b3848a
msgid "An automatic attribute is data that must be understood by |chef|, but not modified."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:69
# 1c23fee32b164dc09e5838c17206bb48
msgid ":doc:`essentials_cookbook_attribute_files_attribute_notation`"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:70
# 400baded3c5f467299d23e259d7db088
msgid "Attributes are a special key-value store called a mash within the context of the |ruby| DSL."
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:71
# 3003a0b57c2f4cbdb26a33f37c58444f
msgid ":doc:`essentials_cookbook_attribute_files_attribute_methods`"
msgstr ""

#: ../source/essentials_cookbook_attribute_files.rst:72
# 2dc0d6d73ffe4485bd12ebeaaf1ad923
msgid "Methods are available to set attribute precedence in a cookbook."
msgstr ""

