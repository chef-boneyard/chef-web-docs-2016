.. Description strings for resources, including a) official built-in resources, and b) lightweight resources that have been added to various cookbooks.

.. It is OK to put the |replace| strings in here.

.. The following swap variables cannot be used: |version| (this will pull the "version" of the docs from the Sphinx source)

.. pattern: attribute resource name_of_resource



.. A -- EDITED
.. 

.. |additional_remotes resource scm| replace:: |git| only. An array of additional remotes that are added to the repository configuration.
.. |allow_downgrade resource package| replace:: An attribute for the ``yum_package`` provider that indicates that |yum| can downgrade a package to satisfy a requested version. Default value: ``false``.
.. |allow_downgrade resource yum| replace:: Indicates that |yum| can downgrade a package to satisfy requested version requirements. Default value: ``false``. This attribute is only available for the ``yum_package`` resource.
.. |arch resource package| replace:: An attribute for the ``yum_package`` provider that is used to specify the architecture of the package that is being installed or upgraded. Default value: ``nil``.
.. |arch resource yum| replace:: The architecture of the package that will be installed or upgraded. (This value can also be passed as part of the package name.) Default value: ``nil``. This attribute is only available for the ``yum_package`` resource.
.. |after_restart resource deploy| replace:: A block or path to a file that contains |chef| code that is run after restarting. Default value: ``deploy/after_restart.rb``.
.. |app lwrp dmg_package| replace:: The name of the application used for the ``/Volumes`` directory and ``.app`` directory copied to ``/Applications``. Default value: ``name``.
.. |append resource group| replace:: Indicates whether members are .  true: add these members to the group, false: these are the definitive group members   Default value: ``false``.
.. |arguments lwrp chef_handler| replace:: An array of arguments that are passed to the initializer for the handler class.
.. |availability_zone lwrp aws_ebs_volume| replace:: The |amazon ec2| availability zone.
.. |aws_access_key lwrp aws_ebs_volume| replace:: The user name for the secret access key for the API endpoint used with |amazon ec2|.
.. |aws_access_key lwrp aws_elastic_ip| replace:: The user name for the secret access key for the API endpoint used with |amazon ec2|.
.. |aws_access_key lwrp aws_elastic_lb| replace:: The user name for the secret access key for the API endpoint used with |amazon ec2|.
.. |aws_access_key lwrp aws_resource_tag| replace:: The user name for the secret access key for the API endpoint used with |amazon ec2|.
.. |aws_secret_access_key lwrp aws_ebs_volume| replace:: The password for the secret access key for the API endpoint used with |amazon ec2|.
.. |aws_secret_access_key lwrp aws_elastic_ip| replace:: The password for the secret access key for the API endpoint used with |amazon ec2|.
.. |aws_secret_access_key lwrp aws_elastic_lb| replace:: The password for the secret access key for the API endpoint used with |amazon ec2|.
.. |aws_secret_access_key lwrp aws_resource_tag| replace:: The password for the secret access key for the API endpoint used with |amazon ec2|.

.. B -- EDITED
.. 

.. |backup resource cookbook_file| replace:: The number of backups of a file that should be kept. Set to ``false`` to prevent backups from being kept. Default value: ``5``.
.. |backup resource file| replace:: The number of backups of a file that should be kept. Set to ``false`` to prevent backups from being kept. Default value: ``5``.
.. |backup resource remote_file| replace:: The number of backups of a file that should be kept. Set to ``false`` to prevent backups from being kept. Default value: ``5``.
.. |backup resource template| replace:: The number of backups of a file that should be kept. Set to ``false`` to prevent backups from being kept. Default value: ``5``.
.. |bcast resource ifconfig| replace:: The broadcast address for the network interface. One some platforms this attribute is not set with |ifconfig|, but is instead added to the startup configuration file for the network interface. Default value: ``nil``.
.. |before_migrate resource deploy| replace:: A block or path to a file that contains |chef| code that is run before a migration. Default value: ``deploy/before_migrate.rb``.
.. |before_restart resource deploy| replace:: A block or path to a file that contains |chef| code that is run before restarting. Default value: ``deploy/before_restart.rb``.
.. |before_symlink resource deploy| replace:: A block or path to a file that contains |chef| code that is run before symbolic linking. Default value: ``deploy/before_symlink.rb``.
.. |block resource ruby_block| replace:: A block of |ruby| code. Default value: ``nil``.
.. |blocking lwrp transmission_torrent_file| replace:: Indicates whether a file should be downloaded in a single |chef| run. If ``false``, the download may take place across one (or more) |chef| runs.
.. |bootproto resource ifconfig| replace:: The boot protocol---such as "dhcp"--that is used by the network interface. Default value: ``nil``.
.. |builddir lwrp pacman_aur| replace:: The directory into which a package is download and built. Default value: ``Chef::Config[:file_cache_path]/builds``.


.. C -- EDITED
.. 

.. |channel_name lwrp php_pear_channel| replace:: The name of a channel that a |pear| installation needs to know about (i.e. "channel discovery").
.. |channel_xml lwrp php_pear_channel| replace:: The channel definition file for a channel.
.. |checksum lwrp dmg_package| replace:: The |sha256| checksum for the |apple disk image| to be downloaded. Default value: ``nil``.
.. |checksum resource remote_file| replace:: Optional. The SHA-256 checksum of the file. If the local file matches the checksum, |chef| will not download it. Default value: ``nil``.
.. |chef_gem provider package| replace:: Can be used with the ``options`` attribute. The ``chef_gem`` provider should be used when installing a gem only for |chef| resources. The ``chef_gem`` provider works with all of the same attributes and options as the ``gem_package`` provider, but does not accept ``gem_binary`` because it always uses the ``CurrentGemEnvironment`` under which |chef| is running. In addition to performing actions of the ``gem_package`` resource, ``chef_gem`` does the following: runs its actions immediately, before convergence, allowing you to use a gem in a recipe immediately after it is installed; and runs ``Gem.clear_paths`` after the action, ensuring that gem is aware of changes so that it can be required immediately after it is installed.
.. |chunk resource mdadm| replace:: The chunk size. Default value: ``16``.
.. |class_name lwrp chef_handler| replace:: The name of the handler class. This can be module name-spaced.
.. |cluster_members lwrp riak_cluster| replace:: A list of nodes that should be part of the cluster. Default value: discovered by |chef| search functionality.
.. |cluster_name lwrp riak_cluster| replace:: The name of the local node (as identified by the ``riak.erlang.node_name`` attribute).
.. |code resource erlang_call| replace:: The code to be executed on a node located within a distributed |erlang| system. Default value: ``q()``.
.. |code resource powershell_script| replace:: The quoted script of code to execute. Default value: ``nil``.
.. |code resource script| replace:: The quoted script of code to execute. Default value: ``nil``.
.. |command resource cron| replace:: The command to run. Default value: ``*``.
.. |command resource execute| replace:: The name of the command that will be executed. Default value: ``name``.
.. |command resource powershell_script| replace:: The name of the command to execute. Default value: ``name``.
.. |command resource script| replace:: The name of the command to execute. Default value: ``name``.
.. |comment resource user| replace:: One (or more) comments about the user. Default value: ``nil``.
.. |components lwrp apt_repository| replace:: An array of components. For example: ``["main", "street"])``. Default value: ``[]``.
.. |content resource file| replace:: A string that is written to the file. The contents of this attribute will replace any previous content when this attribute has something other than the default value. Default value: ``nil`` (don't modify content).
.. |continue_seeding lwrp transmission_torrent_file| replace:: Indicates whether a file should continue to be seeded to the |bittorrent| swarm after download.
.. |cookbook lwrp daemontools_service| replace:: The cookbook in which the template files are located (if they are not located in the current cookbook).
.. |cookbook resource cookbook_file| replace:: The cookbook in which a file is located. Default value: ``nil`` (the current cookbook).
.. |cookbook resource remote_directory| replace:: The cookbook in which a file is located. Default value: ``nil`` (the current cookbook).
.. |cookbook resource template| replace:: The cookbook in which a template is located. Default value: ``nil`` (the current cookbook).
.. |cookie resource erlang_call| replace:: The magic cookie for the node to which a connection is made.
.. |create_dirs_before_symlink resource deploy| replace:: The directories to create before symbolic linking. This runs after ``purge_before_symlink``. Default value: ``%w{tmp public config}``.
.. |creates resource execute| replace:: Indicates that a command to create a file will not be run when that file already exists. Default value: ``nil``.
.. |customer lwrp dynect_rr| replace:: The |dns update api| customer ID.
.. |cwd lwrp djbdns_rr| replace:: The current working directory in which the |tinydns| data file is located.
.. |cwd resource execute| replace:: The current working directory from which a command will be run. Default value: ``nil``.

.. D -- EDITED
.. 

.. |database lwrp mysql_database| replace:: The name of the database to be created. This attribute can be used only with the ``create_db action``.
.. |day resource cron| replace:: The day of month at which the |cron| entry should run (1 - 31). Default value: ``*``.
.. |dev_src lwrp apt_repository| replace:: Indicates whether the ``deb-src`` source repository is added. Default value: ``false``.
.. |delim resource directory| replace:: The delimiter that is used to separate multiple values for a single key.
.. |deploy_to resource deploy| replace:: The "meta root" for the application.
.. |deploy_revision provider deploy| replace:: The ``deploy_revision`` provider is the recommended provider, even if it is not listed as the default. The ``deploy_revision`` provider is used to ensure that the name of a release sub-directory is based on a revision identifier. For users of |git|, this will be the familiar SHA checksum. For users of |svn|, it will be the integer revision number. If a name other than a revision identifier is provided---branch names, tags, and so on---|chef| will ignore the alternate names and will look up the revision identifier and use it to name the release sub-directory. When the ``deploy_revision`` provider is given an exact revision to deploy, it will behave in an idempotent manner. The ``deploy_revision`` provider results in deployed components under the destination location that is owned by the user who runs the application. This is sometimes an issue for certain workflows. If issues arise, consider the following: incorporate changing permissions to the desired end state from within a recipe; add a ``before_restart`` block to fix up the permissions; have an unprivileged user (for example: ``opscode``) be the owner of the ``deploy`` directory and another unprivileged user (for example: ``opscodeapp``) run the application. Most often, this is the solution that works best. When using the ``deploy_revision`` provider, and when the deploy fails for any reason, and when the same code is used to re-deploy, the action should be set manually to ``:force_deploy``. Forcing the re-deploy will remove the old release directory, after which the deploy can proceed as usual. (Forcing a re-deploy over the current release can cause some downtime.) Deployed revisions are stored in ``(file_cache_path)/revision-deploys/(deploy_path)``.
.. |depth resource scm| replace:: |git| only. The number of past revisions that will be included in the |git| shallow clone. Default value: ``nil`` (full clone).
.. |destination lwrp dmg_package| replace:: The directory to which the ``.app`` directory is copied. Default value: ``/Applications``.
.. |destination lwrp firewall_rule| replace:: The IP address or subnet to which traffic is routed.
.. |destination resource scm| replace:: The path to the location to which the source will be cloned, checked out, or exported.
.. |device lwrp aws_ebs_volume| replace:: The local block device to be attached to an |amazon ebs| volume.
.. |device resource ifconfig| replace:: The network interface to be configured. Default value: ``nil``.
.. |device resource mount| replace:: Required for ``:umount`` and ``:remout`` actions (for the purpose of checking the mount command output for presence). The special block device or remote node, a label, or a uuid to be mounted. Default value: ``nil``.
.. |device resource route| replace:: The network interface to which the route applies.
.. |device_type resource mount| replace:: The type of device: ``:device``, ``:label``, or ``:uuid``. Default value: ``:device``.
.. |devices resource mdadm| replace:: An array of devices to include in the |raid| array.
.. |directives lwrp php_pear| replace:: Extra extension directives (or settings) for a |pecl|. On most platforms, these directives are rendered into the extension's .ini file.
.. |directory lwrp daemontools_service| replace:: The directory in which the service is set up.
.. |distributed resource directory| replace:: Indicates that a node is a distributed |erlang| node. Default value: ``false``.
.. |distribution lwrp apt_repository| replace:: The short name for the distribution. For example: ``lucid``.
.. |dmg_name lwrp dmg_package| replace:: The name of the |apple disk image| (if it is not the same as the ``app`` attribute or if the name of the application contains spaces). Default value: ``nil``.
.. |dump resource mount| replace:: The dump frequency (in days) used while creating a file systems table (fstab) entry. Default value: ``0``.

.. E -- EDITED
.. 

.. |enable_submodules resource deploy| replace:: |git| only. Use to perform a sub-module initialization and update. Default value: ``false``.
.. |enable_submodules resource scm| replace:: |git| only. Use to perform a sub-module initialization and update. Default value: ``false``.
.. |env lwrp daemontools_service| replace:: Use to create an ``env`` directory for a service. The directory will contain files named for each environment variable that is required, with the contents of its value in a hash. For more information about how to use this attribute, see: http://cr.yp.to/daemontools/envdir.html. Default value: ``{}``.
.. |environment resource deploy| replace:: A hash of the form ``{"ENV_VARIABLE"=>"VALUE"}``.
.. |environment resource execute| replace:: A hash of environment variables that should be set before running a command. Default value: ``nil``.

.. F -- EDITED
.. 

.. |files_backup resource remote_directory| replace:: The number of backup copies to keep for files in the directory. Default value: ``5``.
.. |files_group resource remote_directory| replace:: The group for the files in the directory. Default value: ``nil``.
.. |files_mode resource remote_directory| replace:: The octal mode of the file. When specifying ``files_mode``, the value can be a quoted string ("644"). For a numeric value, it should be five digits ("00644") to ensure that it is correctly parsed by |ruby|. The default value for this attribute varies.
.. |files_owner resource remote_directory| replace:: The owner of the files in the directory. Default value: ``nil``.
.. |finish lwrp daemontools_service| replace:: Indicates whether a service has a finish script. Default value: ``nil``.
.. |flags resource powershell_script| replace:: The command line flags that are passed to the interpreter when invoked. Default value: ``nil``.
.. |flags resource script| replace:: The command line flags that are passed to the interpreter when invoked. Default value: ``nil``.
.. |flush_cache resource package| replace:: An attribute for the ``yum_package`` provider that is used to flush the internal YumCache before or after an install or upgrade action. Default value: ``{ :before => false, :after => false }``.
.. |flush_cache resource yum| replace:: An array that indicates whether the |yum| cache should be flushed before or after a |yum| operation that installs, upgrades, or removes a package. Default value: ``nil``. Possible values: ``:before`` and ``:after``. This attribute is only available for the ``yum_package`` resource.
.. |fqdn lwrp djbdns_rr| replace:: The fully qualified domain name.
.. |fqdn lwrp dynect_rr| replace:: The fully qualified domain name.
.. |fstype resource mount| replace:: Required. The file system type (fstype) of the device. Default value: ``nil``.

.. G -- EDITED
.. 

.. |gateway resource route| replace:: The gateway for the route.
.. |gem_binary resource package| replace:: An attribute for the ``gem_package`` provider that is used to specify a |gems| binary. This attribute is useful when installing |ruby| 1.9 |gems| while running |chef| in |ruby| 1.8.  Default value: ``nil (API)``.
.. |gem_package provider package| replace:: Can be used with the ``options`` attribute. The ``gem_package`` provider should be used when installing a gem to be used on the system.
.. |gid resource group| replace:: The group identifier. Default value: ``nil``.
.. |gid resource user| replace:: The primary group identifier. Default value: ``nil``.
.. |git_ssh_wrapper resource deploy| replace:: The alias for the ``ssh_wrapper``. This attribute only works with |git|.
.. |group lwrp daemontools_service| replace:: The group of the service directory and scripts.
.. |group lwrp python_virtualenv| replace:: The string or ID that identifies the group owner of the virtual |python| environment.
.. |group lwrp transmission_torrent_file| replace:: A string or ID that identifies the group owner of a file.
.. |group resource cookbook_file| replace:: A string or ID that identifies the group owner of the file.
.. |group resource deploy| replace:: The system group that is responsible for the checked-out code. Default value: ``nil``.
.. |group resource directory| replace:: A string or ID that identifies the group owner of a file.
.. |group resource execute| replace:: The group name or group ID that should be changed before running a command. Default value: ``nil``.
.. |group resource file| replace:: A string or ID that identifies the group owner of the file.
.. |group resource link| replace:: A string or ID that identifies the group associated with a symbolic link.
.. |group resource remote_file| replace:: A string or ID that identifies the group owner of the file.
.. |group resource scm| replace:: The system group that is responsible for the checked-out code. Default value: ``nil``.
.. |group resource template| replace:: A string or ID that identifies the group owner of the file.
.. |group_name resource group| replace:: A string or ID that identifies the name of the group. Default value: ``name``.


.. H -- EDITED
.. 

.. |headers resource http_request| replace:: A hash of custom headers. Default value: ``{}``.
.. |home resource cron| replace:: Sets the HOME environment variable.
.. |home resource user| replace:: The location of the home directory. Default value: ``nil``.
.. |host lwrp mysql_database| replace:: Host of the database server.
.. |hour resource cron| replace:: The hour at which the |cron| entry should run (0 - 23). Default value: ``*``.
.. |hwaddr resource ifconfig| replace:: The hardware address for the network interface. Default value: ``nil``.

.. I -- EDITED
.. 

.. |inet_addr resource ifconfig| replace:: The Internet host address for the network interface. Default value: ``nil``.
.. |inherits resource cookbook_file| replace:: |windows| only. Indicates that the file inherits rights from its parent. Default value: ``true``.
.. |inherits resource directory| replace:: |windows| only. Indicates that the file inherits rights from its parent. Default value: ``true``.
.. |inherits resource file| replace:: |windows| only. Indicates that the file inherits rights from its parent. Default value: ``true``.
.. |inherits resource remote_directory| replace:: |windows| only. Indicates that the file inherits rights from its parent. Default value: ``true``.
.. |inherits resource remote_file| replace:: |windows| only. Indicates that the file inherits rights from its parent. Default value: ``true``.
.. |inherits resource template| replace:: |windows| only. Indicates that the file inherits rights from its parent. Default value: ``true``.
.. |installer_type lwrp windows_package| replace:: The type of windows installation package: ``:msi``, ``:inno``, ``:nsis``, ``:wise``, ``:installshield``, or ``:custom``. If this value is not specified, the provider will attempt to identify the installer type on its own and will use the best match. If this value cannot be properly specified, use the ``:custom`` value to pass a value to the ``installer_type`` attribute and then the ``options`` attribute to set the proper flags for a silent or quite installation.
.. |interpreter lwrp python_virtualenv| replace:: The |python| interpreter to use. Default value: ``python2.6``.
.. |interpreter resource powershell_script| replace:: The script interpreter to be used during code execution. Default value: ``nil``.
.. |interpreter resource script| replace:: The script interpreter to be used during code execution. Default value: ``nil``.
.. |ip lwrp aws_elastic_ip| replace:: The IP address that is allocated to the node.
.. |ip lwrp djbdns_rr| replace:: The IP address.

.. J -- EDITED
.. 


.. K -- EDITED
.. 

.. |key lwrp apt_repository| replace:: The fingerprint of the key server or the URI for the |pgp| encryption key associated with the repository specified by ``repo_name``. Default value: ``nil``.
.. |key_name lwrp windows_registry| replace:: The registry key to create or modify.
.. |key_name resource directory| replace:: The name of the key that will be created, deleted, or modified. Default value: ``name``.
.. |keyserver lwrp apt_repository| replace:: The key server from which a |pgp| encryption key is downloaded. Default value: ``nil``.

.. L -- EDITED
.. 

.. |layout create_dirs_before_symlink resource deploy| replace:: Use this layout to create directories that need to exist in the release before the symlink step. For example, in the context of a rails app, ``.gitignore`` may be used to keep tempfiles out of a repository and to prevent the ``tmp/`` directory from being part of checked out code. The symlink step will create a symlink from ``shared/pids`` to ``RELEASE/tmp/pids``. Since this behavior would fail if the ``RELEASE/tmp`` directory did not exist, that directory must be created for the deployment to proceed. It is not necessary to create directories that will be symlinked in the symlink step, such as ``log/``, as these do not rely on the existence of other directories in the release. Directories that already exist will be overwritten. Default value: ``["tmp", "public", "config"]``.
.. |layout purge_before_symlink resource deploy| replace:: Use this layout to remove directories before the production copy from a shared directory is symlinked in. ``purge_before_symlink`` is an array of directories that are removed before symlink setup. Default value: ``["log", "tmp/pids", "public/system"]``.
.. |layout symlink_before_migrate resource deploy| replace:: Use this layout to link required configuration files into place so they can be available during a migration step. ``symlink_before_migrate`` is a hash that maps files in the shared directory to files in the current release. Use ``symlink_before_migrate({})`` or ``symlink_before_migrate nil`` instead of ``symlink_before_migrate {}`` because the ``{}`` is interpreted as a block rather than an empty hash. Default value: ``{"config/database.yml" => "config/database.yml"}``.
.. |layout symlinks resource deploy| replace:: Use this layout to map files and directories during the main symlinking step. ``symlinks`` is a hash that maps files and directories from their locations in the shared directory to locations in the release directory. Default value: ``{"system" => "public/system", "pids" => "tmp/pids", "log" => "log"}``.
.. |level resource log| replace:: The level of logging that |chef| will display. |chef| uses the ``mixlib-log`` (https://github.com/opscode/mixlib-log) to handle logging behavior. Options (in order of priority): ``:debug``, ``:info``, ``:warn``, ``:error``, and ``:fatal``. Default value: ``:info``.
.. |level resource mdadm| replace:: The |raid| level. Default value: ``1``.
.. |link_type resource link| replace:: The type of link: ``:symbolic`` or ``:hard``. Default value: ``symbolic``.
.. |local resource template| replace:: Indicates whether a template is already present on the node. Default value: ``false``.
.. |log lwrp daemontools_service| replace:: Indicates whether a service has a custom logging script. Default value: ``nil``.
.. |lwrp action add apt_repository| replace:: Use to add a new repository.
.. |lwrp action add djbdns_rr| replace:: Use to add a new resource record to |tinydns|.
.. |lwrp action add php_pear_channel| replace:: Use to add a channel to the channel list. Typically, this is used only for private channels. Public channels should be added using the ``:discover`` action.
.. |lwrp action allow firewall_rule| replace:: Use to set a rule that allows incoming traffic.
.. |lwrp action alrm daemontools_service| replace:: Use to send the ``ALRM`` signal. The following command is used: ``svc -a``.
.. |lwrp action associate aws_elastic_ip| replace:: Use to associate the specified IP address with a node.
.. |lwrp action attach aws_ebs_volume| replace:: Use to attach an existing volume to a node.
.. |lwrp action build pacman_aur| replace:: Use to build a package using the information stored in a |archlinux pkgbuild| script.
.. |lwrp action cont daemontools_service| replace:: Use to send the ``CONT`` signal. The following command is used: ``svc -c``.
.. |lwrp action create aws_ebs_volume| replace:: Use to create a new |amazon ebs| volume. This action will only make the API call to create a new volume, which will get a random volume identifier that is generated by |amazon ec2|. This identifier can be attached in the same resource by specifying the actions as an array.
.. |lwrp action create dynect_rr| replace:: Use to create a record.
.. |lwrp action create python_virtualenv| replace:: Use to create a virtual |python| environment.
.. |lwrp action create samba_user| replace:: Use to create a user.
.. |lwrp action create transmission_torrent_file| replace:: Use to download a file using the |bittorrent| protocol.
.. |lwrp action create windows_registry| replace:: Use to create a registry key with the provided values.
.. |lwrp action create_db mysql_database| replace:: Use to create a database.
.. |lwrp action delete dynect_rr| replace:: Use to delete a record.
.. |lwrp action delete python_virtualenv| replace:: Use to delete a virtual |python| environment.
.. |lwrp action delete samba_user| replace:: Use to enable a user.
.. |lwrp action deny firewall_rule| replace:: Use to set a rule that denies incoming traffic.
.. |lwrp action detach aws_ebs_volume| replace:: Use to detach the specified volume from a node.
.. |lwrp action disable bluepill_service| replace:: Use to disable a service by removing a pill link.
.. |lwrp action disable chef_handler| replace:: Use to disable the |chef| handler for the current |chef| run on the current node.
.. |lwrp action disable daemontools_service| replace:: Use to disable a service by removing the link to the service directory.
.. |lwrp action disable firewall| replace:: Use to disable a firewall. Rules will be de-activated and the node will be put into an unprotected state.
.. |lwrp action disassociate aws_elastic_ip| replace:: Use to disassociate the specified IP address from a node.
.. |lwrp action discover php_pear_channel| replace:: Use to initialize a channel from its server.
.. |lwrp action enable bluepill_service| replace:: Use to enable a service by adding a pill link.
.. |lwrp action enable chef_handler| replace:: Use to enable the |chef| handler for the current |chef| run on the current node.
.. |lwrp action enable daemontools_service| replace:: Use to enable a service by setting up the service directory and link.
.. |lwrp action enable firewall| replace:: Use to enable a firewall. Rules that have been defined for that firewall will be activated.
.. |lwrp action enable samba_user| replace:: Use to delete a user.
.. |lwrp action flush_tables_with_read_lock mysql_database| replace:: Use to flush tables with a read lock. This action should be used only when performing replication.
.. |lwrp action hup daemontools_service| replace:: Use to send the ``HUP`` signal. The following command is used: ``svc -h``.
.. |lwrp action install dmg_package| replace:: Use to install an application. (There is no ``:uninstall`` action because on in the |mac os x| environment, uninstalling an application only requires it being dragged to the trash can.)
.. |lwrp action install pacman_aur| replace:: Use to install a package that has been built with the ``:build`` action.
.. |lwrp action install pacman_group| replace:: Use to install a group.
.. |lwrp action install php_pear| replace:: Use to install a |pear| package. If a version is provided, use to install that version.
.. |lwrp action install python_pip| replace:: Use to install a |python pip| package. If a version is provided, use to install that version.
.. |lwrp action install windows_package| replace:: Use to install a package.
.. |lwrp action int daemontools_service| replace:: Use to send the ``INT`` signal. The following command is used: ``svc -i``.
.. |lwrp action join riak_cluster| replace:: Use to join a local node to a cluster.
.. |lwrp action kill daemontools_service| replace:: Use to send the ``KILL`` signal. The following command is used: ``svc -k``.
.. |lwrp action load bluepill_service| replace:: Use to load a service's pill to |bluepill|.
.. |lwrp action modify windows_registry| replace:: Use to modify an existing registry key with the provided values.
.. |lwrp action once daemontools_service| replace:: Use to start a service. The service does not restart if it stops. The following command is used: ``svc -o``.
.. |lwrp action pause daemontools_service| replace:: Use to send the ``STOP`` signal to pause a service. The following command is used: ``svc -p``.
.. |lwrp action prune aws_ebs_volume| replace:: Use to prune older snapshots from a node.
.. |lwrp action purge php_pear| replace:: Use to purge a |pear| package. This is identical in behavior to the ``:remove`` action.
.. |lwrp action purge python_pip| replace:: Use to purge a |python pip| package. This is identical in behavior to the ``:remove`` action.
.. |lwrp action query mysql_database| replace:: Use to query a database.
.. |lwrp action reject firewall_rule| replace:: Use to set a rule that rejects incoming traffic.
.. |lwrp action remove apt_repository| replace:: Use to delete a repository.
.. |lwrp action remove pacman_group| replace:: Use to remove a group.
.. |lwrp action remove php_pear| replace:: Use to remove a |pear| package.
.. |lwrp action remove php_pear_channel| replace:: Use to remove a channel from the channel list.
.. |lwrp action remove python_pip| replace:: Use to remove a |python pip| package.
.. |lwrp action remove windows_package| replace:: Use to remove a package.
.. |lwrp action replace dynect_rr| replace:: Use to replace an existing record.
.. |lwrp action reset firewall| replace:: Use to reset a firewall. Rules will be de-activated and the node will be put into the default state. This action does not enable or disable a firewall.
.. |lwrp action restart bluepill_service| replace:: Use to restart a service.
.. |lwrp action restart daemontools_service| replace:: Use to restart a service using the ``TERM`` signal. The following command is used: ``svc -t``.
.. |lwrp action snapshot aws_ebs_volume| replace:: Use to create a snapshot of the volume.
.. |lwrp action start bluepill_service| replace:: Use to start a service.
.. |lwrp action start daemontools_service| replace:: Use to start a service. If the service stops, restart it. The following command is used: ``svc -u``.
.. |lwrp action stop bluepill_service| replace:: Use to stop a service.
.. |lwrp action stop daemontools_service| replace:: Use to stop a service using the ``STOP`` signal. The following command is used: ``svc -p``.
.. |lwrp action term daemontools_service| replace:: Use to send the ``TERM`` signal. The following command is used: ``svc -t``.
.. |lwrp action unflush_tables mysql_database| replace:: Use to unflush tables. This action should be used only when performing replication.
.. |lwrp action unzip windows_zipfile| replace:: Use to unzip a compressed file.
.. |lwrp action up daemontools_service| replace:: Use to start a service. If the service stops, restart it. The following command is used: ``svc -u``.
.. |lwrp action update dynect_rr| replace:: Use to update an existing record.
.. |lwrp action update php_pear_channel| replace:: Use to update an existing channel.
.. |lwrp action upgrade php_pear| replace:: Use to upgrade a |pear| package. If a version is provided, use to upgrade to that version.
.. |lwrp action upgrade python_pip| replace:: Use to upgrade a |python pip| package. If a version is provided, use to upgrade to that version.
.. |lwrp action wait_for_ringready riak_cluster| replace:: Use to wait for cluster membership to converge ("all nodes in the cluster agree on the ring state") before joining a local node to a cluster.


.. M -- EDITED
.. 

.. |mailto resource cron| replace:: Sets the MAILTO environment variable.
.. |mask resource ifconfig| replace:: The netmask for the network interface. Default value: ``nil``.
.. |members resource group| replace:: Indicates that users are included in the group. Default value: ``nil``.
.. |message resource http_request| replace:: The message that is sent by the HTTP request. Default value: ``name``.
.. |metric resource ifconfig| replace:: The routing metric for the interface. Default value: ``nil``.
.. |migrate resource deploy| replace:: Indicates that the migration command will be run. Default value: ``false``.
.. |migration_command resource deploy| replace:: A string that contains a shell command that can be executed to run a migration operation.
.. |minute resource cron| replace:: The minute at which the |cron| entry should run (0 - 59). Default value: ``*``.
.. |mode resource cookbook_file| replace:: The octal mode of the file. When specifying ``mode``, the value can be a quoted string ("644"). For a numeric value, it should be five digits ("00644") to ensure that it is correctly parsed by |ruby|. The default value for this attribute varies.
.. |mode resource directory| replace:: The octal mode of the file. When specifying ``mode``, the value can be a quoted string ("644"). For a numeric value, it should be five digits ("00644") to ensure that it is correctly parsed by |ruby|. The default value for this attribute varies.
.. |mode resource file| replace:: The octal mode of the file. When specifying ``mode``, the value can be a quoted string ("644"). For a numeric value, it should be five digits ("00644") to ensure that it is correctly parsed by |ruby|. The default value for this attribute varies.
.. |mode resource remote_file| replace:: The octal mode of the file. When specifying ``mode``, the value can be a quoted string ("644"). For a numeric value, it should be five digits ("00644") to ensure that it is correctly parsed by |ruby|. The default value for this attribute varies.
.. |mode resource template| replace:: The octal mode of the file. When specifying ``mode``, the value can be a quoted string ("644"). For a numeric value, it should be five digits ("00644") to ensure that it is correctly parsed by |ruby|. The default value for this attribute varies.
.. |month resource cron| replace:: The month in the year on which the |cron| entry should run (1 - 12). Default value: ``*``.
.. |mount_point resource mount| replace:: The directory (or path) in which the device should be mounted. Default value: ``name``.
.. |mtu resource ifconfig| replace:: The maximum transmission unit (MTU) for the network interface. Default value: ``nil``.



.. N -- EDITED
.. 

.. |name lwrp firewall| replace:: An arbitrary name that is used to uniquely identify the resource.
.. |name lwrp firewall_rule| replace:: A unique name for a firewall rule.
.. |name_type resource directory| replace:: Indicates whether the ``node_name`` attribute is a short node name (``sname``) or a long node name (``name``). A node with a long node name cannot communicate with a node with a short node name. Default value: ``sname``.
.. |netmask resource route| replace:: The decimal representation of the network mask. For example: ``255.255.255.0``.
.. |network resource ifconfig| replace:: The network address for the network interface. Default value: ``nil``.
.. |node_name resource directory| replace:: The hostname to which the node will connect. Default value: ``chef@localhost``.

.. O -- EDITED
.. 

.. |onboot resource ifconfig| replace:: Indicates that the network interface should be brought up on boot when this value is set to ``yes``. Default value: ``nil``.
.. |onparent resource ifconfig| replace:: Indicates that the network interface should be brought up when its parent interface is brought up when this value is set to ``yes``. Default value: ``nil``.
.. |options lwrp pacman_aur| replace:: Additional options that are passed to the configure command.
.. |options lwrp pacman_group| replace:: Additional options that are passed to the |archlinux pacman| command.
.. |options lwrp php_pear| replace:: Additional options that are added to the underlying |pear| package command.
.. |options lwrp python_pip| replace:: Additional options to the underlying |python pip| package command.
.. |options lwrp windows_package| replace:: Additional options that are passed to the installation command.
.. |options resource mount| replace:: An array or string that contains mount options. If this value is a string, it will be converted to an array. Default value: ``defaults``.
.. |options resource package| replace:: Additional options that are added to the underlying package command. Can be used with |apt|, |debian dkpg|, |gentoo|, |rpm|, and |rubygems|. Default value: ``nil``.
.. |options resource yum| replace:: Indicates that additional options to the ``yum localinstall`` command will be used, such as those that enable or disable a repository, disable integrity checking, and so on. Default value: ``nil``.
.. |overwrite lwrp windows_zipfile| replace:: Indicates that when a file exists, it will be overwritten. Default value: ``false``.
.. |overwrite resource remote_directory| replace:: Indicates that files (if different from the source) will be overwritten. Default value: ``true``.
.. |owner lwrp daemontools_service| replace:: The owner of the service directory and scripts.
.. |owner lwrp python_virtualenv| replace:: The owner of the virtual |python| environment.
.. |owner lwrp transmission_torrent_file| replace:: The owner of a file.
.. |owner resource cookbook_file| replace:: The owner of the file.
.. |owner resource directory| replace:: The owner of the directory.
.. |owner resource file| replace:: The owner of the file.
.. |owner resource link| replace:: The owner associated with a symbolic link.
.. |owner resource remote_file| replace:: The owner of the file.
.. |owner resource template| replace:: The owner of the file.

.. P -- EDITED
.. 

.. |package_name lwrp pacman_aur| replace:: The name of the package.
.. |package_name lwrp pacman_group| replace:: The name of the package group.
.. |package_name lwrp php_pear| replace:: The name of the |pear| package to install.
.. |package_name lwrp python_pip| replace:: The name of |python pip| package to instal.
.. |package_name lwrp windows_package| replace:: The display name of the application installation package. This is the same as the ``DisplayName`` registry value in the uninstallation data that is created during package installation. The easiest way to find the proper ``DisplayName`` value is to install a package on a machine and search for the uninstall information under one of the following registry keys: ``HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Uninstall``, ``HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Uninstall``, or ``HKEY_LOCAL_MACHINE\Software\Wow6464Node\Microsoft\Windows\CurrentVersion\Uninstall``. This value may also be identified by the uninstaller itself (in the ``Name`` column) and can be viewed while running the uninstaller.
.. |package_name resource package| replace:: The name of the package to install. Default value: ``name``.
.. |package_name resource yum| replace:: One of the following: the name of a package, the name of a package and its architecture; the name of a dependency. Default value: ``name``.
.. |pass resource mount| replace:: The pass number used by the file system check (fsck) command while creating a file systems table (fstab) entry. Default value: ``2``.
.. |password lwrp dynect_rr| replace:: The |dns update api| password.
.. |password lwrp mysql_database| replace:: The password for the specified username.
.. |password lwrp samba| replace:: The password for a user. This is passed to the ``smbpasswd`` program in |samba|.
.. |password resource user| replace:: The password shadow hash. This attribute requires that ``ruby-shadow`` be installed. This is part of the |debian| package: ``libshadow-ruby1.8``. Default value: ``nil``.
.. |patches lwrp pacman_aur| replace:: An array of files to be used as patches for the package. Default value: ``[]``.
.. |path lwrp python_virtualenv| replace:: The path to the location in which the virtual |python| environment will be created. Default value: ``\``.
.. |path resource cookbook_file| replace:: The path to the file. Default value: ``name``.
.. |path resource cron| replace:: Sets the PATH environment variable.
.. |path resource directory| replace:: The path to the directory. Default value: ``name``.
.. |path resource execute| replace:: An array of paths to use when searching for a command. These paths are not added to the command's environment $PATH. Default value: ``nil`` (uses system path).
.. |path resource file| replace:: The path to the file. Default value: ``name``.
.. |path resource remote_directory| replace:: The path to the directory. Default value: ``name``.
.. |path resource remote_file| replace:: The path to the file. Default value: ``name``.
.. |path resource template| replace:: The path to the file. Default value: ``name``.
.. |path_to_location lwrp windows_zipfile| replace:: The path to the location in which a file will be unzipped.
.. |pattern resource service| replace:: The pattern to look for in the process table. Default value: ``service_name``.
.. |pkgbuild_src lwrp pacman_aur| replace:: Indicates whether to use a custom ``PKGBUILD`` file. When ``true``, the ``pacman_aur`` lightweight resource will look for a ``cookbook_file`` named ``PKGBUILD`` to use as package instructions. Default value: ``false``.
.. |plugin resource ohai| replace:: Optional. Indicates that only the specified plug-ins are reloaded by |ohai|. Default value: ``nil`` (all plug-ins are reloaded ).
.. |port lwrp firewall_rule| replace:: The port number.
.. |position lwrp firewall_rule| replace:: The position at which a rule is inserted. If this value is not specified, a rule is inserted at the end of a rule list.
.. |preferred_state lwrp php_pear| replace:: By default, |pear| only installs stable packages. Packages can be installed in various non-stable states: ``devel``, ``alpha`` or ``beta``. Default value: ``stable``.
.. |protocol lwrp firewall_rule| replace:: The protocol used by the firewall rule. Valid values are: ``:all``, ``:udp``, ``:tcp``. Default value: ``:all``.
.. |purge resource remote_directory| replace:: Indicates that extra files found in the target directory will be purged. Default value: ``false``.
.. |purge_before_symlink resource deploy| replace:: An array of paths, relative to the application root, that are to be removed from a checkout before symbolic linking. Default value: ``%w{log tmp/pids public/system}``.

.. Q -- EDITED
.. 


.. R -- EDITED
.. 

.. |raid_device resource mdadm| replace:: The name of the |raid| device. Default value: ``name``.
.. |rdata lwrp dynect_rr| replace:: The record data.
.. |record_type lwrp dynect_rr| replace:: The type of record. For example: ``A``, ``CNAME``, and so on.
.. |recursive resource directory| replace:: Indicates whether the directory will be created or deleted recursively. For the ``owner``, ``group``, and ``mode`` attributes, the value of this attribute applies only to the leaf directory. Default value: ``false``.
.. |reference resource scm| replace:: The alias for revision. This action only works with the ``git`` provider.
.. |reload_command resource service| replace:: The command used to tell a service to reload its configuration. Default value: ``nil``.
.. |remote resource deploy| replace:: |git| only. The remote repository to be used when synchronizing an existing clone. Default value: ``origin``.
.. |remote resource scm| replace:: |git| only. Use to define the remote repository that is when synchronizing an existing close.
.. |repo resource deploy| replace:: The alias for the repository.
.. |repo_name lwrp apt_repository| replace:: The name of the repository. Default value: ``name``.
.. |repository resource deploy| replace:: The URI for the repository.
.. |repository resource scm| replace:: The URI for the repository.
.. |repository_cache resource deploy| replace:: The name of the sub-directory in which the pristine copy of an application's source is kept. Default value: ``cached-copy``.
.. |resource action add ifconfig| replace:: Use to run |ifconfig| to configure a network interface and (on some platforms) write a configuration file for that network interface.
.. |resource action add route| replace:: Use to add a route.
.. |resource action assemble mdadm| replace:: Use to assemble a previously created array into an active array.
.. |resource action checkout scm| replace:: Use to clone or check out the source. When a checkout is available, this provider does nothing.
.. |resource action create cookbook_file| replace:: Use to create a file.
.. |resource action create cron| replace:: Use to create an entry in a |cron| table file ("crontab"). If an entry already exists with the same name, use to update that entry.
.. |resource action create directory| replace:: Use to create a directory.
.. |resource action create env| replace:: Use to create a new environment variable.
.. |resource action create file| replace:: Use to create a file.
.. |resource action create group| replace:: Use to create a group.
.. |resource action create link| replace:: Use to create a link.
.. |resource action create mdadm| replace:: Use to create a new array with per-device superblocks.
.. |resource action create remote_file| replace:: Use to synchronize a file from a remote source to the file system.
.. |resource action create ruby_block| replace:: Use to create a |ruby| block.
.. |resource action create user| replace:: Use to create a user with given attributes. If the user already exists, use to ensure that the resource is in the correct state (which is effectively the same as ``:modify``).
.. |resource action create template| replace:: Use to create a file.
.. |resource action create_if_missing cookbook_file| replace:: Use to create a file if it doesn't already exist.
.. |resource action create_if_missing file| replace:: Use to create a file only if the file does not already exist. (When the file exists, nothing happens.)
.. |resource action create_if_missing remote_file| replace:: Use to create a file locally by fetching from the remote source, but only if the file doesn't yet exist.
.. |resource action create_if_missing template| replace:: Use to create a file only if it does not exist.
.. |resource action delete cookbook_file| replace:: Use to delete a file.
.. |resource action delete cron| replace:: Use to delete an entry from a |cron| table file ("crontab").
.. |resource action delete directory| replace:: Use to delete a directory.
.. |resource action delete env| replace:: Use to delete an environment variable.
.. |resource action delete file| replace:: Use to delete a file.
.. |resource action delete http_request| replace:: Use to send a DELETE request.
.. |resource action delete ifconfig| replace:: Use to run |ifconfig| to disable a network interface and (on some platforms) delete that network interface's configuration file.
.. |resource action delete link| replace:: Use to delete a link.
.. |resource action delete route| replace:: Use to delete a route.
.. |resource action deploy deploy| replace:: Use to deploy an application.
.. |resource action disable ifconfig| replace:: Use to run |ifconfig| to disable a network interface.
.. |resource action disable mount| replace:: Use to remove an entry from the file systems table (fstab).
.. |resource action disable service| replace:: Use to disable a service.
.. |resource action enable ifconfig| replace:: Use to run |ifconfig| to enable a network interface.
.. |resource action enable mount| replace:: Use to add an entry to the file systems table (fstab).
.. |resource action export scm| replace:: Use to export the source, excluding or removing any version control artifacts.
.. |resource action export service| replace:: Use to enable a service at boot.
.. |resource action force_deploy deploy| replace:: Use to remove any existing release of the same code version and re-deploy a new one in its place.
.. |resource action force_export scm| replace:: Use to export the source, excluding or removing any version control artifacts and to force an export of the source that is overwriting the existing copy (if it exists).
.. |resource action get http_request| replace:: Use to send a GET request.
.. |resource action head http_request| replace:: Use to send a HEAD request.
.. |resource action install package| replace:: Use to install a package. If a version is specified, use to install the specified version of a package.
.. |resource action install yum| replace:: Indicates that a package (or a version, when provided) will be installed.
.. |resource action lock user| replace:: Use to lock a user's password.
.. |resource action manage group| replace:: Use to manage an existing group. This action will do nothing if the group does not exist.
.. |resource action manage user| replace:: Use to manage an existing user. This action will do nothing if the user does not exist.
.. |resource action modify env| replace:: Use to modify an existing environment variable. This will append the new value to the existing value, using the delimiter specified by the ``delim`` attribute.
.. |resource action modify group| replace:: Use to modify an existing group. This action will raise an exception if the group does not exist.
.. |resource action modify user| replace:: Use to modify an existing user. This action will raise an exception if the user does not exist.
.. |resource action mount mount| replace:: Use to mount a device.
.. |resource action nothing erlang| replace:: Indicates that the |erlang| call should not be run.
.. |resource action nothing execute| replace:: Indicates that the command should not be run. This action is used to specify that a command is run only when another resource notifies it.
.. |resource action nothing service| replace:: Use to do nothing with a service.
.. |resource action options http_request| replace:: Use to send an OPTIONS request.
.. |resource action post http_request| replace:: Use to send a POST request.
.. |resource action purge package| replace:: Use to purge a package. This action typically removes the configuration files as well as the package.
.. |resource action put http_request| replace:: Use to send a PUT request.
.. |resource action reload ohai| replace:: Use to reload the |ohai| configuration on a node.
.. |resource action reload service| replace:: Use to reload the configuration for this service.
.. |resource action remount mount| replace:: Use to remount a device.
.. |resource action remove group| replace:: Use to remove a group.
.. |resource action remove package| replace:: Use to remove a package.
.. |resource action remove user| replace:: Use to remove a user.
.. |resource action remove yum| replace:: Indicates that a package (or a version, when provided) will be removed.
.. |resource action restart service| replace:: Use to restart a service.
.. |resource action rollback deploy| replace:: Use to roll an application back to the previous release.
.. |resource action run erlang| replace:: Indicates that the |erlang| call should be run.
.. |resource action run execute| replace:: Indicates that the command should be run.
.. |resource action run powershell_script| replace:: Use to run the script.
.. |resource action run script| replace:: Use to run a script.
.. |resource action start service| replace:: Use to start a service (and keep it running until stopped or disabled).
.. |resource action stop mdadm| replace:: Use to stop an active array.
.. |resource action stop service| replace:: Use to stop a service.
.. |resource action sync scm| replace:: Use to update the source to the specified version, or to get a new clone or checkout.
.. |resource action touch file| replace:: Use to touch a file. This updates the access (atime) and file modification (mtime) times for a file.
.. |resource action umount mount| replace:: Use to unmount a device.
.. |resource action unlock user| replace:: Use to unlock a user's password.
.. |resource action upgrade package| replace:: Use to upgrade a package to the latest version.
.. |resource action upgrade yum| replace:: Indicates that a package will be upgraded to the latest available version.
.. |resource action write log| replace:: Use to write to log.
.. |response_file resource package| replace:: Optional. The response file that is used to pre-seed packages. Default value: ``nil``.
.. |restart_command resource deploy| replace:: A string that contains a shell command that can be executed to run a restart operation . Default value: ``nil``.
.. |restart_command action write service| replace:: The command used to restart a service. Default value: ``nil``.
.. |returns resource execute| replace:: The return value for a command. This may be an array of accepted values. An exception is raised when the return value(s) do not match. Default value: ``0``.
.. |revision resource deploy| replace:: The revision to be checked out. This can be symbolic, like ``HEAD`` or it can be a source control management-specific revision identifier. Default value: ``HEAD``.
.. |revision resource scm| replace:: The revision to be checked out. This can be symbolic, like ``HEAD`` or it can be a source control management-specific revision identifier. Default value: ``HEAD``.
.. |riak_admin_path lwrp riak_cluster| replace:: The location in which ``riak`` and ``riak-admin`` scripts are located. Default value: ``/usr/sbin``.
.. |rights resource cookbook_file| replace:: The permissions for users and groups in a |windows| environment. For example: ``rights <permissions>, <principal>, <options>`` where ``<permissions> is specifies the rights granted to the principal, ``<principal>`` is the group or user name, and ``<options``> is a hash with one (or more) advanced rights options.
.. |rights resource directory| replace:: |windows| only. The permissions for users and groups in a |windows| environment. For example: ``rights <permissions>, <principal>, <options>`` where ``<permissions> is specifies the rights granted to the principal, ``<principal>`` is the group or user name, and ``<options``> is a hash with one (or more) advanced rights options.
.. |rights resource file| replace:: |windows| only. The permissions for users and groups in a |windows| environment. For example: ``rights <permissions>, <principal>, <options>`` where ``<permissions> is specifies the rights granted to the principal, ``<principal>`` is the group or user name, and ``<options``> is a hash with one (or more) advanced rights options.
.. |rights resource remote_directory| replace:: |windows| only. The permissions for users and groups in a |windows| environment. For example: ``rights <permissions>, <principal>, <options>`` where ``<permissions> is specifies the rights granted to the principal, ``<principal>`` is the group or user name, and ``<options``> is a hash with one (or more) advanced rights options.
.. |rights resource remote_file| replace:: |windows| only. The permissions for users and groups in a |windows| environment. For example: ``rights <permissions>, <principal>, <options>`` where ``<permissions> is specifies the rights granted to the principal, ``<principal>`` is the group or user name, and ``<options``> is a hash with one (or more) advanced rights options.
.. |rights resource template| replace:: |windows| only. The permissions for users and groups in a |windows| environment. For example: ``rights <permissions>, <principal>, <options>`` where ``<permissions> is specifies the rights granted to the principal, ``<principal>`` is the group or user name, and ``<options``> is a hash with one (or more) advanced rights options.
.. |rollback_on_error resource deploy| replace:: Indicates whether a deploy resource will rollback to a previously-deployed release if an error occurs when deploying a new release. Default value: ``false``.
.. |rpc_host lwrp transmission_torrent_file| replace:: The address for the host to which a |bittorrent| transmission connection is made. Default value: ``localhost``.
.. |rpc_password lwrp transmission_torrent_file| replace:: The password for the |bittorrent| transmission account. This is often ``node['transmission']['rpc_password']``, which by default is a secure password generated for the node.
.. |rpc_port lwrp transmission_torrent_file| replace:: The port for the host to which a |bittorrent| transmission connection is made. Default value: ``9091``.
.. |rpc_username lwrp transmission_torrent_file| replace:: The user name for the |bittorrent| transmission account. Default value: ``transmission``.

.. S -- EDITED
.. 

.. |scm_provider resource deploy| replace:: The name of the source control management provider to be used. Default value: ``Chef::Provider::Git``. Optional values: ``Chef::Provider::Subversion``.
.. |service_name lwrp bluepill_service| replace:: The name of the service. A recipe that uses the |lwrp bluepill service| lightweight resource must contain a template resource for the pill and it must be named ``NAME.pill.erb`` where ``NAME`` is the ``service_name`` attribute.
.. |service_name lwrp daemontools_service| replace:: The name of the service.
.. |service_name resource service| replace:: The name of the service. Default value: ``name``.
.. |shallow_clone resource deploy| replace:: Indicates that the clone depth is set to 5. Default value: ``true``. This action only works with |git|.
.. |shell resource cron| replace:: Sets the SHELL environment variable.
.. |shell resource user| replace:: The login shell. Default value: ``nil``.
.. |size lwrp aws_ebs_volume| replace:: The size of the volume (in gigabytes).
.. |snapshot_id lwrp aws_ebs_volume| replace:: The snapshot with which to build an |amazon ebs| volume.
.. |snapshots_to_keep lwrp aws_ebs_volume| replace:: The number of snapshots to maintain. This attribute is available only when the ``:prune`` action is used. Default value: ``2``.
.. |source lwrp chef_handler| replace:: The full path to the handler file or the path to a |gem| (if the handler ships as part of a |ruby| |gem|).
.. |source lwrp dmg_package| replace:: The remote URL for the |apple disk image| to be download. Default value: ``nil``.
.. |source lwrp firewall_rule| replace:: The IP address or subnet from which incoming traffic originates. Default value: ``0.0.0.0/0`` (from "anywhere").
.. |source lwrp windows_package| replace:: A URI or a local path that specifies the source of a |windows| installer.
.. |source lwrp windows_zipfile| replace:: A URI or a local path that specifies the source of a |zip| file.
.. |source resource cookbook_file| replace:: The base name of the source file (and inferred from the ``path`` attribute).
.. |source resource package| replace:: Optional. The package source for providers that use a local file (such as |rubygems|, |debian dkpg|, |yum| or |rpm|).
.. |source resource remote_directory| replace:: The base name of the source file (and inferred from the ``path`` attribute).
.. |source resource remote_file| replace:: The base name of the source file (and inferred from the ``path`` attribute).
.. |source resource template| replace:: The location of the template source file. Default value: ``nil``.
.. |source resource yum| replace:: Indicates that the ``yum localinstall`` command will be used. When this attribute is specified, |yum| will use repositories to satisfy any remote dependencies. Default value: none.
.. |ssh_wrapper resource deploy| replace:: |git| only. The path to the wrapper script used when running |ssh| with |git|. The ``GIT_SSH`` environment variable is set to this.
.. |ssh_wrapper resource scm| replace:: |git| only. The path to the wrapper script that is used when running |ssh| with |git|. The ``GIT_SSH`` environment variable is set to this value.
.. |start_command resource service| replace:: The command used to start a service. Default value: ``nil``.
.. |status_command resource service| replace:: The command used to check the run status for a service. Default value: ``nil``.
.. |stop_command resource service| replace:: The command used to stop a service. Default value: ``nil``.
.. |supports lwrp bluepill_service| replace:: A list of attributes that controls how |chef| will attempt to manage a service: ``:restart``, ``:reload``, ``:status``. For ``:restart``, the init script or other service provider can use a restart command; if ``:restart`` is not specified, |chef| will attempt to stop and then start a service. For ``:reload``, the init script or other service provider can use a reload command. For ``:status``, the init script or other service provider can use a status command to determine if the service is running; if ``:status`` is not specified, |chef| will attempt to match the ``service_name`` against the process table as a regular expression, unless a pattern is specified as a parameter attribute. Default value: ``{ :restart => true, :status => true }``.
.. |supports lwrp chef_handler| replace:: The type of |chef| handler to be registered as: ``:report``, ``:exception`` or ``both``. Default value: ``{ :report => true, :exception => true }``.
.. |supports resource mount| replace:: A hash of options for supported mount features. Default value: ``{ :remount => false }``.
.. |supports resource service| replace:: A list of attributes that controls how |chef| will attempt to manage a service: ``:restart``, ``:reload``, ``:status``. For ``:restart``, the init script or other service provider can use a restart command; if ``:restart`` is not specified, |chef| will attempt to stop and then start a service. For ``:reload``, the init script or other service provider can use a reload command. For ``:status``, the init script or other service provider can use a status command to determine if the service is running; if ``:status`` is not specified, |chef| will attempt to match the ``service_name`` against the process table as a regular expression, unless a pattern is specified as a parameter attribute. Default value: ``{ :restart => true, :status => true }``.
.. |supports resource user| replace:: A Mash where keys represent features and values are booleans that indicate if that feature is supported. Default value: ``{:manage_home => false, :non_unique => false }``.
.. |svn_arguments resource deploy| replace:: |svn| only. The extra arguments that are passed to the |svn| command.
.. |svn_arguments resource scm| replace:: |svn| only. The extra arguments that are passed to the |svn| command.
.. |svn_info_args resource scm| replace:: |svn| only. Use when the ``svn info`` command is used by |chef| and arguments need to be passed. (The ``svn_arguments`` command does not work when the ``svn info`` command is used by |chef|.)
.. |svn_password resource deploy| replace:: |svn| only. The password for the user that has access to the |svn| repository.
.. |svn_password resource scm| replace:: |svn| only. The password for the user that has access to the |svn| repository.
.. |svn_username resource deploy| replace:: |svn| only. The user name for a user that has access to the |svn| repository.
.. |svn_username resource scm| replace:: |svn| only. The user name for a user that has access to the |svn| repository.
.. |symlink_before_migrate resource deploy| replace:: A hash that maps files in a shared directory into the current release. Runs before migration. Default value: ``{"config/database.yml" => "config/database.yml"}``.
.. |symlinks resource deploy| replace:: A hash that maps files in a shared directory to their paths in the current release. Default value: ``{"system" => "public/system", "pids" => "tmp/pids", "log" => "log"}``.
.. |system resource group| replace:: Indicates whether a group is a system group (``true``) or is not a system group (``false``). Default value: ``nil``.
.. |system resource user| replace:: Indicates that a system user should be created. This attribute may be used with ``useradd`` as the provider to create a system user which passes the ``-r`` flag to ``useradd``. Default value: ``nil``.

.. T -- EDITED
.. 

.. |target resource ifconfig| replace:: The network address that will be assigned to the network interface. Default value: ``name``.
.. |target_file resource link| replace:: The name of the link. Default value: ``name``.
.. |target resource route| replace:: The address of the target route. Default value: ``name``.
.. |template lwrp daemontools_service| replace:: The name variable for the template files. The run script is set up by a template named ``sv-NAME-run.erb``. The log/run script is set up by a template named ``sv-NAME-log-run.erb``. The finish script is set up by a template named ``sv-NAME-finish.erb``. For each of these scripts, the ``NAME`` placeholder will be replaced by the value specified for this attribute. These templates should be located in the directory of a cookbook that uses this lightweight resource. Default value: ``NAME``.
.. |timeout lwrp aws_ebs_volume| replace:: The connection timeout for the |amazon ec2| API. Default value: ``3 minutes``.
.. |timeout lwrp aws_elastic_ip| replace:: The amount of time before the |amazon ec2| API will time out. Default value: ``3 minutes``.
.. |timeout lwrp name_of_resource| replace:: The amount of time (in seconds) to wait for ring convergence. Default value: ``30``.
.. |timeout resource execute| replace:: The amount of time (in seconds) the command will wait before timing out. Default value: ``3600``.
.. |timestamped_deploy provider deploy| replace:: The ``timestamped_deploy`` provider is the default |resource deploy| provider. It is used to name release directories with a timestamp in the form of ``YYYYMMDDHHMMSS``. For example: ``/my/deploy/dir/releases/20121120162342``. The |resource deploy| resource will determine whether or not to deploy code based on the existence of the release directory in which it is attempting to deploy. Because the timestamp is different for every |chef| run, the ``timestamped_deploy`` provider is not idempotent. When the ``timestamped_deploy`` provider is used, it will require managing the action setting on the resource manually in order to prevent unintended continuous deployment.
.. |to resource link| replace:: The actual file to which the link will be created.
.. |torrent lwrp transmission_torrent_file| replace:: A URI or a local path that specifies a file in a |bittorrent| swarm that will be joined.
.. |ttl lwrp dynect_rr| replace:: The record time to live.
.. |type lwrp djbdns_rr| replace:: The type of record: ``ns``, ``childns``, ``host``, ``alias``, or ``mx``. Default value: ``host``.

.. U -- EDITED
.. 

.. |uid resource user| replace:: The numeric user identifier. Default value: ``nil``.
.. |umask resource execute| replace:: The file mode creation mask for files that are created by a command. Default value: ``nil``.
.. |uri lwrp apt_repository| replace:: The URI for the repository. Default value: ``nil``.
.. |url resource http_request| replace:: The URL to which the HTTP request is sent. Default value: ``nil``.
.. |user resource cron| replace:: The user that runs the command. If the ``user`` attribute is changed, the original ``user`` the |crontab| program for the original ``user`` will continue to run until that |crontab| program is deleted. Default value: ``root``.
.. |user resource deploy| replace:: The system user that is responsible for the checked-out code. Default value: ``nil``.
.. |user resource execute| replace:: The user name or user ID that should be changed before running a command. Default value: ``nil``.
.. |user resource scm| replace:: The system user that is responsible for the checked-out code. Default value: ``nil``.
.. |username lwrp dynect_rr| replace:: The |dns update api| username.
.. |username lwrp mysql_database| replace:: The username with which a connection is made.
.. |username resource user| replace:: The name of the user. Default value: ``name``.

.. V -- EDITED
.. 

.. |value resource directory| replace:: The value with which ``key_name`` is set.
.. |values lwrp windows_registry| replace:: A hash of values to be set under a registry key. The individual hash items will become  ``value_name => value_data`` items in the registry key.
.. |variables lwrp bluepill_service| replace:: A hash of variables that are passed into the pill template.
.. |variables lwrp daemontools_service| replace:: A hash of variables that are passed to the template file. Default value: ``{}``.
.. |variables resource template| replace:: A hash of variables that are used in the template.
.. |version lwrp pacman_aur| replace:: The package version.
.. |version lwrp php_pear| replace:: The version of the package to install or upgrade. If a version is not specified, the latest version is assumed.
.. |version lwrp python_pip| replace:: The version of the |python pip| package to install or upgrade. If a version is not specified, the latest version is assumed.
.. |version resource package| replace:: The version of the package that is being installed or upgraded. Default value: ``nil``.
.. |version resource yum| replace:: The version of the package that will be installed, upgraded, or removed. This value must be a complete version-release. Default value: ``nil``.
.. |virtualenv lwrp python_pip| replace:: The virtual |python| environment into which the |python pip| package is installed.
.. |volume_id lwrp aws_ebs_volume| replace:: The ID for volume to be attached to an |amazon ebs| volume.
.. |volumes_dir lwrp dmg_package| replace:: The directory under ``/Volumes`` where the |apple disk image| is to be mounted. Default value: ``app``.

.. W -- EDITED
.. 

.. |weekday resource cron| replace:: The day of the week on this entry should run (0 - 6), where Sunday = 0. Default value: ``*``.

.. X
.. 


.. Y -- EDITED
.. 


.. Z
.. 

.. |zone lwrp dynect_rr| replace:: The DNS zone.

                     

