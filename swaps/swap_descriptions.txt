.. Description strings for settings, including a) options in Knife (using the long syntax for the unique identifier), b) TBD.
.. It is OK to put the |replace| strings in here.
.. The following swap variables cannot be used: |version| (this will pull the "version" of the docs from the Sphinx source)
..



.. A -- EDITED
.. 


.. |additional_remotes resource scm| replace:: |git| only. An array of additional remotes that are added to the repository configuration.
.. |admin client| replace:: Indicates that a client will be created as an admin client. This is required when users of |chef open server| need to access the API as an administrator.
.. |after| replace:: Use this to add the run list item after the specified run list item.
.. |after_restart resource deploy| replace:: A block or path to a file that contains |chef| code that is run after restarting. Default value: ``deploy/after_restart.rb``.
.. |all| replace:: Displays a node in the |chef editor|. By default, attributes that are default, override, or automatic are not shown.
.. |all cookbooks| replace:: Indicates that all cookbooks will be uploaded.
.. |all cookbooks delete| replace:: Indicates that a cookbook and every version of that cookbook will be deleted.
.. |all cookbooks generate| replace::  Indicates that metadata should be generated for all cookbooks, and not just for a specified cookbook.
.. |all cookbooks return| replace:: Indicates that all available versions of each cookbook will be returned.
.. |all cookbooks test| replace:: Indicates that all cookbooks will be tested.
.. |all data bags| replace:: Indicates that all data bags found at the specified path will be uploaded.
.. |allow_downgrade resource package| replace:: An attribute for the ``yum_package`` provider that indicates that |yum| can downgrade a package to satisfy a requested version. Default value: ``false``.
.. |allow_downgrade resource yum| replace:: Indicates that |yum| can downgrade a package to satisfy requested version requirements. Default value: ``false``. This attribute is only available for the ``yum_package`` resource.
.. |amqp_host| replace:: The IP address for the host to which a connection is made.
.. |amqp_pass| replace:: The password for the ``amqp_user``.
.. |amqp_port| replace:: The port number for the host to which a connection is made.
.. |amqp_user| replace:: A user name with permission to access the host.
.. |amqp_vhost| replace:: The virtual host name.
.. |amqp_consumer_id| replace:: The identifier for the consumer that will handle messages.
.. |api chef server clients| replace:: The /clients endpoint is used to manage an |chef api client| list and their associated RSA public key-pairs.
.. |app lwrp dmg_package| replace:: The name of the application used for the ``/Volumes`` directory and ``.app`` directory copied to ``/Applications``. Default value: ``name``.
.. |append resource group| replace:: Indicates whether members are .  true: add these members to the group, false: these are the definitive group members   Default value: ``false``.
.. |arch resource package| replace:: An attribute for the ``yum_package`` provider that is used to specify the architecture of the package that is being installed or upgraded. Default value: ``nil``.
.. |arch resource yum| replace:: The architecture of the package that will be installed or upgraded. (This value can also be passed as part of the package name.) Default value: ``nil``. This attribute is only available for the ``yum_package`` resource.
.. |arguments lwrp chef_handler| replace:: An array of arguments that are passed to the initializer for the handler class.
.. |attribute| replace:: Indicates that only a single attribute is shown, as defined by the ``ATTR`` value.
.. |attribute ssh| replace:: The attribute that is used when opening the |ssh| connection.
.. |authorized_openid_identifiers| replace:: The identifier for the |open id| associated with the |chef server| web UI.
.. |authorized_openid_providers| replace:: The provider for the |open id| associated with the |chef server| web UI.
.. |availability-zone amazon ec2| replace:: The name of the |amazon ec2| availability zone. Each availability zone is unique within a region. Default: ``us-east-1b``.
.. |availability-zone eucalyptus| replace:: The name of the |eucalyptus| availability zone. Each availability zone is unique within a region. Default: ``us-east-1b``.
.. |availability-zone google| replace:: The name of the |google compute engine| availability zone. Each availability zone is unique within a region. Default: ``us-east-a``.
.. |availability-zone openstack| replace:: The name of the |openstack| availability zone. Each availability zone is unique within a region. Default: ``us-east-1b``.
.. |aws-access-key-id| replace:: The access key identifier used with |amazon ec2|.
.. |aws-secret-access-key| replace:: The secret access key for the API endpoint used with |amazon ec2|.
.. |aws_access_key lwrp aws_ebs_volume| replace:: The user name for the secret access key for the API endpoint used with |amazon ec2|.
.. |aws_access_key lwrp aws_elastic_ip| replace:: The user name for the secret access key for the API endpoint used with |amazon ec2|.
.. |aws_access_key lwrp aws_elastic_lb| replace:: The user name for the secret access key for the API endpoint used with |amazon ec2|.
.. |aws_access_key lwrp aws_resource_tag| replace:: The user name for the secret access key for the API endpoint used with |amazon ec2|.
.. |aws_secret_access_key lwrp aws_ebs_volume| replace:: The password for the secret access key for the API endpoint used with |amazon ec2|.
.. |aws_secret_access_key lwrp aws_elastic_ip| replace:: The password for the secret access key for the API endpoint used with |amazon ec2|.
.. |aws_secret_access_key lwrp aws_elastic_lb| replace:: The password for the secret access key for the API endpoint used with |amazon ec2|.
.. |aws_secret_access_key lwrp aws_resource_tag| replace:: The password for the secret access key for the API endpoint used with |amazon ec2|.
.. |availability_zone lwrp aws_ebs_volume| replace:: The |amazon ec2| availability zone.
.. |azure host description| replace:: The description for the host.
.. |azure host name| replace:: The host name for the |windows azure| environment.
.. |azure-pem-filename| replace:: The name of the file that contains the |ssh| public key that is used when authenticating to |windows azure|.
.. |azure-subscription-id| replace:: The subscription identifier for the |windows azure| portal.
.. |azure verify ssl certificate| replace:: The |ssl| certificate that is used to verify communication over HTTPS.



.. B -- EDITED
.. 


.. |backup resource cookbook_file| replace:: The number of backups of a file that should be kept. Set to ``false`` to prevent backups from being kept. Default value: ``5``.
.. |backup resource file| replace:: The number of backups of a file that should be kept. Set to ``false`` to prevent backups from being kept. Default value: ``5``.
.. |backup resource remote_file| replace:: The number of backups of a file that should be kept. Set to ``false`` to prevent backups from being kept. Default value: ``5``.
.. |backup resource template| replace:: The number of backups of a file that should be kept. Set to ``false`` to prevent backups from being kept. Default value: ``5``.
.. |bcast resource ifconfig| replace:: The broadcast address for the network interface. One some platforms this attribute is not set with |ifconfig|, but is instead added to the startup configuration file for the network interface. Default value: ``nil``.
.. |before_migrate resource deploy| replace:: A block or path to a file that contains |chef| code that is run before a migration. Default value: ``deploy/before_migrate.rb``.
.. |before_restart resource deploy| replace:: A block or path to a file that contains |chef| code that is run before restarting. Default value: ``deploy/before_restart.rb``.
.. |before_symlink resource deploy| replace:: A block or path to a file that contains |chef| code that is run before symbolic linking. Default value: ``deploy/before_symlink.rb``.
.. |block resource ruby_block| replace:: A block of |ruby| code. Default value: ``nil``.
.. |block-startup-timeout| replace:: The amount of time that should elapse before the deployment process is stopped.
.. |blocking lwrp transmission_torrent_file| replace:: Indicates whether a file should be downloaded in a single |chef| run. If ``false``, the download may take place across one (or more) |chef| runs.
.. |bootproto resource ifconfig| replace:: The boot protocol---such as "dhcp"--that is used by the network interface. Default value: ``nil``.
.. |bootstrap-proxy| replace:: The proxy server for the node that is the target of a bootstrap operation.
.. |bootstrap protocol| replace:: The protocol used to bootstrap on a machine that is running |windows server|: ``winrm`` or ``ssh``.
.. |bootstrap-version| replace:: The version of |chef| to install.
.. |branch| replace:: The name of the default branch. This will default to the master branch.
.. |builddir lwrp pacman_aur| replace:: The directory into which a package is download and built. Default value: ``Chef::Config[:file_cache_path]/builds``.



.. C -- EDITED
.. 


.. |ca-trust-file| replace:: The |ca| trust file used for |ssl| transport.
.. |cache_options| replace:: The option(s) to be used when caching. The options available depend on the type of cache being used.
.. |cache_type| replace:: The type of cache to use. This can be any type of cache that is supported by the |moneta| library (https://github.com/wycats/moneta), including basic file stores, file systems with xattrs, |datamapper|, |amazon s3|, |berkeley db|, |mongo db|, |redis|, |sbdm|, |tokyo cabinet|, |couch db|, and so on. Default value: ``BasicFile``.
.. |CATEGORY| replace:: The cookbook category: ``Databases``, ``Web Servers``, ``Process Management``, ``Monitoring and Trending``, ``Programming Languages``, ``Package Management``, ``Applications``, ``Networking``, ``Operations Systems and Virtualization``, ``Utilities``, or ``Other``.
.. |channel_name lwrp php_pear_channel| replace:: The name of a channel that a |pear| installation needs to know about (i.e. "channel discovery").
.. |channel_xml lwrp php_pear_channel| replace:: The channel definition file for a channel.
.. |checksum_path| replace:: The location in which checksums for individual cookbook files (such as recipes) are stored. The checksum itself is stored in |couch db| and is compared to a file in this location that has a filename that is identical to the checksum.
.. |checksum lwrp dmg_package| replace:: The |sha256| checksum for the |apple disk image| to be downloaded. Default value: ``nil``.
.. |checksum resource remote_file| replace:: Optional. The SHA-256 checksum of the file. If the local file matches the checksum, |chef| will not download it. Default value: ``nil``.
.. |chef_server_url| replace:: The URL for the |chef server|.
.. |chef_gem provider package| replace:: Can be used with the ``options`` attribute. The ``chef_gem`` provider should be used when installing a gem only for |chef| resources. The ``chef_gem`` provider works with all of the same attributes and options as the ``gem_package`` provider, but does not accept ``gem_binary`` because it always uses the ``CurrentGemEnvironment`` under which |chef| is running. In addition to performing actions of the ``gem_package`` resource, ``chef_gem`` does the following: runs its actions immediately, before convergence, allowing you to use a gem in a recipe immediately after it is installed; and runs ``Gem.clear_paths`` after the action, ensuring that gem is aware of changes so that it can be required immediately after it is installed.
.. |chunk resource mdadm| replace:: The chunk size. Default value: ``16``.
.. |class_name lwrp chef_handler| replace:: The name of the handler class. This can be module name-spaced.
.. |client| replace:: Use to create a client configuration. This will read from the |knife rb| config file to generate a config file suitable for use in |path chef client rb|, and will then copy the validation certificate into the specified directory.
.. |client_key| replace:: The location of the file which contains the client key. Default value: ``/etc/chef/client.pem``.
.. |client_registration_retries| replace:: The number of times a |chef client| should attempt to register with a |chef server|. Default value: ``5``.
.. |client_url| replace:: The URL that is used by a |chef client| to connect to a |chef server|. Default value: ``http://localhost:4042``.
.. |cluster_members lwrp riak_cluster| replace:: A list of nodes that should be part of the cluster. Default value: discovered by |chef| search functionality.
.. |cluster_name lwrp riak_cluster| replace:: The name of the local node (as identified by the ``riak.erlang.node_name`` attribute).
.. |code resource erlang_call| replace:: The code to be executed on a node located within a distributed |erlang| system. Default value: ``q()``.
.. |code resource powershell_script| replace:: The quoted script of code to execute. Default value: ``nil``.
.. |code resource script| replace:: The quoted script of code to execute. Default value: ``nil``.
.. |color| replace:: Indicates that colored output will be used.
.. |command resource cron| replace:: The command to run. Default value: ``*``.
.. |command resource execute| replace:: The name of the command that will be executed. Default value: ``name``.
.. |command resource powershell_script| replace:: The name of the command to execute. Default value: ``name``.
.. |command resource script| replace:: The name of the command to execute. Default value: ``name``.
.. |comment resource user| replace:: One (or more) comments about the user. Default value: ``nil``.
.. |components lwrp apt_repository| replace:: An array of components. For example: ``["main", "street"])``. Default value: ``[]``.
.. |content resource file| replace:: A string that is written to the file. The contents of this attribute will replace any previous content when this attribute has something other than the default value. Default value: ``nil`` (don't modify content).
.. |concurrency| replace:: The number of allowed concurrent connections.
.. |config| replace:: The configuration file to use.
.. |continue_seeding lwrp transmission_torrent_file| replace:: Indicates whether a file should continue to be seeded to the |bittorrent| swarm after download.
.. |cookbook directory attributes| replace:: The sub-directory in which attributes are located. 
.. |cookbook directory libraries| replace:: The sub-directory in which libraries are located. 
.. |cookbook directory providers| replace:: The sub-directory in which lightweight providers are located. 
.. |cookbook directory recipes| replace:: The sub-directory in which recipes are located. 
.. |cookbook directory resources| replace:: The sub-directory in which lightweight resources are located. 
.. |cookbook directory templates| replace:: The sub-directory in which templates are located.
.. |cookbook lwrp daemontools_service| replace:: The cookbook in which the template files are located (if they are not located in the current cookbook).
.. |cookbook resource cookbook_file| replace:: The cookbook in which a file is located. Default value: ``nil`` (the current cookbook).
.. |cookbook resource remote_directory| replace:: The cookbook in which a file is located. Default value: ``nil`` (the current cookbook).
.. |cookbook resource template| replace:: The cookbook in which a template is located. Default value: ``nil`` (the current cookbook).
.. |cookbook-path| replace:: A colon-separated path at which cookbooks are located.
.. |cookbook_path subdirectory| replace:: The sub-directory for cookbooks on the |chef client|. This value can be a string or an array of file system locations, processed in the specified order. The last cookbook is considered to override local modifications.
.. |cookbook-path create| replace:: The directory in which the cookbook will be created.
.. |cookbook_tarball_path| replace:: The location in which a |chef server| stores cookbooks that have been saved in the .tar file format, and from which cookbooks are distributed to a |chef client|. Default value: ``/var/chef/cookbook-tarballs``.
.. |COOKBOOK_VERSION delete| replace:: The version of a cookbook to be deleted. If a cookbook has only one version, this option does not need to be specified. If a cookbook has more than one version and this option is not specified, |knife| will prompt for a version.
.. |COOKBOOK_VERSION download| replace:: The version of a cookbook to be downloaded. If a cookbook has only one version, this option does not need to be specified. If a cookbook has more than one version and this option is not specified, |knife| will prompt for a version.
.. |COOKBOOK_VERSION install| replace:: The version of the cookbook to be installed. If a version is not specified, the most recent version of the cookbook will be installed.
.. |COOKBOOK_VERSION show| replace:: The version of a cookbook to be shown. If a cookbook has only one version, this option does not need to be specified. If a cookbook has more than one version and this option is not specified, a list of cookbook versions will be returned.
.. |cookie resource erlang_call| replace:: The magic cookie for the node to which a connection is made.
.. |copyright| replace:: The name of the copyright holder. This option will place a copyright notice that contains the name of the copyright holder in each of the pre-created files. If this option is not specified, a copyright name of "your_company_name" will be used instead; it can be easily modified later.
.. |couchdb_database| replace:: The name of the |couch db| database.
.. |couchdb_url| replace:: The URL for the |couch db| database.
.. |couchdb_version| replace:: Optional. The version of the |couch db| database.
.. |create_dirs_before_symlink resource deploy| replace:: The directories to create before symbolic linking. This runs after ``purge_before_symlink``. Default value: ``%w{tmp public config}``.
.. |creates resource execute| replace:: Indicates that a command to create a file will not be run when that file already exists. Default value: ``nil``.
.. |customer lwrp dynect_rr| replace:: The |dns update api| customer ID.
.. |cwd lwrp djbdns_rr| replace:: The current working directory in which the |tinydns| data file is located.
.. |cwd resource execute| replace:: The current working directory from which a command will be run. Default value: ``nil``.

.. D -- EDITED
.. 

.. |DATA_BAG_ITEM| replace:: The name of a specific item within a data bag.
.. |data_bag_path| replace:: The location from which a data bag is loaded to |chef|. Default value: ``/var/chef/databags``.
.. |database lwrp mysql_database| replace:: The name of the database to be created. This attribute can be used only with the ``create_db action``.
.. |day resource cron| replace:: The day of month at which the |cron| entry should run (1 - 31). Default value: ``*``.
.. |defaults| replace:: Indicates that |knife| will use the default value, instead of asking a user to provide one.
.. |delim resource directory| replace:: The delimiter that is used to separate multiple values for a single key.
.. |deploy_to resource deploy| replace:: The "meta root" for the application.
.. |deploy_revision provider deploy| replace:: The ``deploy_revision`` provider is the recommended provider, even if it is not listed as the default. The ``deploy_revision`` provider is used to ensure that the name of a release sub-directory is based on a revision identifier. For users of |git|, this will be the familiar SHA checksum. For users of |svn|, it will be the integer revision number. If a name other than a revision identifier is provided---branch names, tags, and so on---|chef| will ignore the alternate names and will look up the revision identifier and use it to name the release sub-directory. When the ``deploy_revision`` provider is given an exact revision to deploy, it will behave in an idempotent manner. The ``deploy_revision`` provider results in deployed components under the destination location that is owned by the user who runs the application. This is sometimes an issue for certain workflows. If issues arise, consider the following: incorporate changing permissions to the desired end state from within a recipe; add a ``before_restart`` block to fix up the permissions; have an unprivileged user (for example: ``opscode``) be the owner of the ``deploy`` directory and another unprivileged user (for example: ``opscodeapp``) run the application. Most often, this is the solution that works best. When using the ``deploy_revision`` provider, and when the deploy fails for any reason, and when the same code is used to re-deploy, the action should be set manually to ``:force_deploy``. Forcing the re-deploy will remove the old release directory, after which the deploy can proceed as usual. (Forcing a re-deploy over the current release can cause some downtime.) Deployed revisions are stored in ``(file_cache_path)/revision-deploys/(deploy_path)``.
.. |depth resource scm| replace:: |git| only. The number of past revisions that will be included in the |git| shallow clone. Default value: ``nil`` (full clone).
.. |description cookbook| replace:: A short description of a cookbook and its functionality.
.. |description recipe| replace:: A description for a recipe, mostly for cosmetic value within the |chef server| user interface.
.. |description role| replace:: The description of the role. This value will populate the description field for the role on the |chef server|.
.. |description environment| replace:: The description of the environment. This value will populate the description field for the environment on the |chef server|.
.. |destination lwrp dmg_package| replace:: The directory to which the ``.app`` directory is copied. Default value: ``/Applications``.
.. |destination lwrp firewall_rule| replace:: The IP address or subnet to which traffic is routed.
.. |destination resource scm| replace:: The path to the location to which the source will be cloned, checked out, or exported.
.. |dev_src lwrp apt_repository| replace:: Indicates whether the ``deb-src`` source repository is added. Default value: ``false``.
.. |device lwrp aws_ebs_volume| replace:: The local block device to be attached to an |amazon ebs| volume.
.. |device resource ifconfig| replace:: The network interface to be configured. Default value: ``nil``.
.. |device resource mount| replace:: Required for ``:umount`` and ``:remout`` actions (for the purpose of checking the mount command output for presence). The special block device or remote node, a label, or a uuid to be mounted. Default value: ``nil``.
.. |device resource route| replace:: The network interface to which the route applies.
.. |device_type resource mount| replace:: The type of device: ``:device``, ``:label``, or ``:uuid``. Default value: ``:device``.
.. |devices resource mdadm| replace:: An array of devices to include in the |raid| array.
.. |dir| replace:: The directory into which a cookbook will be downloaded.
.. |directives lwrp php_pear| replace:: Extra extension directives (or settings) for a |pecl|. On most platforms, these directives are rendered into the extension's .ini file.
.. |directory lwrp daemontools_service| replace:: The directory in which the service is set up.
.. |disable-bootstrap| replace:: Indicates that the bootstrap process should be disabled.
.. |distributed resource directory| replace:: Indicates that a node is a distributed |erlang| node. Default value: ``false``.
.. |distribution lwrp apt_repository| replace:: The short name for the distribution. For example: ``lucid``.
.. |distro| replace:: The template file to be used during a bootstrap operation. Use this option if the specific location of the template file is unknown. The following distributions are supported: ``chef-full`` (the default bootstrap), ``centos5-gems``, ``fedora13-gems``, ``ubuntu10.04-gems``, ``ubuntu10.04-apt``, and ``ubuntu12.04-gems``. If this option is used, |knife| will search for the template file in the following order: a ``bootstrap/`` folder in the current working directory, a ``bootstrap/`` folder in the |chef| repository, a ``bootstrap/`` folder in ``~/.chef/``, or a bootstrap file shipped with |chef|. Do not use the ``--template-file`` option when ``--distro`` is specified.
.. |dmg_name lwrp dmg_package| replace:: The name of the |apple disk image| (if it is not the same as the ``app`` attribute or if the name of the application contains spaces). Default value: ``nil``.
.. |dump resource mount| replace:: The dump frequency (in days) used while creating a file systems table (fstab) entry. Default value: ``0``.


.. E -- EDITED
.. 

.. |ebs-no-delete-on-term| replace:: Indicates that the |amazon ebs| volume will not be deleted upon instance termination. This option is only available for instances that are backed with |amazon ebs|.
.. |ebs-size| replace:: The size of the |amazon ebs| volume, in GB. This option is only available for instances that are backed with |amazon ebs|.
.. |edit| replace:: Indicates that instance data should be edited using the default text editor.
.. |editor| replace:: The |chef editor| that is used for all interactive commands.
.. |email| replace:: The email address for the individual who maintains the cookbook. This option will place an email address in each of the pre-created files. If this option is not specified, an email name of "your_email" will be used instead; it can be easily modified later.
.. |enable_submodules resource deploy| replace:: |git| only. Use to perform a sub-module initialization and update. Default value: ``false``.
.. |enable_submodules resource scm| replace:: |git| only. Use to perform a sub-module initialization and update. Default value: ``false``.
.. |env lwrp daemontools_service| replace:: Use to create an ``env`` directory for a service. The directory will contain files named for each environment variable that is required, with the contents of its value in a hash. For more information about how to use this attribute, see: http://cr.yp.to/daemontools/envdir.html. Default value: ``{}``.
.. |environment| replace:: The name of the |chef server| environment. When this option is added to a command, the command will run only against the named environment.
.. |environment config| replace:: The name of the environment. This is typically set from the command line (using the ``-E`` option) or in the |client rb| configuration file.
.. |environment cookbooks| replace:: The environment that will be applied to all cookbooks that are uploaded using the same action. This will automatically set the version constraint on the environment to match the version of a cookbook that is being uploaded.
.. |environment resource deploy| replace:: A hash of the form ``{"ENV_VARIABLE"=>"VALUE"}``.
.. |environment resource execute| replace:: A hash of environment variables that should be set before running a command. Default value: ``nil``.
.. |ephemeral device| replace:: A comma-separated list of device locations to be mapped to ephemeral devices.
.. |euca-access-key-id| replace:: The access key identifier for |eucalyptus|.
.. |euca-api-endpoint| replace:: The Eucalyptus API endpoint.
.. |euca-secret-access-key| replace:: The secret access key for |eucalyptus|.
.. |exec| replace:: A string of code that will be executed.
.. |external-ip-address| replace:: A static IP address that is provided by |google compute engine|.


.. F -- EDITED
.. 

.. |file| replace:: The name of the cookbook file to be downloaded.
.. |file_backup_path| replace:: The location in which backup files are stored. If this value is empty, backup files will be stored in the directory of the target file. Default value: ``/var/chef/backup``.
.. |file_cache_path_chef_solo| replace:: The location in which cookbooks (and other transient data) files are stored after they have been downloaded from a remote URL. (This value can also be used in recipes to download files with the ``remote_file`` resource.)
.. |file_cache_path| replace:: The location in which cookbooks (and other transient data) files are stored when they are synchronized with |chef|. (This value can also be used in recipes to download files with the ``remote_file`` resource.) 
.. |file private key| replace:: Indicates that the private key will be saved to a specified file name.
.. |FILE_NAME| replace:: The name of a file that is associated with a cookbook.
.. |files_backup resource remote_directory| replace:: The number of backup copies to keep for files in the directory. Default value: ``5``.
.. |files_group resource remote_directory| replace:: The group for the files in the directory. Default value: ``nil``.
.. |files_mode resource remote_directory| replace:: The octal mode of the file. When specifying ``files_mode``, the value can be a quoted string ("644"). For a numeric value, it should be five digits ("00644") to ensure that it is correctly parsed by |ruby|. The default value for this attribute varies.
.. |files_owner resource remote_directory| replace:: The owner of the files in the directory. Default value: ``nil``.
.. |finish lwrp daemontools_service| replace:: Indicates whether a service has a finish script. Default value: ``nil``.
.. |flags resource powershell_script| replace:: The command line flags that are passed to the interpreter when invoked. Default value: ``nil``.
.. |flags resource script| replace:: The command line flags that are passed to the interpreter when invoked. Default value: ``nil``.
.. |flavor| replace:: The name of the flavor that identifies the hardware configuration of the server, including disk space, memory capacity, and CPU priority.
.. |flush_cache resource package| replace:: An attribute for the ``yum_package`` provider that is used to flush the internal YumCache before or after an install or upgrade action. Default value: ``{ :before => false, :after => false }``.
.. |flush_cache resource yum| replace:: An array that indicates whether the |yum| cache should be flushed before or after a |yum| operation that installs, upgrades, or removes a package. Default value: ``nil``. Possible values: ``:before`` and ``:after``. This attribute is only available for the ``yum_package`` resource.
.. |force| replace:: Indicates that the download of a deprecated cookbook will be forced.
.. |force directory| replace:: Indicates that an existing directory will be overwritten.
.. |force update| replace:: Indicates that a cookbook should be updated even if the ``--freeze`` flag has been set.
.. |format| replace:: The output format: ``summary`` (default), ``text``, ``json``, ``yaml``, and ``pp``.
.. |fqdn| replace:: The |fully qualified domain name| of the host.
.. |fqdn amazon ec2| replace:: A pre-defined |fully qualified domain name|.
.. |fqdn lwrp djbdns_rr| replace:: The fully qualified domain name.
.. |fqdn lwrp dynect_rr| replace:: The fully qualified domain name.
.. |freeze| replace:: Indicates that a cookbook cannot be modified; any changes to this cookbook must be included as a new version. Only the ``--force`` option can override this setting.
.. |fstype resource mount| replace:: Required. The file system type (fstype) of the device. Default value: ``nil``.

.. G -- EDITED
.. 


.. |gateway resource route| replace:: The gateway for the route.
.. |gem_binary resource package| replace:: An attribute for the ``gem_package`` provider that is used to specify a |gems| binary. This attribute is useful when installing |ruby| 1.9 |gems| while running |chef| in |ruby| 1.8.  Default value: ``nil (API)``.
.. |gem_package provider package| replace:: Can be used with the ``options`` attribute. The ``gem_package`` provider should be used when installing a gem to be used on the system.
.. |gid resource group| replace:: The group identifier. Default value: ``nil``.
.. |gid resource user| replace:: The primary group identifier. Default value: ``nil``.
.. |git_ssh_wrapper resource deploy| replace:: The alias for the ``ssh_wrapper``. This attribute only works with |git|.
.. |google-image| replace:: The name of the virtual application template or image that will be used to create the virtual machine. Default: ``gcompute8-standard``.
.. |group ids| replace:: A comma-separated list of security group identifiers.
.. |group lwrp daemontools_service| replace:: The group of the service directory and scripts.
.. |group lwrp python_virtualenv| replace:: The string or ID that identifies the group owner of the virtual |python| environment.
.. |group lwrp transmission_torrent_file| replace:: A string or ID that identifies the group owner of a file.
.. |group resource cookbook_file| replace:: A string or ID that identifies the group owner of the file.
.. |group resource deploy| replace:: The system group that is responsible for the checked-out code. Default value: ``nil``.
.. |group resource directory| replace:: A string or ID that identifies the group owner of a file.
.. |group resource execute| replace:: The group name or group ID that should be changed before running a command. Default value: ``nil``.
.. |group resource file| replace:: A string or ID that identifies the group owner of the file.
.. |group resource link| replace:: A string or ID that identifies the group associated with a symbolic link.
.. |group resource remote_file| replace:: A string or ID that identifies the group owner of the file.
.. |group resource scm| replace:: The system group that is responsible for the checked-out code. Default value: ``nil``.
.. |group resource template| replace:: A string or ID that identifies the group owner of the file.
.. |group_name resource group| replace:: A string or ID that identifies the name of the group. Default value: ``name``.
.. |grouping| replace:: Adds a title and description to a group of attributes within a namespace. Takes a name (along with the / notation that defines a nested grouping), a title, and a short description.
.. |group config| replace:: The group that owns a process. This is required when starting any executable as a daemon. Default value: ``nil``.
.. |groups| replace:: A comma-separated list of security groups.



.. H -- EDITED
.. 



.. |handler chef handler| replace:: The ``chef_handler`` |lwrp| allows report and exception handlers to be enabled within recipes using |ruby| code, as opposed to them being hard-coded in the |client rb| file.
.. |help| replace:: Shows help for |knife| or for a sub-command.
.. |headers resource http_request| replace:: A hash of custom headers. Default value: ``{}``.
.. |hint| replace:: Indicates that an |ohai| hint will be set on the target of the bootstrap. Use multiple ``--hint`` options to specify multiple hints.
.. |home resource cron| replace:: Sets the HOME environment variable.
.. |home resource user| replace:: The location of the home directory. Default value: ``nil``.
.. |host lwrp mysql_database| replace:: Host of the database server.
.. |host-name| replace:: The host name for the virtual machine.
.. |hosted-service-name| replace:: The name of the hosted service.
.. |hour resource cron| replace:: The hour at which the |cron| entry should run (0 - 23). Default value: ``*``.
.. |hp-account| replace:: The access key identifier for the |hp cloud| account.
.. |hp-auth| replace:: The URI used during authentication to the |hp cloud| account.
.. |hp-secret| replace:: The secret key for the |hp cloud| account.
.. |hp-tenant| replace:: The tenant identifier that represents a collection of service subscriptions and/or resources in the |hp cloud| account.
.. |hp-zone| replace:: The name of the |hp cloud| availability zone.
.. |http_proxy| replace:: The proxy server for HTTP connections. Default value: ``nil``.
.. |http_proxy_pass| replace:: The password for the proxy server. Default value: ``nil``.
.. |http_proxy_user| replace:: The user name for the proxy server. Default value: ``nil``.
.. |http_retry_count| replace:: The number of retry attempts. Default value: ``5``.
.. |http_retry_delay| replace:: The delay (in WHAT????) between retry attempts. Default value: ``5``.
.. |https_proxy| replace:: The proxy server for HTTPS connections. Default value: ``nil``.
.. |hwaddr resource ifconfig| replace:: The hardware address for the network interface. Default value: ``nil``.



.. I -- EDITED
.. 

.. |id-only| replace:: Indicates that only matching object IDs will be shown.
.. |identity-file| replace:: The SSH identity file used for authentication. Key-based authentication is recommended.
.. |image| replace:: The name of the image that identifies the operating system (and version) that will be used to create the virtual machine.
.. |include-dependencies| replace:: Indicates that when a cookbook has a dependency on one or more other cookbooks, those cookbooks will also be uploaded.
.. |INDEX| replace:: The name of the index to be queried: ``client``, ``environment``, ``node``, ``role``, or ``DATA_BAG_NAME``.
.. |inet_addr resource ifconfig| replace:: The Internet host address for the network interface. Default value: ``nil``.
.. |inherits resource cookbook_file| replace:: |windows| only. Indicates that the file inherits rights from its parent. Default value: ``true``.
.. |inherits resource directory| replace:: |windows| only. Indicates that the file inherits rights from its parent. Default value: ``true``.
.. |inherits resource file| replace:: |windows| only. Indicates that the file inherits rights from its parent. Default value: ``true``.
.. |inherits resource remote_directory| replace:: |windows| only. Indicates that the file inherits rights from its parent. Default value: ``true``.
.. |inherits resource remote_file| replace:: |windows| only. Indicates that the file inherits rights from its parent. Default value: ``true``.
.. |inherits resource template| replace:: |windows| only. Indicates that the file inherits rights from its parent. Default value: ``true``.
.. |initial| replace:: Use to create a |chef api client|, typically an administrator client on a freshly-installed |chef server|.
.. |installer_type lwrp windows_package| replace:: The type of windows installation package: ``:msi``, ``:inno``, ``:nsis``, ``:wise``, ``:installshield``, or ``:custom``. If this value is not specified, the provider will attempt to identify the installer type on its own and will use the best match. If this value cannot be properly specified, use the ``:custom`` value to pass a value to the ``installer_type`` attribute and then the ``options`` attribute to set the proper flags for a silent or quite installation.
.. |internal-ip-address| replace:: A static IP address that is provided by |google compute engine|.
.. |interpreter lwrp python_virtualenv| replace:: The |python| interpreter to use. Default value: ``python2.6``.
.. |interpreter resource powershell_script| replace:: The script interpreter to be used during code execution. Default value: ``nil``.
.. |interpreter resource script| replace:: The script interpreter to be used during code execution. Default value: ``nil``.
.. |interval| replace:: The interval at which the |chef client| is run. This value is configured for the |chef client| application run time, rather than in the Chef::Config. Default value: ``1800``.
.. |ip lwrp aws_elastic_ip| replace:: The IP address that is allocated to the node.
.. |ip lwrp djbdns_rr| replace:: The IP address.

.. J -- EDITED
.. 

.. |json_attribs| replace:: Use to override attributes that are set from other locations, such as from within a cookbook or by a role. The value must be entered as JSON data.
.. |json-attributes| replace:: A JSON string that is added to the first run of a |chef client|.
.. |json dsl chef type| replace:: This should always be set to ``environment``. Use this setting for any custom process that consumes environment objects outside of |ruby|.
.. |json dsl json class| replace:: This should always be set to ``Chef::Environment``. This setting is used internally by |chef| to auto-inflate an environment object. If objects are being rebuilt outside of |ruby|, ignore it.


.. K -- EDITED
.. 

.. |kerberos-realm| replace:: The administrative domain to which a user belongs.
.. |kerberos-service| replace:: The service principal used during |kerberos|-based authentication.
.. |key| replace:: The private key that |knife| will use to sign requests made by the |chef api client| to the |chef server|.
.. |key lwrp apt_repository| replace:: The fingerprint of the key server or the URI for the |pgp| encryption key associated with the repository specified by ``repo_name``. Default value: ``nil``.
.. |key_name lwrp windows_registry| replace:: The registry key to create or modify.
.. |key_name resource directory| replace:: The name of the key that will be created, deleted, or modified. Default value: ``name``.
.. |keyserver lwrp apt_repository| replace:: The key server from which a |pgp| encryption key is downloaded. Default value: ``nil``.
.. |keytab-file| replace:: The keytab file that contains the encryption key required by |kerberos|-based authentication.
.. |knife azure| replace:: |windows azure| is a cloud hosting platform from |microsoft| that provides virtual machines for |linux| and |windows server|, cloud and database services, and more. The ``azure`` sub-command is used to manage API-driven cloud servers that are hosted by |windows azure|.
.. |knife azure certificate| replace:: The ``azure`` sub-command must use a management certificate for secure communication with |windows azure|.
.. |knife bluebox| replace:: |bluebox| provides on-demand computing that is backed by a proprietary cloud operating system. The ``bluebox`` sub-command is used to manage API-driven cloud servers that are hosted by |bluebox|.
.. |knife bootstrap| replace:: The ``bootstrap`` sub-command is used run a bootstrap operation that installs |chef| on the target system. The bootstrap operation must specify the IP address or |fully qualified domain name| of the target system.
.. |knife client| replace:: The ``client`` sub-command is used to manage an |chef api client| list and their associated RSA public key-pairs. This allows authentication requests to be made to the |chef server| by any entity that uses the |api chef server|, such as the |chef client| and |knife|.
.. |knife configure| replace:: The ``configure`` sub-command is used to create the |knife rb| and |client rb| files so that they can be distributed to workstations and nodes.
.. |knife cookbook| replace:: The ``cookbook`` sub-command is used to interact with cookbooks that are located on the |chef server| or the local |chef| repository.
.. |knife data bag| replace:: The ``data bag`` sub-command is used to manage arbitrary stores of globally available JSON data.
.. |knife delete| replace:: The ``delete`` sub-command is used to delete an object from a |chef server|.
.. |knife diff| replace:: The ``diff`` sub-command is used to compare the differences between files and directories on the |chef server| and in the |chef| repository. This sub-command is useful when the files on the |chef server| and in the |chef| repository need to be compared, such as when files on the |chef server| need to be verified prior to an upload or to ensure that certain files in multiple production environments are the same. This sub-command is similar to the ``git diff`` command that can be used to diff what is in the |chef| repository with what is synced to a |github| repository. 
.. |knife download| replace:: The ``download`` sub-command is used to download objects from the |chef server| to the local repository.
.. |knife ec2| replace:: |amazon ec2| is a web service that provides resizable compute capacity in the cloud, based on pre-configured operating systems and virtual application software using |amazon ami|. The ``ec2`` sub-command is used to manage API-driven cloud servers that are hosted by |amazon ec2|.
.. |knife environment| replace:: The ``environment`` sub-command is used to manage environments within a single organization on the |chef server|.
.. |knife exec| replace:: The ``exec`` sub-command uses the |knife| configuration file to execute |ruby| scripts in the context of a fully configured |chef client|. This sub-command is most often used to run scripts that will only access |chef server| one time (or otherwise very infrequently). Use this command any time that an operation does not warrant full usage of the |knife| sub-command library.
.. |knife eucalyptus| replace:: |eucalyptus| is an infrastructure as a service (IaaS) platform that supports hybrid-IaaS configurations that allow data to move between hosted and on-premise data centers. The ``eucalyptus`` sub-command is used to manage API-driven cloud servers that are hosted by |eucalyptus|.
.. |knife google| replace:: |google compute engine| is a cloud hosting platform that offers scalable and flexible virtual machine computing. The ``google`` sub-command is used to manage API-driven cloud servers that are hosted by |google compute engine|.
.. |knife index rebuild| replace:: The ``index rebuild`` sub-command is used to rebuild the search indexes for |chef open server|. This operation is destructive and may take some time.
.. |knife hp| replace:: |hp cloud| is a cloud hosting platform that provides computing, storage, identity, and other services across private, managed, and public clouds. The ``hp`` sub-command is used to manage API-driven cloud servers that are hosted by |hp cloud|.
.. |knife linode| replace:: |linode| is a cloud hosting platform that provides virtual private server hosting from the kernal and root access on up. The ``linode`` sub-command is used to manage API-driven cloud servers that are hosted by |linode|.
.. |knife list| replace:: The ``list`` sub-command is used to view a list of objects on the |chef server|. 
.. |knife node| replace:: The ``node`` sub-command is used to manage the nodes that exist on a |chef server|.
.. |knife openstack| replace:: |openstack| is a cloud operating system that provides support for provisioning large networks of virtual machines, pluggable and scalable network and IP management, and object and block storage. The ``openstack`` sub-command is used to manage API-driven cloud servers that are hosted by |openstack|.
.. |knife rackspace| replace:: |rackspace| is a cloud-driven platform of virtualized servers that provide services for storage and data, platform and networking, and cloud computing. The ``rackspace`` sub-command is used to manage API-driven cloud servers that are hosted by |rackspace| cloud services.
.. |knife raw| replace:: The ``raw`` sub-command is used to send a REST request a specified path using the |api chef server|.
.. |knife recipe list| replace:: The ``recipe list`` sub-command is used to view all of the recipes that are on a |chef server|. A regular expression can be used to limit the results to recipes that match a specific pattern. The regular expression must be within quotes and not be surrounded by forward slashes (/).
.. |knife role| replace:: The ``role`` sub-command is used to manage the roles that are associated with one or more nodes on a |chef server|.
.. |knife search| replace:: The ``search`` sub-command is used run a search query for information that is indexed on a |chef server|.
.. |knife show| replace:: The ``show`` sub-command is used to view the details of one (or more) objects on the |chef server|.
.. |knife site cookbook| replace:: The ``cookbook site`` sub-command is used to interact with cookbooks that are located at |url cookbook|. A user account is required for any community actions that write data to this site.
.. |knife ssh| replace:: The ``ssh`` sub-command is used to invoke |ssh| commands (in parallel) on a subset of nodes within an organization, based on the results of a search query.
.. |knife status| replace:: The ``status`` sub-command is used to display a brief summary of the nodes on a |chef server|, including the time of the most recent successful |chef client| run.
.. |knife tag| replace:: The ``tag`` sub-command is used to apply tags to nodes on a |chef server|.
.. |knife terremark| replace:: |terremark| is a cloud hosting platform that provides cloud, IT infrastructure, and managed hosting services. The ``terremark`` sub-command is used to manage API-driven cloud servers that are hosted by |terremark|.
.. |knife upload| replace:: The ``upload`` sub-command is used to upload objects to the |chef server| from the local repository.
.. |knife windows| replace:: The ``windows`` sub-command is used to configure and interact with nodes that exist on server and/or desktop machines that are running |windows|. Nodes are configured using |windows remote management|, which allows native objects---batch scripts, |windows powershell| scripts, or scripting library variables---to be called by external applications.

.. L -- EDITED
.. 

.. |latest| replace:: Indicates that the most recent version of a cookbook will be downloaded.
.. |layout create_dirs_before_symlink resource deploy| replace:: Use this layout to create directories that need to exist in the release before the symlink step. For example, in the context of a rails app, ``.gitignore`` may be used to keep tempfiles out of a repository and to prevent the ``tmp/`` directory from being part of checked out code. The symlink step will create a symlink from ``shared/pids`` to ``RELEASE/tmp/pids``. Since this behavior would fail if the ``RELEASE/tmp`` directory did not exist, that directory must be created for the deployment to proceed. It is not necessary to create directories that will be symlinked in the symlink step, such as ``log/``, as these do not rely on the existence of other directories in the release. Directories that already exist will be overwritten. Default value: ``["tmp", "public", "config"]``.
.. |layout purge_before_symlink resource deploy| replace:: Use this layout to remove directories before the production copy from a shared directory is symlinked in. ``purge_before_symlink`` is an array of directories that are removed before symlink setup. Default value: ``["log", "tmp/pids", "public/system"]``.
.. |layout symlink_before_migrate resource deploy| replace:: Use this layout to link required configuration files into place so they can be available during a migration step. ``symlink_before_migrate`` is a hash that maps files in the shared directory to files in the current release. Use ``symlink_before_migrate({})`` or ``symlink_before_migrate nil`` instead of ``symlink_before_migrate {}`` because the ``{}`` is interpreted as a block rather than an empty hash. Default value: ``{"config/database.yml" => "config/database.yml"}``.
.. |layout symlinks resource deploy| replace:: Use this layout to map files and directories during the main symlinking step. ``symlinks`` is a hash that maps files and directories from their locations in the shared directory to locations in the release directory. Default value: ``{"system" => "public/system", "pids" => "tmp/pids", "log" => "log"}``.
.. |level resource log| replace:: The level of logging that |chef| will display. |chef| uses the ``mixlib-log`` (https://github.com/opscode/mixlib-log) to handle logging behavior. Options (in order of priority): ``:debug``, ``:info``, ``:warn``, ``:error``, and ``:fatal``. Default value: ``:info``.
.. |level resource mdadm| replace:: The |raid| level. Default value: ``1``.
.. |license| replace:: The type of license under which a cookbook is distributed: ``apachev2``, ``gplv2``, ``gplv3``, ``mit``, or ``none`` (default). This option will place the appropriate license notice in the pre-created files. Be aware of the licenses for files inside of a cookbook and be sure to follow any restrictions they describe.
.. |link_type resource link| replace:: The type of link: ``:symbolic`` or ``:hard``. Default value: ``symbolic``.
.. |linode-api-key| replace:: The |linode| API key.
.. |linode-datacenter| replace:: The datacenter for the |linode| server.
.. |linode-flavor| replace:: The flavor of the |linode| server.
.. |linode-image| replace:: The image for the |linode| server.
.. |linode-kernel| replace:: The kernel for the |linode| server.
.. |linode-node-name| replace:: The name of the node in the |linode| environment.
.. |load-balancer| replace:: The load balancing application to which a server should be added.
.. |local resource template| replace:: Indicates whether a template is already present on the node. Default value: ``false``.
.. |log lwrp daemontools_service| replace:: Indicates whether a service has a custom logging script. Default value: ``nil``.
.. |log_level| replace:: The level of logging that will be stored in a log file: ``debug``, ``info``, ``warn``, ``error``, or ``fatal``.
.. |log_location| replace:: The location in which log file output files will be saved. If this location is set to something other than ``STDOUT``, standard output logging will still be performed (otherwise there would be no output other than to a file). Default value: ``STDOUT``.
.. |logfile| replace:: The location in which the log file will be located. The default location is ``STDOUT``.
.. |long| replace:: Display long output when searching nodes while using the default summary format.
.. |long description| replace:: A longer description that ideally contains full instructions on the proper use of a cookbook, including definitions, libraries, dependencies, and so on. There are two ways to use this field: with the contents embedded in the field itself or with the contents pulled from a file at a specified path, such as a README.rdoc located at the top of a cookbook directory.
.. |lwrp action add apt_repository| replace:: Use to add a new repository.
.. |lwrp action add djbdns_rr| replace:: Use to add a new resource record to |tinydns|.
.. |lwrp action add php_pear_channel| replace:: Use to add a channel to the channel list. Typically, this is used only for private channels. Public channels should be added using the ``:discover`` action.
.. |lwrp action allow firewall_rule| replace:: Use to set a rule that allows incoming traffic.
.. |lwrp action alrm daemontools_service| replace:: Use to send the ``ALRM`` signal. The following command is used: ``svc -a``.
.. |lwrp action associate aws_elastic_ip| replace:: Use to associate the specified IP address with a node.
.. |lwrp action attach aws_ebs_volume| replace:: Use to attach an existing volume to a node.
.. |lwrp action build pacman_aur| replace:: Use to build a package using the information stored in a |archlinux pkgbuild| script.
.. |lwrp action cont daemontools_service| replace:: Use to send the ``CONT`` signal. The following command is used: ``svc -c``.
.. |lwrp action create aws_ebs_volume| replace:: Use to create a new |amazon ebs| volume. This action will only make the API call to create a new volume, which will get a random volume identifier that is generated by |amazon ec2|. This identifier can be attached in the same resource by specifying the actions as an array.
.. |lwrp action create dynect_rr| replace:: Use to create a record.
.. |lwrp action create python_virtualenv| replace:: Use to create a virtual |python| environment.
.. |lwrp action create samba_user| replace:: Use to create a user.
.. |lwrp action create transmission_torrent_file| replace:: Use to download a file using the |bittorrent| protocol.
.. |lwrp action create windows_registry| replace:: Use to create a registry key with the provided values.
.. |lwrp action create_db mysql_database| replace:: Use to create a database.
.. |lwrp action delete dynect_rr| replace:: Use to delete a record.
.. |lwrp action delete python_virtualenv| replace:: Use to delete a virtual |python| environment.
.. |lwrp action delete samba_user| replace:: Use to enable a user.
.. |lwrp action deny firewall_rule| replace:: Use to set a rule that denies incoming traffic.
.. |lwrp action detach aws_ebs_volume| replace:: Use to detach the specified volume from a node.
.. |lwrp action disable bluepill_service| replace:: Use to disable a service by removing a pill link.
.. |lwrp action disable chef_handler| replace:: Use to disable the |chef| handler for the current |chef| run on the current node.
.. |lwrp action disable daemontools_service| replace:: Use to disable a service by removing the link to the service directory.
.. |lwrp action disable firewall| replace:: Use to disable a firewall. Rules will be de-activated and the node will be put into an unprotected state.
.. |lwrp action disassociate aws_elastic_ip| replace:: Use to disassociate the specified IP address from a node.
.. |lwrp action discover php_pear_channel| replace:: Use to initialize a channel from its server.
.. |lwrp action enable bluepill_service| replace:: Use to enable a service by adding a pill link.
.. |lwrp action enable chef_handler| replace:: Use to enable the |chef| handler for the current |chef| run on the current node.
.. |lwrp action enable daemontools_service| replace:: Use to enable a service by setting up the service directory and link.
.. |lwrp action enable firewall| replace:: Use to enable a firewall. Rules that have been defined for that firewall will be activated.
.. |lwrp action enable samba_user| replace:: Use to delete a user.
.. |lwrp action flush_tables_with_read_lock mysql_database| replace:: Use to flush tables with a read lock. This action should be used only when performing replication.
.. |lwrp action hup daemontools_service| replace:: Use to send the ``HUP`` signal. The following command is used: ``svc -h``.
.. |lwrp action install dmg_package| replace:: Use to install an application. (There is no ``:uninstall`` action because on in the |mac os x| environment, uninstalling an application only requires it being dragged to the trash can.)
.. |lwrp action install pacman_aur| replace:: Use to install a package that has been built with the ``:build`` action.
.. |lwrp action install pacman_group| replace:: Use to install a group.
.. |lwrp action install php_pear| replace:: Use to install a |pear| package. If a version is provided, use to install that version.
.. |lwrp action install python_pip| replace:: Use to install a |python pip| package. If a version is provided, use to install that version.
.. |lwrp action install windows_package| replace:: Use to install a package.
.. |lwrp action int daemontools_service| replace:: Use to send the ``INT`` signal. The following command is used: ``svc -i``.
.. |lwrp action join riak_cluster| replace:: Use to join a local node to a cluster.
.. |lwrp action kill daemontools_service| replace:: Use to send the ``KILL`` signal. The following command is used: ``svc -k``.
.. |lwrp action load bluepill_service| replace:: Use to load a service's pill to |bluepill|.
.. |lwrp action modify windows_registry| replace:: Use to modify an existing registry key with the provided values.
.. |lwrp action once daemontools_service| replace:: Use to start a service. The service does not restart if it stops. The following command is used: ``svc -o``.
.. |lwrp action pause daemontools_service| replace:: Use to send the ``STOP`` signal to pause a service. The following command is used: ``svc -p``.
.. |lwrp action prune aws_ebs_volume| replace:: Use to prune older snapshots from a node.
.. |lwrp action purge php_pear| replace:: Use to purge a |pear| package. This is identical in behavior to the ``:remove`` action.
.. |lwrp action purge python_pip| replace:: Use to purge a |python pip| package. This is identical in behavior to the ``:remove`` action.
.. |lwrp action query mysql_database| replace:: Use to query a database.
.. |lwrp action reject firewall_rule| replace:: Use to set a rule that rejects incoming traffic.
.. |lwrp action remove apt_repository| replace:: Use to delete a repository.
.. |lwrp action remove pacman_group| replace:: Use to remove a group.
.. |lwrp action remove php_pear| replace:: Use to remove a |pear| package.
.. |lwrp action remove php_pear_channel| replace:: Use to remove a channel from the channel list.
.. |lwrp action remove python_pip| replace:: Use to remove a |python pip| package.
.. |lwrp action remove windows_package| replace:: Use to remove a package.
.. |lwrp action replace dynect_rr| replace:: Use to replace an existing record.
.. |lwrp action reset firewall| replace:: Use to reset a firewall. Rules will be de-activated and the node will be put into the default state. This action does not enable or disable a firewall.
.. |lwrp action restart bluepill_service| replace:: Use to restart a service.
.. |lwrp action restart daemontools_service| replace:: Use to restart a service using the ``TERM`` signal. The following command is used: ``svc -t``.
.. |lwrp action snapshot aws_ebs_volume| replace:: Use to create a snapshot of the volume.
.. |lwrp action start bluepill_service| replace:: Use to start a service.
.. |lwrp action start daemontools_service| replace:: Use to start a service. If the service stops, restart it. The following command is used: ``svc -u``.
.. |lwrp action stop bluepill_service| replace:: Use to stop a service.
.. |lwrp action stop daemontools_service| replace:: Use to stop a service using the ``STOP`` signal. The following command is used: ``svc -p``.
.. |lwrp action term daemontools_service| replace:: Use to send the ``TERM`` signal. The following command is used: ``svc -t``.
.. |lwrp action unflush_tables mysql_database| replace:: Use to unflush tables. This action should be used only when performing replication.
.. |lwrp action unzip windows_zipfile| replace:: Use to unzip a compressed file.
.. |lwrp action up daemontools_service| replace:: Use to start a service. If the service stops, restart it. The following command is used: ``svc -u``.
.. |lwrp action update dynect_rr| replace:: Use to update an existing record.
.. |lwrp action update php_pear_channel| replace:: Use to update an existing channel.
.. |lwrp action upgrade php_pear| replace:: Use to upgrade a |pear| package. If a version is provided, use to upgrade to that version.
.. |lwrp action upgrade python_pip| replace:: Use to upgrade a |python pip| package. If a version is provided, use to upgrade to that version.
.. |lwrp action wait_for_ringready riak_cluster| replace:: Use to wait for cluster membership to converge ("all nodes in the cluster agree on the ring state") before joining a local node to a cluster.



.. M -- EDITED
.. 


.. |mailto resource cron| replace:: Sets the MAILTO environment variable.
.. |maintainer| replace:: The name of the person responsible for maintaining a cookbook, either an individual or an organization.
.. |maintainer email| replace:: The email address for the person responsible for maintaining a cookbook. Only one email can be listed here, so if this needs to be forwarded to multiple people consider using an email address that is already setup for mail forwarding.
.. |manual-list| replace:: Indicates that a search query is a space-separated list of servers.
.. |mask resource ifconfig| replace:: The netmask for the network interface. Default value: ``nil``.
.. |media location| replace:: The geographic location for a virtual machine and its services.
.. |medium| replace:: Display more, but not all, of a node's data when searching using the default summary format.
.. |members resource group| replace:: Indicates that users are included in the group. Default value: ``nil``.
.. |message resource http_request| replace:: The message that is sent by the HTTP request. Default value: ``name``.
.. |metadata attributes| replace:: The list of attributes that are required to configure a cookbook. An attribute name is required, followed by any of these options: ``display_name`` (the name that appears in the user interface), ``description`` (a short description), ``choice`` (an array of choices that are presented to a user), ``calculated`` (indicates if the default value is calculated by the recipe), ``type`` (the type of value, either ``string`` or ``array``), ``required`` (the level of user input, either ``required``, ``recommended``, or ``optional``), ``recipes`` (an array of recipes), and ``default`` (the attribute's default value).
.. |metadata rb conflicts| replace:: Indicates that a cookbook conflicts with another cookbook or cookbook version. Use a version constraint to define constraints for cookbook versions: ``<`` (less than), ``<=`` (less than or equal to), ``=`` (equal to), ``>=`` (greater than or equal to), ``~>`` (approximately greater than), or ``>`` (greater than).  This field requires that a cookbook with a matching name and version exist on the |chef server|. When the match exists, the |chef server| will ensure that conflicted cookbook is not included with the set of cookbooks that are sent to the node when the |chef client| runs.
.. |metadata rb depends| replace:: Indicates that a cookbook has a dependency on another cookbook or cookbook version. Use a version constraint to define dependencies for cookbook versions: ``<`` (less than), ``<=`` (less than or equal to), ``=`` (equal to), ``>=`` (greater than or equal to), ``~>`` (approximately greater than), or ``>`` (greater than). This field requires that a cookbook with a matching name and version exist on the |chef server|. When the match exists, the |chef server| will include the dependency as part of the set of cookbooks that are sent to the node when the |chef client| runs. This field should be used whenever a feature that is included in another cookbook should be run when this cookbook is run, such as including recipes, using the same resources or providers in lightweight resource providers, custom libraries, or definitions. It is very important that the ``depends`` field contain accurate data. If a dependency statement is inaccurate, |chef| may not be able to complete the configuration of the system.
.. |metadata rb provides| replace:: Adds a recipe, definition, or resource that is provided by this cookbook, should the auto-populated list be insufficient.
.. |metadata rb recommends| replace:: Adds a dependency on another cookbook that is recommended, but not required. A cookbook will still work even if recommended dependencies are not available.
.. |metadata rb replaces| replace:: Indicates that this cookbook should replace another (and can be used in-place of that cookbook).
.. |metadata rb suggests| replace:: Adds a dependency on another cookbook that is suggested, but not required. This field is weaker than ``recommends``; a cookbook will still work even when suggested dependencies are not available.
.. |metadata rb supports| replace:: Indicates that a cookbook has a supported platform. Use a version constraint to define dependencies for platform versions: ``<`` (less than), ``<=`` (less than or equal to), ``=`` (equal to), ``>=`` (greater than or equal to), ``~>`` (approximately greater than), or ``>`` (greater than). To specify more than one platform, use more than one ``supports`` field, once for each platform.
.. |metric resource ifconfig| replace:: The routing metric for the interface. Default value: ``nil``.
.. |migrate resource deploy| replace:: Indicates that the migration command will be run. Default value: ``false``.
.. |migration_command resource deploy| replace:: A string that contains a shell command that can be executed to run a migration operation.
.. |minute resource cron| replace:: The minute at which the |cron| entry should run (0 - 59). Default value: ``*``.
.. |mode resource cookbook_file| replace:: The octal mode of the file. When specifying ``mode``, the value can be a quoted string ("644"). For a numeric value, it should be five digits ("00644") to ensure that it is correctly parsed by |ruby|. The default value for this attribute varies.
.. |mode resource directory| replace:: The octal mode of the file. When specifying ``mode``, the value can be a quoted string ("644"). For a numeric value, it should be five digits ("00644") to ensure that it is correctly parsed by |ruby|. The default value for this attribute varies.
.. |mode resource file| replace:: The octal mode of the file. When specifying ``mode``, the value can be a quoted string ("644"). For a numeric value, it should be five digits ("00644") to ensure that it is correctly parsed by |ruby|. The default value for this attribute varies.
.. |mode resource remote_file| replace:: The octal mode of the file. When specifying ``mode``, the value can be a quoted string ("644"). For a numeric value, it should be five digits ("00644") to ensure that it is correctly parsed by |ruby|. The default value for this attribute varies.
.. |mode resource template| replace:: The octal mode of the file. When specifying ``mode``, the value can be a quoted string ("644"). For a numeric value, it should be five digits ("00644") to ensure that it is correctly parsed by |ruby|. The default value for this attribute varies.
.. |month resource cron| replace:: The month in the year on which the |cron| entry should run (1 - 12). Default value: ``*``.
.. |mount_point resource mount| replace:: The directory (or path) in which the device should be mounted. Default value: ``name``.
.. |mtu resource ifconfig| replace:: The maximum transmission unit (MTU) for the network interface. Default value: ``nil``.



.. N -- EDITED
.. 

.. |name cookbook| replace:: The name of a cookbook.
.. |name lwrp firewall| replace:: An arbitrary name that is used to uniquely identify the resource.
.. |name lwrp firewall_rule| replace:: A unique name for a firewall rule.
.. |name_type resource directory| replace:: Indicates whether the ``node_name`` attribute is a short node name (``sname``) or a long node name (``name``). A node with a long node name cannot communicate with a node with a short node name. Default value: ``sname``.
.. |netmask resource route| replace:: The decimal representation of the network mask. For example: ``255.255.255.0``.
.. |network| replace:: The name of the network in which the virtual machine will be created.
.. |network resource ifconfig| replace:: The network address for the network interface. Default value: ``nil``.
.. |no-color| replace:: Indicates that color will not be used in the output.
.. |no-editor| replace:: Indicates that |chef editor| will not be opened; data will be accepted as-is.
.. |no name tags| replace:: Indicates that tag names will not be displayed in the output.
.. |no_proxy| replace:: A comma-separated list of URLs that do not need a proxy.
.. |[no-]host-key-verify| replace:: Use ``--no-host-key-verify`` to disable host key verification. Host key verification is enabled by default.
.. |node_name resource directory| replace:: The hostname to which the node will connect. Default value: ``chef@localhost``.
.. |node-name| replace:: The name of the node on the |chef server|.
.. |node-name purge| replace:: The name of the node and client to delete, if different from the server name. This must be used with the ``--purge`` option.
.. |node_name| replace:: The name of the node. This is used to determine which configuration should be applied and to set the ``client_name`` (which is the name used when authenticating to a |chef server|). The default value is set automatically to be the fully qualified domain name (FQDN) of the |chef server|, as detected by |ohai|.
.. |node_path| replace:: The location in which to look for node-specific recipes. Default value: ``/var/chef/node``.


.. O -- EDITED
.. 


.. |onboot resource ifconfig| replace:: Indicates that the network interface should be brought up on boot when this value is set to ``yes``. Default value: ``nil``.
.. |onparent resource ifconfig| replace:: Indicates that the network interface should be brought up when its parent interface is brought up when this value is set to ``yes``. Default value: ``nil``.
.. |openid_cstore_couchdb| replace:: Indicates whether |open id| data is stored in |couch db| (instead of the file system). Default value: ``false``.
.. |openid_cstore_path| replace:: The location in which |open id| data is stored in the file system. Default value: ``/var/chef/openid/cstore``.
.. |os_process_timeout| replace:: The amount of time (in milliseconds) before an external process times out.
.. |openstack-access-key-id| replace:: The access key identifier used with the |openstack| environment.
.. |openstack-api-endpoint| replace:: The API endpoint used with the |openstack| environment.
.. |openstack-secret-access-key| replace:: The secret access key for the API endpoint used with the |openstack| environment.
.. |options lwrp pacman_aur| replace:: Additional options that are passed to the configure command.
.. |options lwrp pacman_group| replace:: Additional options that are passed to the |archlinux pacman| command.
.. |options lwrp php_pear| replace:: Additional options that are added to the underlying |pear| package command.
.. |options lwrp python_pip| replace:: Additional options to the underlying |python pip| package command.
.. |options lwrp windows_package| replace:: Additional options that are passed to the installation command.
.. |options resource mount| replace:: An array or string that contains mount options. If this value is a string, it will be converted to an array. Default value: ``defaults``.
.. |options resource package| replace:: Additional options that are added to the underlying package command. Can be used with |apt|, |debian dkpg|, |gentoo|, |rpm|, and |rubygems|. Default value: ``nil``.
.. |options resource yum| replace:: Indicates that additional options to the ``yum localinstall`` command will be used, such as those that enable or disable a repository, disable integrity checking, and so on. Default value: ``nil``.
.. |os-disk-name| replace:: The operating system type of the |windows azure| OS image: ``Linux`` or ``Windows``.
.. |overwrite lwrp windows_zipfile| replace:: Indicates that when a file exists, it will be overwritten. Default value: ``false``.
.. |overwrite resource remote_directory| replace:: Indicates that files (if different from the source) will be overwritten. Default value: ``true``.
.. |owner lwrp daemontools_service| replace:: The owner of the service directory and scripts.
.. |owner lwrp python_virtualenv| replace:: The owner of the virtual |python| environment.
.. |owner lwrp transmission_torrent_file| replace:: The owner of a file.
.. |owner resource cookbook_file| replace:: The owner of the file.
.. |owner resource directory| replace:: The owner of the directory.
.. |owner resource file| replace:: The owner of the file.
.. |owner resource link| replace:: The owner associated with a symbolic link.
.. |owner resource remote_file| replace:: The owner of the file.
.. |owner resource template| replace:: The owner of the file.


.. P -- EDITED
.. 


.. |package_name lwrp pacman_aur| replace:: The name of the package.
.. |package_name lwrp pacman_group| replace:: The name of the package group.
.. |package_name lwrp php_pear| replace:: The name of the |pear| package to install.
.. |package_name lwrp python_pip| replace:: The name of |python pip| package to instal.
.. |package_name lwrp windows_package| replace:: The display name of the application installation package. This is the same as the ``DisplayName`` registry value in the uninstallation data that is created during package installation. The easiest way to find the proper ``DisplayName`` value is to install a package on a machine and search for the uninstall information under one of the following registry keys: ``HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Uninstall``, ``HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Uninstall``, or ``HKEY_LOCAL_MACHINE\Software\Wow6464Node\Microsoft\Windows\CurrentVersion\Uninstall``. This value may also be identified by the uninstaller itself (in the ``Name`` column) and can be viewed while running the uninstaller.
.. |package_name resource package| replace:: The name of the package to install. Default value: ``name``.
.. |package_name resource yum| replace:: One of the following: the name of a package, the name of a package and its architecture; the name of a dependency. Default value: ``name``.
.. |PART| replace:: The part of the cookbook to show: ``attributes``, ``definitions``, ``files``, ``libraries``, ``providers``, ``recipes``, ``resources``, or ``templates``. More than one part can be specified.
.. |pass resource mount| replace:: The pass number used by the file system check (fsck) command while creating a file systems table (fstab) entry. Default value: ``2``.
.. |password lwrp dynect_rr| replace:: The |dns update api| password.
.. |password lwrp mysql_database| replace:: The password for the specified username.
.. |password lwrp samba| replace:: The password for a user. This is passed to the ``smbpasswd`` program in |samba|.
.. |password resource user| replace:: The password shadow hash. This attribute requires that ``ruby-shadow`` be installed. This is part of the |debian| package: ``libshadow-ruby1.8``. Default value: ``nil``.
.. |patches lwrp pacman_aur| replace:: An array of files to be used as patches for the package. Default value: ``[]``.
.. |path lwrp python_virtualenv| replace:: The path to the location in which the virtual |python| environment will be created. Default value: ``\``.
.. |path resource cookbook_file| replace:: The path to the file. Default value: ``name``.
.. |path resource cron| replace:: Sets the PATH environment variable.
.. |path resource directory| replace:: The path to the directory. Default value: ``name``.
.. |path resource execute| replace:: An array of paths to use when searching for a command. These paths are not added to the command's environment $PATH. Default value: ``nil`` (uses system path).
.. |path resource file| replace:: The path to the file. Default value: ``name``.
.. |path resource remote_directory| replace:: The path to the directory. Default value: ``name``.
.. |path resource remote_file| replace:: The path to the file. Default value: ``name``.
.. |path resource template| replace:: The path to the file. Default value: ``name``.
.. |path_to_location lwrp windows_zipfile| replace:: The path to the location in which a file will be unzipped.
.. |pattern resource service| replace:: The pattern to look for in the process table. Default value: ``service_name``.
.. |pid_file| replace:: The location in which a process identification number (pid) is saved. An executable, when started as a daemon, will write the pid to the specified file. Default value: ``/tmp/executable.pid``.
.. |pkgbuild_src lwrp pacman_aur| replace:: Indicates whether to use a custom ``PKGBUILD`` file. When ``true``, the ``pacman_aur`` lightweight resource will look for a ``cookbook_file`` named ``PKGBUILD`` to use as package instructions. Default value: ``false``.
.. |platform| replace:: The platform for which a cookbook is designed.
.. |platform-version| replace:: The version of the platform.
.. |plugin resource ohai| replace:: Optional. Indicates that only the specified plug-ins are reloaded by |ohai|. Default value: ``nil`` (all plug-ins are reloaded ).
.. |port lwrp firewall_rule| replace:: The port number.
.. |position lwrp firewall_rule| replace:: The position at which a rule is inserted. If this value is not specified, a rule is inserted at the end of a rule list.
.. |preferred_state lwrp php_pear| replace:: By default, |pear| only installs stable packages. Packages can be installed in various non-stable states: ``devel``, ``alpha`` or ``beta``. Default value: ``stable``.
.. |prerelease| replace:: Indicates that pre-release |chef| gems should be installed.
.. |print-after| replace:: Indicates that data will be shown after a destructive operation.
.. |private-key-file| replace:: The file in which the |ssh| private key used for authentication is located.
.. |project_id| replace:: The identifier for the |google compute engine| project.
.. |protocol lwrp firewall_rule| replace:: The protocol used by the firewall rule. Valid values are: ``:all``, ``:udp``, ``:tcp``. Default value: ``:all``.
.. |public-key-file| replace:: The file in which the |ssh| public key used for authentication is located.
.. |purge amazon ec2| replace:: Indicates that all corresponding nodes and clients on the |chef server| will be destroyed, in addition to the |amazon ec2| node itself. This action (by itself) assumes that the node and client have the same name as the server; if they do not have the same names, then the ``--node-name`` option must be used to specify the name of the node.
.. |purge cookbook| replace:: Indicates that a cookbook (or cookbook version) will be removed entirely from the |chef server|. This action should be used carefully because only one copy of any single file is stored on the |chef server|. Consequently, purging a cookbook will disable any other cookbook that references one or more files from a cookbook that has been purged.
.. |purge node hp| replace:: Indicates that all corresponding nodes on the |chef server| will be destroyed, in addition to the |hp cloud| node itself. This option (by itself) assumes that the node and client have the same name as the server. If they do not, use the ``--node-name`` option to specify the correct name for the node.
.. |purge node rackspace| replace:: Indicates that all corresponding nodes on the |chef server| will be destroyed, in addition to the |rackspace| node itself. This option (by itself) assumes that the node and client have the same name as the server. If they do not, use the ``--node-name`` option to specify the correct name for the node.
.. |purge os disk windows azure| replace:: Indicates that all corresponding operating system disks will be destroyed, in addition to the |windows azure| node itself.
.. |purge resource remote_directory| replace:: Indicates that extra files found in the target directory will be purged. Default value: ``false``.
.. |purge windows azure| replace:: Indicates that all corresponding nodes and clients on the |chef server| will be destroyed, in addition to the |windows azure| node itself. This action (by itself) assumes that the node and client have the same name as the server; if they do not have the same names, then the ``--node-name`` option must be used to specify the name of the node.
.. |purge_before_symlink resource deploy| replace:: An array of paths, relative to the application root, that are to be removed from a checkout before symbolic linking. Default value: ``%w{log tmp/pids public/system}``.


.. Q -- EDITED
.. 

.. |query| replace:: Use to protect search queries that start with a hyphen (-). A ``-q`` query may be specified as an argument or an option, but not both.


.. R -- EDITED
.. 

.. |rackspace-api-auth-url| replace:: The URL used to authenticate the |rackspace| API key. Default: ``auth.api.rackspacecloud.com``.
.. |rackspace-api-key| replace:: The unique alphanumeric identifier that is associated with a |rackspace| account.
.. |rackspace-metadata| replace:: A JSON string that contains a metadata hash.
.. |rackspace-username| replace:: The user name for the |rackspace| account.
.. |raid_device resource mdadm| replace:: The name of the |raid| device. Default value: ``name``.
.. |rdata lwrp dynect_rr| replace:: The record data.
.. |readme-format| replace:: The document format of the readme file: ``md`` (markdown) and ``rdoc`` (|ruby| docs).
.. |recipe_url| replace:: The URL location from which a remote cookbook |tar gz| will be downloaded.
.. |record_type lwrp dynect_rr| replace:: The type of record. For example: ``A``, ``CNAME``, and so on.
.. |recursive resource directory| replace:: Indicates whether the directory will be created or deleted recursively. For the ``owner``, ``group``, and ``mode`` attributes, the value of this attribute applies only to the leaf directory. Default value: ``false``.
.. |reference resource scm| replace:: The alias for revision. This action only works with the ``git`` provider.
.. |region amazon| replace:: The name of the region from which instances of hosted applications are launched. Each region has a unique endpoint.
.. |region eucalyptus| replace:: The name of the region from which instances of hosted applications are launched.
.. |region openstack| replace:: The name of the region from which instances of hosted applications are launched.
.. |reload_command resource service| replace:: The command used to tell a service to reload its configuration. Default value: ``nil``.
.. |remote resource deploy| replace:: |git| only. The remote repository to be used when synchronizing an existing clone. Default value: ``origin``.
.. |remote resource scm| replace:: |git| only. Use to define the remote repository that is when synchronizing an existing close.
.. |repo resource deploy| replace:: The alias for the repository.
.. |repo_name lwrp apt_repository| replace:: The name of the repository. Default value: ``name``.
.. |repository| replace:: The path to the |chef| repository.
.. |repository resource deploy| replace:: The URI for the repository.
.. |repository resource scm| replace:: The URI for the repository.
.. |repository_cache resource deploy| replace:: The name of the sub-directory in which the pristine copy of an application's source is kept. Default value: ``cached-copy``.
.. |resource action add ifconfig| replace:: Use to run |ifconfig| to configure a network interface and (on some platforms) write a configuration file for that network interface.
.. |resource action add route| replace:: Use to add a route.
.. |resource action assemble mdadm| replace:: Use to assemble a previously created array into an active array.
.. |resource action checkout scm| replace:: Use to clone or check out the source. When a checkout is available, this provider does nothing.
.. |resource action create cookbook_file| replace:: Use to create a file.
.. |resource action create cron| replace:: Use to create an entry in a |cron| table file ("crontab"). If an entry already exists with the same name, use to update that entry.
.. |resource action create directory| replace:: Use to create a directory.
.. |resource action create env| replace:: Use to create a new environment variable.
.. |resource action create file| replace:: Use to create a file.
.. |resource action create group| replace:: Use to create a group.
.. |resource action create link| replace:: Use to create a link.
.. |resource action create mdadm| replace:: Use to create a new array with per-device superblocks.
.. |resource action create remote_file| replace:: Use to synchronize a file from a remote source to the file system.
.. |resource action create ruby_block| replace:: Use to create a |ruby| block.
.. |resource action create user| replace:: Use to create a user with given attributes. If the user already exists, use to ensure that the resource is in the correct state (which is effectively the same as ``:modify``).
.. |resource action create template| replace:: Use to create a file.
.. |resource action create_if_missing cookbook_file| replace:: Use to create a file if it doesn't already exist.
.. |resource action create_if_missing file| replace:: Use to create a file only if the file does not already exist. (When the file exists, nothing happens.)
.. |resource action create_if_missing remote_file| replace:: Use to create a file locally by fetching from the remote source, but only if the file doesn't yet exist.
.. |resource action create_if_missing template| replace:: Use to create a file only if it does not exist.
.. |resource action delete cookbook_file| replace:: Use to delete a file.
.. |resource action delete cron| replace:: Use to delete an entry from a |cron| table file ("crontab").
.. |resource action delete directory| replace:: Use to delete a directory.
.. |resource action delete env| replace:: Use to delete an environment variable.
.. |resource action delete file| replace:: Use to delete a file.
.. |resource action delete http_request| replace:: Use to send a DELETE request.
.. |resource action delete ifconfig| replace:: Use to run |ifconfig| to disable a network interface and (on some platforms) delete that network interface's configuration file.
.. |resource action delete link| replace:: Use to delete a link.
.. |resource action delete route| replace:: Use to delete a route.
.. |resource action deploy deploy| replace:: Use to deploy an application.
.. |resource action disable ifconfig| replace:: Use to run |ifconfig| to disable a network interface.
.. |resource action disable mount| replace:: Use to remove an entry from the file systems table (fstab).
.. |resource action disable service| replace:: Use to disable a service.
.. |resource action enable ifconfig| replace:: Use to run |ifconfig| to enable a network interface.
.. |resource action enable mount| replace:: Use to add an entry to the file systems table (fstab).
.. |resource action export scm| replace:: Use to export the source, excluding or removing any version control artifacts.
.. |resource action export service| replace:: Use to enable a service at boot.
.. |resource action force_deploy deploy| replace:: Use to remove any existing release of the same code version and re-deploy a new one in its place.
.. |resource action force_export scm| replace:: Use to export the source, excluding or removing any version control artifacts and to force an export of the source that is overwriting the existing copy (if it exists).
.. |resource action get http_request| replace:: Use to send a GET request.
.. |resource action head http_request| replace:: Use to send a HEAD request.
.. |resource action install package| replace:: Use to install a package. If a version is specified, use to install the specified version of a package.
.. |resource action install yum| replace:: Indicates that a package (or a version, when provided) will be installed.
.. |resource action lock user| replace:: Use to lock a user's password.
.. |resource action manage group| replace:: Use to manage an existing group. This action will do nothing if the group does not exist.
.. |resource action manage user| replace:: Use to manage an existing user. This action will do nothing if the user does not exist.
.. |resource action modify env| replace:: Use to modify an existing environment variable. This will append the new value to the existing value, using the delimiter specified by the ``delim`` attribute.
.. |resource action modify group| replace:: Use to modify an existing group. This action will raise an exception if the group does not exist.
.. |resource action modify user| replace:: Use to modify an existing user. This action will raise an exception if the user does not exist.
.. |resource action mount mount| replace:: Use to mount a device.
.. |resource action nothing erlang| replace:: Indicates that the |erlang| call should not be run.
.. |resource action nothing execute| replace:: Indicates that the command should not be run. This action is used to specify that a command is run only when another resource notifies it.
.. |resource action nothing service| replace:: Use to do nothing with a service.
.. |resource action options http_request| replace:: Use to send an OPTIONS request.
.. |resource action post http_request| replace:: Use to send a POST request.
.. |resource action purge package| replace:: Use to purge a package. This action typically removes the configuration files as well as the package.
.. |resource action put http_request| replace:: Use to send a PUT request.
.. |resource action reload ohai| replace:: Use to reload the |ohai| configuration on a node.
.. |resource action reload service| replace:: Use to reload the configuration for this service.
.. |resource action remount mount| replace:: Use to remount a device.
.. |resource action remove group| replace:: Use to remove a group.
.. |resource action remove package| replace:: Use to remove a package.
.. |resource action remove user| replace:: Use to remove a user.
.. |resource action remove yum| replace:: Indicates that a package (or a version, when provided) will be removed.
.. |resource action restart service| replace:: Use to restart a service.
.. |resource action rollback deploy| replace:: Use to roll an application back to the previous release.
.. |resource action run erlang| replace:: Indicates that the |erlang| call should be run.
.. |resource action run execute| replace:: Indicates that the command should be run.
.. |resource action run powershell_script| replace:: Use to run the script.
.. |resource action run script| replace:: Use to run a script.
.. |resource action start service| replace:: Use to start a service (and keep it running until stopped or disabled).
.. |resource action stop mdadm| replace:: Use to stop an active array.
.. |resource action stop service| replace:: Use to stop a service.
.. |resource action sync scm| replace:: Use to update the source to the specified version, or to get a new clone or checkout.
.. |resource action touch file| replace:: Use to touch a file. This updates the access (atime) and file modification (mtime) times for a file.
.. |resource action umount mount| replace:: Use to unmount a device.
.. |resource action unlock user| replace:: Use to unlock a user's password.
.. |resource action upgrade package| replace:: Use to upgrade a package to the latest version.
.. |resource action upgrade yum| replace:: Indicates that a package will be upgraded to the latest available version.
.. |resource action write log| replace:: Use to write to log.
.. |resource desc cookbook_file| replace:: The |resource cookbook file| resource is used to transfer files from a sub-directory of the ``files/`` directory in a cookbook to a specified path on the host running the |chef client| or |chef solo|. The file in a cookbook is selected according to file specificity, which allows different source files to be used based on the hostname, host platform (operating system, distro, or as appropriate), or platform version. Place files under COOKBOOK_NAME/files/default to use them on any platform.
.. |resource desc cron| replace:: The |resource cron| resource is used to manage |cron| entries for time-based job scheduling. Attributes for a schedule will default to ``*`` of not provided, so only specify scheduling attributes that are applicable to a |cron| entry. The |resource cron| resource requires that a package be installed that provides the |crontab| program, typically |cron|.
.. |resource desc deploy| replace:: The |resource deploy| resource is used to manage and control deployments. There is a large number of attributes available for this resource that can be used to specify many different behaviors. Please review them carefully before deciding on which approach is required for a particular recipe.
.. |resource desc directory| replace:: The |resource directory| resource is used to manage a directory.
.. |resource desc env| replace:: The |resource env| resource is used to manage environment keys in |windows|. After an environment key is set, |windows| must be restarted before the environment key will be available to the |windows task scheduler|.
.. |resource desc erlang_call| replace:: The |resource erlang call| resource is used to connect to a node located within a distributed |erlang| system. An |resource erlang call| resource is not idempotent. Use the ``not_if`` and ``only_if`` meta parameters to guard the use of this resource for idempotence.
.. |resource desc execute| replace:: The |resource execute| resource is used to execute a command. Commands that are executed with this resource are (by their nature) not idempotent, as they are typically unique to the environment in which they are run. Use the ``not_if`` and ``only_if`` meta parameters to guard the use of this resource for idempotence.
.. |resource desc file| replace:: The |resource file| resource is used to manage files that are present on a node, including setting or updating the contents of those files.
.. |resource desc group| replace:: The |resource group| resource is used to manage a local group.
.. |resource desc http_request| replace:: The |resource http request| resource is used to send an HTTP request (GET, PUT, POST, DELETE, HEAD, or OPTIONS) with an arbitrary message. This resource is useful when custom callbacks are necessary.
.. |resource desc ifconfig| replace:: The |resource ifconfig| resource is used to manage interfaces.
.. |resource desc link| replace:: The |resource link| resource is used to create symbolic or hard links.
.. |resource desc log| replace:: The |resource log| resource is used to create log entries from a recipe.
.. |resource desc mdadm| replace:: The |resource mdadm| resource is used to manage |mdadm| software |raid| devices in a |linux| environment. The |resource mdadm| provider will create and assemble an array, but it will not create the config file that is used to persist the array upon reboot. If the config file is required, it must be done by specifying a template with the correct array layout, and then by using the |resource mount| provider to create a file systems table (fstab) entry.
.. |resource desc mount| replace:: The |resource mount| resource is used to manage a mounted file system.
.. |resource desc ohai| replace:: The |resource ohai| resource is used to re-load the |ohai| configuration on a node. This allows recipes that change system attributes (like adding a user) to refer to those attributes later on during the |chef| run.
.. |resource desc package| replace:: The |resource package| resource is used to manage packages. When the package is installed from a local file (such as |rubygems| |debian dkpg| or |rpm|) the file must be added to the node using the |resource remote file| or |resource cookbook file| resources.
.. |resource desc powershell_script| replace:: The |resource powershell script| resource is used to execute a script using the |windows powershell| interpreter. This resource is used just like the |resource script| resource or the providers for |bash|, |csh|, |perl|, |python|, and |ruby|. The |resource powershell script| resource is similar to those, but with some small tweaks under the covers for the |windows| platform and |windows powershell| interpreter. This resource creates and executes a temporary file (similar to the |resource script| resource), rather than running it inline. This resource includes actions (``:run`` and ``:nothing``; ) and attributes (``creates``, ``cwd``, ``environment``, ``group``, ``path``, ``timeout``, and ``user``) that are available from the |resource execute| resource. Commands that are executed with this resource are (by their nature) not idempotent, as they are typically unique to the environment in which they are run. Use the ``not_if`` and ``only_if`` meta parameters to guard the use of this resource for idempotence.
.. |resource desc remote_directory| replace:: The |resource remote directory| resource is used to recursively transfer a directory from a cookbook's files or default directory. A remote directory will obey file specificity; the directory that will be copied should be located under COOKBOOK_NAME/files/default/REMOTE_DIRECTORY. A host-or distribution-specific path can also be used.
.. |resource desc remote_file| replace:: The |resource remote file| resource is used to transfer a file from a remote location using file specificity. This resource is similar to |resource file|.
.. |resource desc route| replace:: The |resource route| resource is used to manage the system routing table in a |linux| environment.
.. |resource desc ruby_block| replace:: The |resource ruby block| resource is used to execute |ruby| code during a |chef| run. |ruby| code in the ``ruby_block`` resource is evaluated with other resources during convergence, whereas |ruby| code outside of a ``ruby_block`` resource is evaluated before other resources, as the recipe is compiled.
.. |resource desc scm| replace:: The |resource scm| resource is used to manage source control resources that exist in a |git| repository or a |svn| repository.
.. |resource desc script| replace:: The |resource script| resource is used to execute using the specified interpreter (|bash|, |csh|, |perl|, |python|, or |ruby|). This resource includes all of the actions and attributes that are available to the |resource execute| resource. The |ruby| script resource is different from the |resource ruby block| resource because |ruby| run with the |resource script| resource is created as a temporary file and executed like other script resources, rather than run inline. Commands that are executed with this resource are (by their nature) not idempotent, as they are typically unique to the environment in which they are run. Use the ``not_if`` and ``only_if`` meta parameters to guard the use of this resource for idempotence.
.. |resource desc service| replace:: The |resource service| resource is used to manage a service.
.. |resource desc template| replace:: The |resource template| resource is used to manage file contents with an embedded |ruby| (erb) template. This resource includes actions and attributes from the |resource file| resource. Templates follow the same file specificity rules as the |resource remote file| and |resource file| resources.
.. |resource desc user| replace:: The |resource user| resource is used to manage a local user.
.. |resource desc yum| replace:: The |resource yum package| resource is used to use |yum| for installation, upgrade, and removal of packages. This resource is able to resolve provides data for packages much like |yum| can do when running it from the command line. This allows a variety of options for installing packages, like minimum versions, virtual provides, and library names.
.. |response code 200 ok| replace:: OK. The request was successful.
.. |response code 201 created| replace:: Created. The object was created.
.. |response code 400 bad request| replace:: Bad request. The object has already been committed or one (or more) of the objects were not properly uploaded.
.. |response code 400 checksum| replace:: The contents of the file do not have the correct checksum.
.. |response code 400 unsuccessful| replace:: The request was unsuccessful.
.. |response code 401 conflict| replace:: Conflict. The object already exists.
.. |response code 401 unauthorized| replace:: Unauthorized. The user which made the request is not authorized to perform the action.
.. |response code 403 forbidden| replace:: Forbidden. The user which made the request is not authorized to perform the action.
.. |response code 404 not found| replace:: Not found. The requested object does not exist.
.. |response code 409 conflict| replace:: Conflict. The object already exists.
.. |response code 409 unauthorized| replace:: Unauthorized. The user which made the request is not authorized to perform the action.
.. |response_file resource package| replace:: Optional. The response file that is used to pre-seed packages. Default value: ``nil``.
.. |rest_timeout| replace:: The time (in seconds) after which an HTTP REST request will time out. Default value: ``300``.
.. |restart_command resource deploy| replace:: A string that contains a shell command that can be executed to run a restart operation . Default value: ``nil``.
.. |restart_command action write service| replace:: The command used to restart a service. Default value: ``nil``.
.. |returns| replace:: A comma-delimited list of return codes, which indicate the success or failure for the command that was run remotely.
.. |returns resource execute| replace:: The return value for a command. This may be an array of accepted values. An exception is raised when the return value(s) do not match. Default value: ``0``.
.. |revision resource deploy| replace:: The revision to be checked out. This can be symbolic, like ``HEAD`` or it can be a source control management-specific revision identifier. Default value: ``HEAD``.
.. |revision resource scm| replace:: The revision to be checked out. This can be symbolic, like ``HEAD`` or it can be a source control management-specific revision identifier. Default value: ``HEAD``.
.. |riak_admin_path lwrp riak_cluster| replace:: The location in which ``riak`` and ``riak-admin`` scripts are located. Default value: ``/usr/sbin``.
.. |rights resource cookbook_file| replace:: The permissions for users and groups in a |windows| environment. For example: ``rights <permissions>, <principal>, <options>`` where ``<permissions> is specifies the rights granted to the principal, ``<principal>`` is the group or user name, and ``<options``> is a hash with one (or more) advanced rights options.
.. |rights resource directory| replace:: |windows| only. The permissions for users and groups in a |windows| environment. For example: ``rights <permissions>, <principal>, <options>`` where ``<permissions> is specifies the rights granted to the principal, ``<principal>`` is the group or user name, and ``<options``> is a hash with one (or more) advanced rights options.
.. |rights resource file| replace:: |windows| only. The permissions for users and groups in a |windows| environment. For example: ``rights <permissions>, <principal>, <options>`` where ``<permissions> is specifies the rights granted to the principal, ``<principal>`` is the group or user name, and ``<options``> is a hash with one (or more) advanced rights options.
.. |rights resource remote_directory| replace:: |windows| only. The permissions for users and groups in a |windows| environment. For example: ``rights <permissions>, <principal>, <options>`` where ``<permissions> is specifies the rights granted to the principal, ``<principal>`` is the group or user name, and ``<options``> is a hash with one (or more) advanced rights options.
.. |rights resource remote_file| replace:: |windows| only. The permissions for users and groups in a |windows| environment. For example: ``rights <permissions>, <principal>, <options>`` where ``<permissions> is specifies the rights granted to the principal, ``<principal>`` is the group or user name, and ``<options``> is a hash with one (or more) advanced rights options.
.. |rights resource template| replace:: |windows| only. The permissions for users and groups in a |windows| environment. For example: ``rights <permissions>, <principal>, <options>`` where ``<permissions> is specifies the rights granted to the principal, ``<principal>`` is the group or user name, and ``<options``> is a hash with one (or more) advanced rights options.
.. |role-name| replace:: The name of the virtual machine.
.. |role-size| replace:: The size of the virtual machine: ``ExtraSmall``, ``Small``, ``Medium``, ``Large``, or ``ExtraLarge``.
.. |role_path| replace:: The location in which role files are located. Default value: ``/var/chef/roles``.
.. |rollback_on_error resource deploy| replace:: Indicates whether a deploy resource will rollback to a previously-deployed release if an error occurs when deploying a new release. Default value: ``false``.
.. |rows| replace:: The number of rows to be returned.
.. |rpc_host lwrp transmission_torrent_file| replace:: The address for the host to which a |bittorrent| transmission connection is made. Default value: ``localhost``.
.. |rpc_password lwrp transmission_torrent_file| replace:: The password for the |bittorrent| transmission account. This is often ``node['transmission']['rpc_password']``, which by default is a secure password generated for the node.
.. |rpc_port lwrp transmission_torrent_file| replace:: The port for the host to which a |bittorrent| transmission connection is made. Default value: ``9091``.
.. |rpc_username lwrp transmission_torrent_file| replace:: The user name for the |bittorrent| transmission account. Default value: ``transmission``.
.. |ruby dsl cookbook| replace:: A version constraint for a single cookbook.
.. |ruby dsl cookbook version| replace:: A version constraint for a group of cookbooks.
.. |ruby dsl default attribute| replace:: Optional. A set of attributes that should be applied to all nodes, assuming the node does not already have a value for the attribute. This is useful for setting global defaults that can then be overridden for specific nodes. If more than one role attempts to set a default value for the same attribute, the last role applied will win. When nested attributes are present, they will be preserved.
.. |ruby dsl description| replace:: A description of the functionality that is covered.
.. |ruby dsl environment run list| replace:: Optional. A list of environments, each specifying a recipe or a role that will be applied to that environment. Each environment in the list may only have a single recipe or role assigned to it. This setting must specify the ``_default`` environment. If the ``_default`` environment is set to ``[]`` or ``nil`` then the run list will be empty. **jamescott: SEE CHEF-2636.**
.. |ruby dsl name| replace:: A unique name within the |chef| organization. Each name must be unique and must be made up of letters (upper- and lower-case), numbers, underscores, and hyphens: [A-Z][a-z][0-9] and [_-]. Spaces are not allowed.
.. |ruby dsl override attribute| replace:: Optional. A set of attributes that should be applied to all nodes, even if the node already has a value for an attribute. This is useful for ensuring that certain attributes always have specific values. If more than one role attempts to set an override value for the same attribute, the last role applied will win. When nested attributes are present, they will be preserved.
.. |ruby dsl run list| replace:: A list of recipes and/or roles that will be applied **and** the order in which those recipes and/or roles will be applied.
.. |run-list| replace:: A comma-separated list of roles and/or recipes to be applied.
.. |run-list indicator| replace:: Indicates that only the run-list will be shown.


.. S -- EDITED
.. 

.. |sandbox_path| replace:: The location in which cookbook files are stored (temporarily) during upload.
.. |scm_provider resource deploy| replace:: The name of the source control management provider to be used. Default value: ``Chef::Provider::Git``. Optional values: ``Chef::Provider::Subversion``.
.. |script-path| replace:: A colon-separated path at which |ruby| scripts are located.
.. |SEARCH_QUERY| replace:: The search query used to identify a a list of items on a |chef server|. This option uses the same syntax as the ``search`` sub-command.
.. |SEARCH_QUERY SSH| replace:: The search query used to return a list of servers to be accessed using |ssh| and the specified ``SSH_COMMAND``. This option uses the same syntax as the search sub-command.
.. |secret| replace:: The encryption key that is used for values contained within a data bag.
.. |secret-file| replace:: The path to the file that contains the encryption key.
.. |server-name| replace:: The name of the server.
.. |server-url| replace:: The URL for the |chef server|.
.. |service_name lwrp bluepill_service| replace:: The name of the service. A recipe that uses the |lwrp bluepill service| lightweight resource must contain a template resource for the pill and it must be named ``NAME.pill.erb`` where ``NAME`` is the ``service_name`` attribute.
.. |service_name lwrp daemontools_service| replace:: The name of the service.
.. |service_name resource service| replace:: The name of the service. Default value: ``name``.
.. |shallow_clone resource deploy| replace:: Indicates that the clone depth is set to 5. Default value: ``true``. This action only works with |git|.
.. |shell resource cron| replace:: Sets the SHELL environment variable.
.. |shell resource user| replace:: The login shell. Default value: ``nil``.
.. |signing_ca_cert| replace:: The path to where the certificate is located. This setting is generated automatically by |chef| and is passed to |open ssl| Default value: ``/var/chef/ca/cert.pem``.
.. |signing_ca_key| replace:: The path to where the private key is located. This setting is generated automatically by |chef| and is passed to |open ssl| Default value: ``/var/chef/ca/key.pem``.
.. |signing_ca_user| replace:: The user associated with the |ca| policy. This setting is passed by |chef| to |open ssl|.
.. |signing_ca_group| replace:: The group associated with the |ca| policy. This setting is passed by |chef| to |open ssl|.
.. |signing_ca_country| replace:: The country code associated with the |ca| policy. This setting is passed by |chef| to |open ssl|.
.. |signing_ca_state| replace:: The state (or province) associated with the |ca| policy. This setting is passed by |chef| to |open ssl|.
.. |signing_ca_location| replace:: The location associated with the |ca| policy. This setting is passed by |chef| to |open ssl|.
.. |signing_ca_org| replace:: The organization associated with the |ca| policy. This setting is passed by |chef| to |open ssl|.
.. |signing_ca_domain| replace:: The domain associated with the |ca| policy. This setting is passed by |chef| to |open ssl|.
.. |signing_ca_email| replace:: The email address associated with the |ca| policy. This setting is passed by |chef| to |open ssl|. Default value: ``opensource.opscode.com``.
.. |size lwrp aws_ebs_volume| replace:: The size of the volume (in gigabytes).
.. |skip-dependencies| replace:: Indicates that all cookbooks to which the installed cookbook has a dependency will not be installed.
.. |slicehost-password| replace:: The administrative password for the server.
.. |snapshot_id lwrp aws_ebs_volume| replace:: The snapshot with which to build an |amazon ebs| volume.
.. |snapshots_to_keep lwrp aws_ebs_volume| replace:: The number of snapshots to maintain. This attribute is available only when the ``:prune`` action is used. Default value: ``2``.
.. |solo mode| replace:: Indicates whether |chef| is being run in "solo" mode. This setting determines if the |chef client| should attempt to communicate with a |chef server|. Default value: ``false``.
.. |solr_data_path| replace:: The location in which the Solr indexes are located. Default value: ``/var/chef/solr/data``.
.. |solr_heap_size| replace:: The amount of memory allocated to the Java Virtual Machine (JVM) that is being used to run Solr. Default value: ``256M``.
.. |solr_home_path| replace:: The path to the Solr home directory. Default value: ``/var/chef/solr``.
.. |solr_java_opts| replace:: The additional options (if any) that are passed to the Solr JVM. Default value: ``nil``.
.. |solr_jetty_path| replace:: The path to the settings that control the Jetty environment. Default value: ``/var/chef/solr-jetty``.
.. |solr_url| replace:: The URL for the server from which the Solr search engine is run. Default value: ``http://localhost:8983``.
.. |sort| replace:: The order in which search results will be sorted.
.. |source lwrp chef_handler| replace:: The full path to the handler file or the path to a |gem| (if the handler ships as part of a |ruby| |gem|).
.. |source lwrp dmg_package| replace:: The remote URL for the |apple disk image| to be download. Default value: ``nil``.
.. |source lwrp firewall_rule| replace:: The IP address or subnet from which incoming traffic originates. Default value: ``0.0.0.0/0`` (from "anywhere").
.. |source lwrp windows_package| replace:: A URI or a local path that specifies the source of a |windows| installer.
.. |source lwrp windows_zipfile| replace:: A URI or a local path that specifies the source of a |zip| file.
.. |source resource cookbook_file| replace:: The base name of the source file (and inferred from the ``path`` attribute).
.. |source resource package| replace:: Optional. The package source for providers that use a local file (such as |rubygems|, |debian dkpg|, |yum| or |rpm|).
.. |source resource remote_directory| replace:: The base name of the source file (and inferred from the ``path`` attribute).
.. |source resource remote_file| replace:: The base name of the source file (and inferred from the ``path`` attribute).
.. |source resource template| replace:: The location of the template source file. Default value: ``nil``.
.. |source resource yum| replace:: Indicates that the ``yum localinstall`` command will be used. When this attribute is specified, |yum| will use repositories to satisfy any remote dependencies. Default value: none.
.. |source-image| replace:: The name of the disk image that will be used to create the virtual machine.
.. |splay| replace:: A randomly-generated number (in seconds) to add to the ``interval`` that is used to determine the frequency of |chef client| runs. This random number can help prevent server load when there are many clients running at the same time. Default value: ``nil``.
.. |SSH_COMMAND| replace:: The command that will be run against the results of a search query.
.. |ssh-gateway| replace:: The |ssh| tunnel or gateway that is used to run a bootstrap action on a machine that is not accessible from the workstation.
.. |ssh-key amazon ec2| replace:: The |ssh| key for the |amazon ec2| environment.
.. |ssh-key eucalyptus| replace:: The |ssh| key for the |eucalyptus| environment.
.. |ssh-key hp| replace:: The |ssh| key for the |hp cloud| environment.
.. |ssh-key openstack| replace:: The |ssh| key for the |openstack| environment.
.. |ssh-password| replace:: The |ssh| password. This can be used to pass the password directly on the command line. If this option is not specified (and a password is required) |knife| will prompt for the password.
.. |ssh-port| replace:: The |ssh| port.
.. |ssh-user| replace:: The |ssh| user name.
.. |ssh_wrapper resource deploy| replace:: |git| only. The path to the wrapper script used when running |ssh| with |git|. The ``GIT_SSH`` environment variable is set to this.
.. |ssh_wrapper resource scm| replace:: |git| only. The path to the wrapper script that is used when running |ssh| with |git|. The ``GIT_SSH`` environment variable is set to this value.
.. |ssl_ca_file| replace:: The file in which the |open ssl| key is saved. This setting is generated automatically by |chef| and most users will not need to modify it.
.. |ssl_ca_path| replace:: The path to where the |open ssl| key is located. This setting is generated automatically by |chef| and most users will not need to modify it.
.. |ssl_client_cert| replace:: The |open ssl| X509 certificate. This setting is generated automatically by |chef| and most users will not need to modify it.
.. |ssl_client_key| replace:: The |open ssl| X509 key. This setting is generated automatically by |chef| and most users will not need to modify it.
.. |ssl_verify_mode| replace:: The verify mode for HTTPS requests. Set to ``:verify_none`` to not send certificate requests. Set to ``:verify_peer`` to send certificate requests to a |chef client|. For users of |chef hosted|, ``:verify_peer`` is recommended as the verification mode; depending on how |open ssl| is configured, the ``ssl_ca_path`` may need to be specified.
.. |start| replace:: The row at which return results will begin.
.. |start_command resource service| replace:: The command used to start a service. Default value: ``nil``.
.. |status_command resource service| replace:: The command used to check the run status for a service. Default value: ``nil``.
.. |stop_command resource service| replace:: The command used to stop a service. Default value: ``nil``.
.. |storage account| replace:: The name of the storage account used with the hosted service.
.. |subnet| replace:: The |amazon vpc| instance in which a node will be created.
.. |sudo| replace:: Indicates that a bootstrap operation should be executed using |sudo cmd|.
.. |supports lwrp bluepill_service| replace:: A list of attributes that controls how |chef| will attempt to manage a service: ``:restart``, ``:reload``, ``:status``. For ``:restart``, the init script or other service provider can use a restart command; if ``:restart`` is not specified, |chef| will attempt to stop and then start a service. For ``:reload``, the init script or other service provider can use a reload command. For ``:status``, the init script or other service provider can use a status command to determine if the service is running; if ``:status`` is not specified, |chef| will attempt to match the ``service_name`` against the process table as a regular expression, unless a pattern is specified as a parameter attribute. Default value: ``{ :restart => true, :status => true }``.
.. |supports lwrp chef_handler| replace:: The type of |chef| handler to be registered as: ``:report``, ``:exception`` or ``both``. Default value: ``{ :report => true, :exception => true }``.
.. |supports resource mount| replace:: A hash of options for supported mount features. Default value: ``{ :remount => false }``.
.. |supports resource service| replace:: A list of attributes that controls how |chef| will attempt to manage a service: ``:restart``, ``:reload``, ``:status``. For ``:restart``, the init script or other service provider can use a restart command; if ``:restart`` is not specified, |chef| will attempt to stop and then start a service. For ``:reload``, the init script or other service provider can use a reload command. For ``:status``, the init script or other service provider can use a status command to determine if the service is running; if ``:status`` is not specified, |chef| will attempt to match the ``service_name`` against the process table as a regular expression, unless a pattern is specified as a parameter attribute. Default value: ``{ :restart => true, :status => true }``.
.. |supports resource user| replace:: A Mash where keys represent features and values are booleans that indicate if that feature is supported. Default value: ``{:manage_home => false, :non_unique => false }``.
.. |svn_arguments resource deploy| replace:: |svn| only. The extra arguments that are passed to the |svn| command.
.. |svn_arguments resource scm| replace:: |svn| only. The extra arguments that are passed to the |svn| command.
.. |svn_info_args resource scm| replace:: |svn| only. Use when the ``svn info`` command is used by |chef| and arguments need to be passed. (The ``svn_arguments`` command does not work when the ``svn info`` command is used by |chef|.)
.. |svn_password resource deploy| replace:: |svn| only. The password for the user that has access to the |svn| repository.
.. |svn_password resource scm| replace:: |svn| only. The password for the user that has access to the |svn| repository.
.. |svn_username resource deploy| replace:: |svn| only. The user name for a user that has access to the |svn| repository.
.. |svn_username resource scm| replace:: |svn| only. The user name for a user that has access to the |svn| repository.
.. |symlink_before_migrate resource deploy| replace:: A hash that maps files in a shared directory into the current release. Runs before migration. Default value: ``{"config/database.yml" => "config/database.yml"}``.
.. |symlinks resource deploy| replace:: A hash that maps files in a shared directory to their paths in the current release. Default value: ``{"system" => "public/system", "pids" => "tmp/pids", "log" => "log"}``.
.. |system resource group| replace:: Indicates whether a group is a system group (``true``) or is not a system group (``false``). Default value: ``nil``.
.. |system resource user| replace:: Indicates that a system user should be created. This attribute may be used with ``useradd`` as the provider to create a system user which passes the ``-r`` flag to ``useradd``. Default value: ``nil``.


.. T -- EDITED
.. 

.. |tags| replace:: The tags for this server.
.. |tags list| replace:: A list of tags that will be displayed in the output.
.. |target resource ifconfig| replace:: The network address that will be assigned to the network interface. Default value: ``name``.
.. |target_file resource link| replace:: The name of the link. Default value: ``name``.
.. |target resource route| replace:: The address of the target route. Default value: ``name``.
.. |tcp-endpoints| replace:: A comma-separated list of local and public TCP ports that will be opened, for example: ``80:80,433:5000``.
.. |template-file| replace:: The path to a template file that will be used during a bootstrap operation. Do not use the ``--distro`` option when ``--template-file`` is specified.
.. |template lwrp daemontools_service| replace:: The name variable for the template files. The run script is set up by a template named ``sv-NAME-run.erb``. The log/run script is set up by a template named ``sv-NAME-log-run.erb``. The finish script is set up by a template named ``sv-NAME-finish.erb``. For each of these scripts, the ``NAME`` placeholder will be replaced by the value specified for this attribute. These templates should be located in the directory of a cookbook that uses this lightweight resource. Default value: ``NAME``.
.. |terremark-password| replace:: The password for the |terremark| service.
.. |terremark-service| replace:: The name of the |terremark| service.
.. |terremark-username| replace:: A user name with permission to access a |terremark| service.
.. |timeout lwrp aws_ebs_volume| replace:: The connection timeout for the |amazon ec2| API. Default value: ``3 minutes``.
.. |timeout lwrp aws_elastic_ip| replace:: The amount of time before the |amazon ec2| API will time out. Default value: ``3 minutes``.
.. |timeout lwrp name_of_resource| replace:: The amount of time (in seconds) to wait for ring convergence. Default value: ``30``.
.. |timeout resource execute| replace:: The amount of time (in seconds) the command will wait before timing out. Default value: ``3600``.
.. |timestamped_deploy provider deploy| replace:: The ``timestamped_deploy`` provider is the default |resource deploy| provider. It is used to name release directories with a timestamp in the form of ``YYYYMMDDHHMMSS``. For example: ``/my/deploy/dir/releases/20121120162342``. The |resource deploy| resource will determine whether or not to deploy code based on the existence of the release directory in which it is attempting to deploy. Because the timestamp is different for every |chef| run, the ``timestamped_deploy`` provider is not idempotent. When the ``timestamped_deploy`` provider is used, it will require managing the action setting on the resource manually in order to prevent unintended continuous deployment.
.. |to resource link| replace:: The actual file to which the link will be created.
.. |torrent lwrp transmission_torrent_file| replace:: A URI or a local path that specifies a file in a |bittorrent| swarm that will be joined.
.. |ttl lwrp dynect_rr| replace:: The record time to live.
.. |type lwrp djbdns_rr| replace:: The type of record: ``ns``, ``childns``, ``host``, ``alias``, or ``mx``. Default value: ``host``.


.. U -- EDITED
.. 

.. |udp-endpoints| replace:: A comma-separated list of local and public UDP ports that will be opened, for example: ``80:80,433:5000``.
.. |uid resource user| replace:: The numeric user identifier. Default value: ``nil``.
.. |umask| replace:: The file mode creation mask. Default value: ``0022``.
.. |umask resource execute| replace:: The file mode creation mask for files that are created by a command. Default value: ``nil``.
.. |uri lwrp apt_repository| replace:: The URI for the repository. Default value: ``nil``.
.. |use-current-branch| replace:: Indicates that the current branch will be used.
.. |user| replace:: A user name that |knife| will use to sign requests made by the |chef api client| to the |chef server|. If this option is used, be sure to ensure that the user name matches the private key or authentication will fail.
.. |user rb setting| replace:: The user that owns a process. This is required when starting any executable as a daemon. Default value: ``nil``.
.. |url resource http_request| replace:: The URL to which the HTTP request is sent. Default value: ``nil``.
.. |user resource cron| replace:: The user that runs the command. If the ``user`` attribute is changed, the original ``user`` the |crontab| program for the original ``user`` will continue to run until that |crontab| program is deleted. Default value: ``root``.
.. |user resource deploy| replace:: The system user that is responsible for the checked-out code. Default value: ``nil``.
.. |user resource execute| replace:: The user name or user ID that should be changed before running a command. Default value: ``nil``.
.. |user resource scm| replace:: The system user that is responsible for the checked-out code. Default value: ``nil``.
.. |user-data| replace:: The |amazon ec2| user data file used during instance provisioning.
.. |username bluebox| replace:: The user name for the |bluebox| server.
.. |username lwrp dynect_rr| replace:: The |dns update api| username.
.. |username lwrp mysql_database| replace:: The username with which a connection is made.
.. |username resource user| replace:: The name of the user. Default value: ``name``.


.. V -- EDITED
.. 

.. |validation_client_name| replace:: The name of the server that--along with the ``validation_key``--is used to determine whether a |chef client| may register with a |chef server|. The validation_client_name located in the server and client configuration files must match.
.. |validation_key| replace:: The location of the file which contains the key used when a |chef client| is registered with a |chef server|. A validation key is signed using the ``validation_client_name`` for authentication. Default value: ``/etc/chef/validation.pem``.
.. |value resource directory| replace:: The value with which ``key_name`` is set.
.. |values lwrp windows_registry| replace:: A hash of values to be set under a registry key. The individual hash items will become  ``value_name => value_data`` items in the registry key.
.. |variables lwrp bluepill_service| replace:: A hash of variables that are passed into the pill template.
.. |variables lwrp daemontools_service| replace:: A hash of variables that are passed to the template file. Default value: ``{}``.
.. |variables resource template| replace:: A hash of variables that are used in the template.
.. |verbose| replace:: Set for more verbose outputs. Use ``-VV`` for maximum verbosity.
.. |verbose_logging| replace:: Indicates the level of logging. Options: ``true``, ``nil``, and ``false``. When this is set to ``false``, notifications about individual resources being processed will be suppressed (and will be output at the ``:info`` logging level). Setting this to ``false`` can be useful when a |chef client| is run as a daemon. Default value: ``nil``.
.. |version chef| replace:: Shows the version of |chef|.
.. |version cookbook| replace:: The current version of a cookbook. Version numbers always follow a simple three-number version sequence.
.. |version lwrp pacman_aur| replace:: The package version.
.. |version lwrp php_pear| replace:: The version of the package to install or upgrade. If a version is not specified, the latest version is assumed.
.. |version lwrp python_pip| replace:: The version of the |python pip| package to install or upgrade. If a version is not specified, the latest version is assumed.
.. |version resource package| replace:: The version of the package that is being installed or upgraded. Default value: ``nil``.
.. |version resource yum| replace:: The version of the package that will be installed, upgraded, or removed. This value must be a complete version-release. Default value: ``nil``.
.. |virtualenv lwrp python_pip| replace:: The virtual |python| environment into which the |python pip| package is installed.
.. |volume_id lwrp aws_ebs_volume| replace:: The ID for volume to be attached to an |amazon ebs| volume.
.. |volumes_dir lwrp dmg_package| replace:: The directory under ``/Volumes`` where the |apple disk image| is to be mounted. Default value: ``app``.

.. W -- EDITED
.. 


.. |web_ui_admin_default_password| replace:: The default password for the |chef server| web UI. This password should be changed immediately after logging in for the first time. Default value: ``p@ssw0rd1``.
.. |web_ui_admin_user_name| replace:: The default user name for the |chef server| web UI.  Default value: ``admin``.
.. |web_ui_client_name| replace:: The name of the |chef server| web UI. Default value: ``chef-webui``.
.. |web_ui_key| replace:: The path to where the key used by the |chef server| web UI is located. Default value: ``/etc/chef/webui.pem``.
.. |weekday resource cron| replace:: The day of the week on this entry should run (0 - 6), where Sunday = 0. Default value: ``*``.
.. |winrm-password| replace:: The |windows remote management| password.
.. |winrm-transport| replace:: The |windows remote management| transport type: ``ssl`` or ``plaintext``.
.. |winrm-user| replace:: The |windows remote management| user name.
.. |winrm-port| replace:: The |windows remote management| port. Default: ``5985``.
.. |with-uri| replace:: Indicates that the corresponding URIs will be shown.


.. X
.. 



.. Y -- EDITED
.. 

.. |yes| replace:: Indicates that "yes" will be the response to all confirmation prompts (and that |knife| will not ask a user for confirmation).


.. Z
.. 

.. |zone lwrp dynect_rr| replace:: The DNS zone.
       

                     

