.. Description strings that begin with the letter A.
.. The pattern is |axxxx| replace:: string.
..
..

.. A
..

.. |accept_license| replace:: Accept an end-user license agreement, automatically.
.. |active_rehashing| replace:: Enable active rehashing.
.. |add_formatter| replace:: A 3rd-party formatter.
.. |add_to_admins| replace:: Add the user to the |webui group admins| group.
.. |additional_remotes| replace:: An array of additional remotes that are added to the |git| repository configuration.
.. |admin client| replace:: Create a client as an admin client. This is required for any user to access |chef server osc| as an administrator.
.. |after| replace:: Add a run list item after the specified run list item.
.. |after_restart| replace:: A block of code, or a path to a file that contains code, that is run after restarting.
.. |ibm_aix_src not_supported| replace:: This action is not supported when using |ibm aix_src| on the |ibm aix| platform because |ibm aix_src| does not have a standard mechanism for enabling and disabling services on system boot.
.. |all| replace:: Display a node in the |chef editor|. By default, attributes that are default, override, or automatic, are not shown.
.. |all cookbooks| replace:: Upload all cookbooks.
.. |all cookbooks delete| replace:: Delete all cookbooks (and cookbook versions).
.. |all cookbooks generate| replace::  Generate metadata for all cookbooks.
.. |all cookbooks return| replace:: Return all available versions for every cookbook.
.. |all cookbooks test| replace:: Test all cookbooks.
.. |all data bags| replace:: Upload all data bags found at the specified path.
.. |all environments| replace:: Upload all environments found at the specified path.
.. |allow_downgrade| replace:: Downgrade a package to satisfy requested version requirements.
.. |alwaysprompt| replace:: Prompt for confirmation when the list of packages to be installed exactly matches the list of packages given from the command line.
.. |amqp_host| replace:: The IP address for the host to which a connection is made.
.. |amqp_pass| replace:: The password for the ``amqp_user``.
.. |amqp_port| replace:: The port number for the host to which a connection is made.
.. |amqp_user| replace:: A user name with permission to access the host.
.. |amqp_vhost| replace:: The virtual host name.
.. |amqp_consumer_id| replace:: The identifier for the consumer that handles messages.
.. |analytics rabbitmq_settings| replace:: |chef analytics| uses the same |rabbitmq| service that is configured on the |chef server|. When the |chef analytics| server is configured as a standalone server, the default settings for ``rabbitmq['node_ip_address']`` and ``rabbitmq['vip']`` must be updated.
.. |api openstack_endpoint| replace:: The API endpoint used with the |openstack| environment.
.. |append_group| replace:: How members should be appended and/or removed from a group. When ``true``, ``members`` are appended and ``excluded_members`` are removed. When ``false``, group members are reset to the value of the ``members`` property.
.. |appendfsync| replace:: The frequency at which the operating system writes data on-disk, instead of waiting for more data. Possible values: ``no`` (don't fsync, let operating system flush data), ``always`` (fsync after every write to the append-only log file), and ``everysec`` (fsync only once time per second).
.. |appendonly| replace:: Dump data asynchronously on-disk or to an append-only log file.
.. |appendonly_min_size| replace:: The minimum size of the append-only file. Only files larger than this value are rewritten.
.. |appendonly_percent| replace:: The size of the current append-only file, as compared to the base size. The append-only file is rewritten when the current file exceeds the base size by this value.
.. |application ocid| replace:: A |ruby hash| that contains |oauth| 2 application information.
.. |xapplication_pool app| replace:: The application pool to which an application belongs.
.. |xapplication_pool site| replace:: The application pool to which a site belongs.
.. |xapplication_port| replace:: The port on which the application server is to run.
.. |xapplication_server_role| replace:: The name of a role for an application server. During a |chef client| run, a search is performed to find application servers.
.. |architecture package| replace:: The architecture of the package to be installed or upgraded. This value can also be passed as part of the package name.
.. |architecture registry_key| replace:: The architecture of the node for which keys are to be created or deleted. Possible values: ``:i386`` (for nodes with a 32-bit registry), ``:x86_64`` (for nodes with a 64-bit registry), and ``:machine`` (to have the |chef client| determine the architecture during the |chef client| run).
.. |architecture windows_process| replace:: The architecture of the process under which a script is executed. If a value is not provided, the |chef client| defaults to the correct value for the architecture, as determined by |ohai|.
.. |architecture windows_process_i386| replace:: An exception is raised when anything other than ``:i386`` is specified for a 32-bit process.
.. |architecture registry_key machine| replace:: In order to read or write 32-bit registry keys on 64-bit machines running |windows|, the ``architecture`` property must be set to ``:i386``. The ``:x86_64`` value can be used to force writing to a 64-bit registry location, but this value is less useful than the default (``:machine``) because the |chef client| returns an exception if ``:x86_64`` is used and the machine turns out to be a 32-bit machine (whereas with ``:machine``, the |chef client| is able to access the registry key on the 32-bit machine).
.. |arguments chef_handler| replace:: An array of arguments that are passed to the initializer for the handler class.
.. |associate_user| replace:: Associate a user with an organization and add them to the |webui group admins| and |webui group billing| security groups.
.. |assume_yes| replace:: Prompt for confirmation of critical actions.
.. |atomic_update| replace:: Perform atomic file updates on a per-resource basis. Set to ``true`` for atomic file updates. Set to ``false`` for non-atomic file updates. This setting overrides ``file_atomic_update``, which is a global setting found in the |client rb| file.
.. |attribute_show| replace:: The attribute (or attributes) to show.
.. |attribute python_install_methodx| replace:: The method to use to install |python|.
.. |attribute ssh| replace:: The attribute used when opening an |ssh| connection.
.. |attribute_type automatic| replace:: An ``automatic`` attribute contains data that is identified by |ohai| at the beginning of every |chef client| run. An ``automatic`` attribute cannot be modified and always has the highest attribute precedence.
.. |attribute_type default| replace:: A ``default`` attribute is automatically reset at the start of every |chef client| run and has the lowest attribute precedence. Use ``default`` attributes as often as possible in cookbooks.
.. |attribute_type force_default| replace:: Use the ``force_default`` attribute to ensure that an attribute defined in a cookbook (by an attribute file or by a recipe) takes precedence over a ``default`` attribute set by a role or an environment.
.. |attribute_type force_override| replace:: Use the ``force_override`` attribute to ensure that an attribute defined in a cookbook (by an attribute file or by a recipe) takes precedence over an ``override`` attribute set by a role or an environment.
.. |attribute_type normal| replace:: A ``normal`` attribute is a setting that persists in the node object. A ``normal`` attribute has a higher attribute precedence than a ``default`` attribute.
.. |attribute_type override| replace:: An ``override`` attribute is automatically reset at the start of every |chef client| run and has a higher attribute precedence than ``default``, ``force_default``, and ``normal`` attributes. An ``override`` attribute is most often specified in a recipe, but can be specified in an attribute file, for a role, and/or for an environment. A cookbook should be authored so that it uses ``override`` attributes only when required.
.. |audit_mode| replace:: Enable |chef client_audit|. Set to ``audit-only`` to skip the converge phase of the |chef client| run and only perform audits. Possible values: ``audit-only``, ``disabled``, and ``enabled``.
.. |authorized_openid_identifiers| replace:: The identifier for the |open id| associated with the |chef server| web UI.
.. |authorized_openid_providers| replace:: The provider for the |open id| associated with the |chef server| web UI.
.. |auto_update_client| replace:: Enable automatic updates for the |chef client| in |azure|.
.. |availability_zone| replace:: The name of the availability zone. Each availability zone is unique within a region.
.. |aws_access_key_id| replace:: The access key identifier used with |amazon ec2|.
.. |aws_access_key_secret| replace:: The secret access key for the API endpoint used with |amazon ec2|.
.. |aws_dedicated_instance| replace:: Launch this instance as an |amazon ec2_dedicated|.
.. |aws_tag| replace:: Specify a |ruby hash| of |amazon aws| tags.
.. |azure connect_to_existing_dns| replace:: Add a new virtual machine to the existing deployment and/or service. Use with ``--azure-dns-name`` to ensure the correct DNS is used.
.. |azure host description| replace:: The description for the host.
.. |azure_host_name| replace:: The host name for the |azure| environment.
.. |azure_pem_filename| replace:: The name of the file that contains the |ssh| public key that is used when authenticating to |azure|.
.. |azure_subscription_id| replace:: The subscription identifier for the |azure| portal.
.. |azure preserve_os_disk| replace:: Preserve the corresponding operating system disk.
.. |azure preserve_virtual_disk| replace:: Preserve the underlying virtual hard disk (VHD).
.. |azure preserve_dns_name| replace:: Preserve the DNS entries for the corresponding cloud services. If this option is ``false``, any service not used by any virtual machine is deleted.
.. |azure delete_storage_account| replace:: Delete any corresponding storage account. When this option is ``true``, any storage account not used by any virtual machine is deleted.
.. |azure affinity_group| replace:: The affinity group to which the virtual machine belongs. Required when not using a service location.
.. |azure availability_set| replace:: The name of the availability set for the virtual machine.
.. |azure dns_name| replace:: Required. The name of the DNS prefix that is used to access the cloud service. This name must be unique within |azure|. Use with ``--azure-connect-to-existing-dns`` to use an existing DNS prefix.
.. |azure network_name| replace:: The network for the virtual machine.
.. |azure subnet_name| replace:: The subnet for the virtual machine.
.. |azure virtual_machine_name| replace:: The name of the virtual machine. Must be unique within |azure|. Required for advanced server creation options.
.. |azure vm_timeout_ready| replace:: A number (in minutes) to wait for a virtual machine to reach the ``provisioning`` state.
.. |azure vm_timeout_startup| replace:: A number (in minutes) to wait for a virtual machine to transition from the ``provisioning`` state to the ``ready`` state.
.. |azure vnet_address_space| replace:: The address space of the virtual network.
.. |azure wait| replace:: Pause the console until the server has finished processing the request.



.. Description strings that begin with the letter B.
.. The pattern is |bxxxx| replace:: string.
..
..

.. B
..

.. |backups_kept| replace:: The number of backups to be kept in ``/var/chef/backup`` (for |unix|- and |linux|-based platforms) or ``C:/chef/backup`` (for the |windows| platform). Set to ``false`` to prevent backups from being kept.
.. |bandwidth_yum| replace:: The maximum amount of network bandwidth (in bytes).
.. |batch_size bulk_fetch| replace:: The number of nodes that may be deserialized. Currently only applies to the ``/search`` endpoint in the |api chef server|.
.. |before| replace:: Add a run list item before the specified run list item.
.. |before_fork| replace:: The object that is called by the master process before executing the |unicorn| binary.
.. |before_migrate| replace:: A block of code, or a path to a file that contains code, that is run before a migration.
.. |before_restart| replace:: A block of code, or a path to a file that contains code, that is run before restarting.
.. |before_symlink| replace:: A block of code, or a path to a file that contains code, that is run before symbolic linking.
.. |bind redis| replace:: Bind |redis| to the specified IP address.
.. |bindings| replace:: A string that identifies the information needed to communicate with a site. This information may be an IP address, unspecified IP addresses, a port number, or an (optional) host header. For example: ``111.111.1.1:443:www.chef.io`` or ``*:443:``.
.. |block_ruby| replace:: A block of |ruby| code.
.. |bookshelf url| replace:: The URL at which cookbooks are stored.
.. |bookshelf url_external| replace:: The URL from which the |chef client| is to download cookbooks. By default, this is the ``Host:`` header provided by the |chef client| when it contacts the |chef server|. When cookbook storage is located behind a firewall and/or when the ``Host:`` header is not used, this value must be a URL that is accessible to the |chef client|.
.. |bookshelf id_access_key_s3| replace:: The access key identifier.
.. |bookshelf id_secret_key_s3| replace:: The secret key.
.. |bookshelf bucket_s3| replace:: The bucket name.
.. |boot_protocol| replace:: The boot protocol used by a network interface.
.. |bootstrap curl_options| replace:: Arbitrary options to be added to the bootstrap command when using |curl|.
.. |bootstrap install_command| replace:: Execute a custom installation command sequence for the |chef client|.
.. |bootstrap install_sh| replace:: Fetch and execute an installation script at the specified URL.
.. |bootstrap network| replace:: The IP address on this network, use during the bootstrap operation.
.. |bootstrap no_curl_sh_wget| replace:: This option may not be used in the same command with ``--bootstrap-curl-options``, ``--bootstrap-install-sh``, or ``--bootstrap-wget-options``.
.. |bootstrap no_install_command| replace:: This option may not be used in the same command with ``--bootstrap-install-command``.
.. |bootstrap no_proxy| replace:: A URL or IP address that specifies a location that should not be proxied.
.. |bootstrap proxy| replace:: The proxy server for the node that is the target of a bootstrap operation.
.. |bootstrap protocol| replace:: The protocol used to bootstrap on a machine that is running |windows server|: ``cloud-api``, ``ssh``, or ``winrm``.
.. |bootstrap vault_file| replace:: The path to a |json| file that contains a list of vaults and items to be updated.
.. |bootstrap vault_item| replace:: A single vault and item to update as ``vault:item``.
.. |bootstrap vault_json| replace:: A |json| string that contains a list of vaults and items to be updated.
.. |bootstrap version| replace:: The version of the |chef client| to install.
.. |bootstrap wget_options| replace:: Arbitrary options to be added to the bootstrap command when using |gnu wget|.
.. |branch| replace:: The name of the default branch. This defaults to the master branch.
.. |broadcast_address| replace:: The broadcast address for a network interface. On some platforms this property is not set using |ifconfig|, but instead is added to the startup configuration file for the network interface.
.. |build_local_file| replace:: Build or execute a command line against a local file.
.. |bundler_unicorn| replace:: Bundle the application with |unicorn|.
.. |bundler_skip_groups| replace:: An array of |bundler| groups to skip.



.. Description strings that begin with the letter C.
.. The pattern is |cxxxx| replace:: string.
..
..

.. C
..


.. |ca_trust_file| replace:: The |ca| trust file used for |ssl| transport.
.. |cache_path| replace:: The home directory for the user that is running the |chef client| as a non-root user.
.. |cachedir| replace:: The directory in which |yum| stores cache and db files.
.. |CATEGORY| replace:: The cookbook category: ``"Databases"``, ``"Web Servers"``, ``"Process Management"``, ``"Monitoring & Trending"``, ``"Programming Languages"``, ``"Package Management"``, ``"Applications"``, ``"Networking"``, ``"Operating Systems & Virtualization"``, ``"Utilities"``, or ``"Other"``.
.. |checkout_branch git| replace:: Do a one-time checkout from |git| **or** use when a branch in the upstream repository is named ``deploy``. To prevent the |resource scm_git| resource from attempting to check out master from master, set ``enable_checkout`` to ``false`` when using the ``checkout_branch`` property.
.. |checkpoint_completion_target| replace:: A completion percentage that is used to determine how quickly a checkpoint should finish in relation to the completion status of the next checkpoint. For example, if the value is ``0.5``, then a checkpoint attempts to finish before 50% of the next checkpoint is done.
.. |checkpoint_segments| replace:: The maximum amount (in megabytes) between checkpoints in log file segments.
.. |checkpoint_timeout| replace:: The amount of time (in minutes) between checkpoints.
.. |checkpoint_warning| replace:: The frequency (in seconds) at which messages are sent to the server log files if checkpoint segments are being filled faster than their currently configured values.
.. |checksum_path| replace:: The location in which checksums for individual cookbook files (such as recipes) are stored. The checksum itself is stored in |couch db| and is compared to a file in this location that has a filename that is identical to the checksum.
.. |checksum file| replace:: The |sha256| checksum of the file. Use to ensure that a specific file is used. If the checksum does not match, the file is not used.
.. |checksum remote_file| replace:: The |sha256| checksum of the file. Use to prevent a file from being re-downloaded. When the local file matches the checksum, the |chef client| does not download it.
.. |chef generator| replace:: The path at which a cookbook named ``code_generator`` is located. This cookbook is used by the ``chef generate`` subcommands to generate cookbooks, cookbook files, templates, attribute files, and so on.
.. |chef_client intervals| replace:: When the |chef client| is run at intervals, ``--splay`` and ``--interval`` values are applied before the |chef client| run.
.. |chef_client intervals_11-16| replace:: When the |chef client| is run at intervals, ``--splay`` values are applied first, then the |chef client| run occurs, and then ``--interval`` values are applied.
.. |chef_gem compile_time| replace:: Controls the phase during which a |gem| is installed on a node. Set to ``true`` to install a |gem| while the resource collection is being built (the "compile phase"). Set to ``false`` to install a |gem| while the |chef client| is configuring the node (the "converge phase").
.. |chef_server_url| replace:: The URL for the |chef server|.
.. |chef_shell mode client| replace:: Run |chef shell| in |chef client| mode.
.. |chef_shell mode solo| replace:: Run |chef shell| in |chef solo| mode.
.. |chef_shell mode standalone| replace:: Run |chef shell| in standalone mode.
.. |chef_zero_enabled| replace:: Enable |chef zero|.
.. |chef_zero_no_listen| replace:: Run |chef zero| in socketless mode.
.. |chef_zero_port| replace:: The port on which |chef zero| is to listen.
.. |chunk_size| replace:: The chunk size.
.. |clean_requirements_on_remove| replace:: Also remove package dependencies, when a package is removed.
.. |clear_sources| replace:: Set to ``true`` to download a |gem| from the path specified by the ``source`` property (and not from |rubygems|).
.. |client| replace:: Create a client configuration. This reads from the |knife rb| config file to generate a config file suitable for use in |path chef client rb|, and then copies the validation certificate into the specified directory.
.. |client_key| replace:: The location of the file that contains the client key.
.. |client_registration_retries| replace:: The number of times a |chef client| is to attempt to register with a |chef server|.
.. |cluster member_nodes| replace:: A list of nodes to be part of a cluster.
.. |code quoted_string| replace:: A quoted (" ") string of code to be executed.
.. |code erlang_call| replace:: The code to be executed on a node located within a distributed |erlang| system.
.. |code powershell| replace:: The code for the |windows powershell_dsc_short| configuration script.
.. |collectstatic| replace:: The behavior of the ``staticfiles`` application. If ``true``, it invokes ``manage.py`` with ``collectstatic -- noinput``.
.. |color| replace:: View colored output.
.. |color_list_available_downgrade| replace:: The color used for a package downgrade.
.. |color_list_available_install| replace:: The color used for a package install.
.. |color_list_available_reinstall| replace:: The color used for a package reinstall.
.. |color_list_available_upgrade| replace:: The color used for a package upgrade.
.. |color_list_installed_extra| replace:: The color used when a package to be installed does not match an available package with the same name and architecture.
.. |color_list_installed_newer| replace:: The color used when a package to be installed is newer than an available package with the same name and architecture.
.. |color_list_installed_older| replace:: The color used when a package to be installed is older than an available package with the same name and architecture.
.. |color_list_installed_reinstall| replace:: The color used when a package to be installed is the same version as an available package with the same name and architecture.
.. |color_search_match| replace:: The color used for text matches in search.
.. |color_update_installed| replace:: The color used for a package in the updates list, which are packages already installed.
.. |color_update_local| replace:: The color used for a package in the updates list, which are packages already downloaded.
.. |color_update_remote| replace:: The color used for a package in the updates list, which are packages that need to be downloaded.
.. |command options| replace:: One (or more) additional options that are passed to the command.
.. |command powershell| replace:: The path to a valid |windows powershell| data file that contains the |windows powershell_dsc_short| configuration script. This data file must be capable of running independently of |chef| and must generate a valid |windows powershell_dsc_short| configuration.
.. |command service_init| replace:: The path to the init script that is associated with the service.
.. |command service_reload| replace:: The command used to tell a service to reload its configuration.
.. |command service_restart| replace:: The command used to restart a service.
.. |command service_stop| replace:: The command used to stop a service.
.. |command service_start| replace:: The command used to start a service.
.. |command service_status| replace:: The command used to check the run status for a service.
.. |command_or_path| replace:: The command to be run, or the path to a file that contains the command to be run.
.. |commands_yum| replace:: A list of commands to run when no functional commands are specified on the command line.
.. |comment user| replace:: One (or more) comments about the user.
.. |concurrency| replace:: The number of allowed concurrent connections.
.. |config| replace:: The configuration file to use.
.. |config chef-client| replace:: The configuration file to use.
.. |config powershell| replace:: The configuration data for the |windows powershell_dsc_short| script.
.. |config rb chef server| replace:: A |chef server rb| file is used to specify the configuration settings for the |chef server|.
.. |config rb client| replace:: A |client rb| file is used to specify the configuration details for the |chef client|.
.. |config rb knife| replace:: A |knife rb| file is used to specify the |chef repo|-specific configuration details for |knife|.
.. |config rb server| replace:: A |server rb| file is used to specify the configuration details for the |chef server|.
.. |config rb solo| replace:: A |solo rb| file is used to specify the configuration details for |chef solo|.
.. |config rb solr| replace:: A |solr rb| file is used to specify the configuration details for |chef solr|, |chef solr indexer|, and |chef solr rebuild|.
.. |content file| replace:: A string that is written to the file. The contents of this property replace any previous content when this property has something other than the default value.
.. |convert_boolean_return| replace:: Return ``0`` if the last line of a command is evaluated to be true or to return ``1`` if the last line is evaluated to be false.
.. |cookbook directory attributes| replace:: The sub-directory in which attributes are located.
.. |cookbook directory libraries| replace:: The sub-directory in which libraries are located.
.. |cookbook directory providers| replace:: The sub-directory in which lightweight providers are located.
.. |cookbook directory recipes| replace:: The sub-directory in which recipes are located.
.. |cookbook directory resources| replace:: The sub-directory in which lightweight resources are located.
.. |cookbook directory templates| replace:: The sub-directory in which templates are located.
.. |cookbook file_location| replace:: The cookbook in which a file is located (if it is not located in the current cookbook).
.. |cookbook external_storage_settings| replace:: Four settings require configuration when pointing at an external cookbook storage location: ``bookshelf['vip']``, for the endpoint used by the |chef client|; ``bookshelf['external_url']``, for the endpoint used by the |chef server|; ``bookshelf['access_key_id']``, for user access key; ``bookshelf['secret_access_key']``, for secret key; and ``opscode_erchef['s3_bucket']``, for the bucket name. Reconfigure the |chef server| after changing these settings.
.. |cookbook name chef_handler| replace:: The |cookbook chef_handler| cookbook is used to distribute and enable exception and report handlers.
.. |cookbook path| replace:: The directory in which cookbooks are created. This can be a colon-separated path.
.. |cookbook_path subdirectory| replace:: The sub-directory for cookbooks on the |chef client|. This value can be a string or an array of file system locations, processed in the specified order. The last cookbook is considered to override local modifications.
.. |cookbook stream_download| replace:: Enable stream downloading of cookbooks. This setting (when ``true``) typically results in improved cookbook download performance, especially with the memory usage of the |service bookshelf| service and the behavior of load balancers and proxies in-between the |chef client| and the |chef server|.
.. |cookbook_sync_threads| replace:: The number of helper threads available for parallel cookbook synchronization. Increasing this value **may** increase the frequency of gateway errors from the |chef server| (503 and 504 errors). Decreasing this number reduces the frequency of gateway errors, if present.
.. |cookbook_tarball_path| replace:: The location in which a |chef server| stores cookbooks that have been saved in the .tar file format, and from which cookbooks are distributed to a |chef client|.
.. |COOKBOOK_VERSION delete| replace:: The version of a cookbook to be deleted. If a cookbook has only one version, this option does not need to be specified. If a cookbook has more than one version and this option is not specified, |knife|  prompts for a version.
.. |COOKBOOK_VERSION download| replace:: The version of a cookbook to be downloaded. If a cookbook has only one version, this option does not need to be specified. If a cookbook has more than one version and this option is not specified, the most recent version of the cookbook is downloaded.
.. |COOKBOOK_VERSION install| replace:: The version of the cookbook to be installed. If a version is not specified, the most recent version of the cookbook is installed.
.. |COOKBOOK_VERSION show| replace:: The version of a cookbook to be shown. If a cookbook has only one version, this option does not need to be specified. If a cookbook has more than one version and this option is not specified, a list of cookbook versions is returned.
.. |cookie resource erlang_call| replace:: The magic cookie for the node to which a connection is made.
.. |copyright| replace:: The name of the copyright holder. This option places a copyright notice that contains the name of the copyright holder in each of the pre-created files. If this option is not specified, a copyright name of "COMPANY_NAME" is used instead; it can easily be modified later.
.. |cost_repo| replace:: The relative cost of accessing this repository.
.. |couchdb_database| replace:: The name of the |couch db| database.
.. |couchdb_url| replace:: The URL for the |couch db| database.
.. |couchdb_version| replace:: Optional. The version of the |couch db| database.
.. |create chef_validator| replace:: Create the client as the |chef validator|.
.. |create_dirs_before_symlink| replace:: Create directories in the release directory before symbolic links are created. This property runs after ``purge_before_symlink`` and before ``symlink``.
.. |creates file_exists| replace:: Prevent a command from creating a file when that file already exists.
.. |credential_file amazon| replace:: The credential file used by |amazon aws| command-line tools.
.. |credential_file google| replace:: The credential file used by |google compute engine|. This file is created when running the ``knife google setup`` command.
.. |cwd| replace:: The current working directory.
.. |cwd run_command| replace:: The current working directory from which a command is run.



.. Description strings that begin with the letter D.
.. The pattern is |dxxxx| replace:: string.
..
..

.. D
..

.. |d knife list| replace:: Prevent a directory's children from showing when a directory matches a pattern.
.. |daemonize| replace:: Run the executable as a daemon.
.. |daemonize chef_client| replace:: The |chef client| executable can be run as a daemon.
.. |daemonize gunicorn| replace:: Daemonize the |gunicorn| process.
.. |data_bag_decrypt_minimum_version| replace:: The minimum required version of data bag encryption. Possible values: ``0``, ``1``, and ``2``. When all of the machines in an organization are running |chef client| version 11.6 (or higher), it is recommended that this value be set to ``2``.
.. |data_bag_path| replace:: The location from which a data bag is loaded.
.. |database_master_role| replace:: The name of a role. During a |chef client| run, a search is performed to find a node with the same name as this value in the same environment as the current role. If a node is found, it's IP address is used when rendering the context file.
.. |database_master_role database_yml| replace:: The name of a role. During a |chef client| run, a search is performed to find a node with the same name as this value in the same environment as the current role. If a node is found, it's IP address is used when rendering the ``database.yml`` file.
.. |database_quantity| replace:: The number of databases.
.. |day cron| replace:: The day of month at which the |cron| entry should run (1 - 31).
.. |db_pool_size| replace:: The number of open connections to |postgresql| that are maintained by the service.
.. |debug_enabled| replace:: Enable debugging
.. |debug_level| replace:: The output level for debug messages.
.. |debug settings_template| replace:: Control debugging using the default settings template.
.. |default_orgname| replace:: The |api chef server| used by the |chef server osc| server does not have an ``/organizations/ORG_NAME`` endpoint. Use this setting to ensure that migrated |chef server osc| servers are able to connect to the |api chef server|. This value should be the same as the name of the organization that was created during the upgrade from |chef server osc| version 11 to |chef server| version 12, which means it will be identical to the ``ORG_NAME`` part of the ``/organizations`` endpoint in |chef server| version 12. Default value: the name of the organization specified during the upgrade process from |chef server osc| 11 to |chef server| 12.
.. |default_release apt| replace:: The default release.
.. |default_value_recommended| replace:: The default value is the recommended value.
.. |defaults| replace:: Cause |knife| to use the default value instead of asking a user to provide one.
.. |delay_mins| replace:: The amount of time (in minutes) to delay a reboot request.
.. |delete_local_and_remote| replace:: Delete both local and remote copies of an object.
.. |delete chef_validator| replace:: Force the deletion of the |chef client| when it is also a |chef validator|.
.. |delim resource directory| replace:: The delimiter that is used to separate multiple values for a single key.
.. |delivery branch| replace:: A branch name for a |chef delivery| change.
.. |delivery data_api| replace:: The |json| data to submit to the |api delivery|.
.. |delivery diff| replace:: Run a diff against the local branch ``HEAD``.
.. |delivery enterprise| replace:: A configured |chef delivery| enterprise.
.. |delivery no_spinner| replace:: Disable the spinner.
.. |delivery organization| replace:: An organization inside a |chef delivery| enterprise.
.. |delivery patchset| replace:: The patchset number.
.. |delivery phase| replace:: A |chef delivery| phase.
.. |delivery pipeline| replace:: A pipeline.
.. |delivery pipeline no_open| replace:: Prevent opening a browser that shows the pipeline in |chef delivery| webui.
.. |delivery project_type| replace:: The type of project.
.. |delivery server| replace:: A server on which |chef delivery| is running.
.. |delivery user| replace:: A |chef delivery| user name.
.. |deploy_to| replace:: The "meta root" for the application, if different from the path that is used to specify the name of a resource.
.. |depth git_shallow_clone| replace:: The number of past revisions to be included in the |git| shallow clone.
.. |depth git_truncated| replace:: The depth of a |git| repository, truncated to the specified number of revisions.
.. |description azure_ag| replace:: The description of the |azure| affinity group.
.. |description cookbook| replace:: A short description of a cookbook and its functionality.
.. |description environment| replace:: The description of the environment. This value populates the description field for the environment on the |chef server|.
.. |description interface| replace:: The description of the interface.
.. |description recipe| replace:: A description for a recipe, mostly for cosmetic value within the |chef server| user interface.
.. |destination resource scm| replace:: The location path to which the source is to be cloned, checked out, or exported.
.. |description role| replace:: The description of the role. This value populates the description field for the role on the |chef server|.
.. |description vlan| replace:: The description of the VLAN.
.. |description yum_repository| replace:: A description of the |yum| repository.
.. |device ifconfig| replace:: The network interface to be configured.
.. |device mount| replace:: The special block device or remote node, a label, or a uuid to be mounted.
.. |device_type| replace:: The type of device: ``:device``, ``:label``, or ``:uuid``.
.. |device mdadm| replace:: A comma-separated list of devices to be part of a RAID array.
.. |diff_disabled| replace:: Cause the |chef client| to create a diff when changes are made to a file.
.. |diff_filesize_threshold| replace:: The maximum size (in bytes) of a file for which the |chef client| can create a diff.
.. |diff_output_threshold| replace:: The maximum size (in bytes) of a diff file created by the |chef client|.
.. |diff_download| replace:: Download only new and modified files.
.. |diff_filter| replace:: Select only files that have been added (``A``), deleted (``D``), modified (``M``), and/or have had their type changed (``T``). Any combination of filter characters may be used, including no filter characters. Use ``*`` to select all paths if a file matches other criteria in the comparison.
.. |diff_upload| replace:: Upload only new and modified files.
.. |directory cookbooks| replace:: The directory in which cookbooks are located.
.. |directory dockerfile_context| replace:: The directory in which |dockerfile| contexts are located.
.. |directory environments| replace:: The directory in which environments are located.
.. |directory expander_reindexer| replace:: The directory in which ``opscode-expander-reindexer`` logs files are located.
.. |directory generic| replace:: The working directory.
.. |directory generic_data| replace:: The directory in which on-disk data is stored.
.. |directory chef_server| replace:: The directory in which the |chef server| is installed.
.. |directory keepalive_post_hooks| replace:: The directory to which |keepalived| is to send ``POST`` hooks.
.. |directory logs| replace:: The directory in which log data is stored.
.. |directory nodes| replace:: The directory in which nodes are located.
.. |directory package_download| replace:: The directory to which a package is downloaded.
.. |directory postgresql_home| replace:: The home directory for |postgresql|.
.. |directory redisx| replace:: Also the location in which an append-only log file is created, if used.
.. |directory roles| replace:: The directory in which roles are located.
.. |directory trusted_certificates| replace:: The directory in which trusted certificates are located.
.. |disable plugin_ohai| replace:: An array of |ohai| plugins to be disabled on a node.
.. |disable-bootstrap| replace:: Disable the bootstrap process.
.. |disable event_logging_windows| replace:: Enable or disable sending events to the |windows| "Application" event log. When ``false``, events are sent to the |windows| "Application" event log at the start and end of a |chef client| run, and also if a |chef client| run fails. Set to ``true`` to disable event logging.
.. |diskspacecheck| replace:: Check for sufficient disk space before running a transaction.
.. |distroverpkg| replace:: The package used by |yum| to determine the version for a distribution.
.. |distributed_erlang_node| replace:: The node is a distributed |erlang| node.
.. |distro| replace:: The template file to be used during a bootstrap operation. The following distributions are supported: ``chef-full`` (the default bootstrap), ``centos5-gems``, ``fedora13-gems``, ``ubuntu10.04-gems``, ``ubuntu10.04-apt``, ``ubuntu12.04-gems``, and the name of a custom bootstrap template file. When this option is used, |knife| searches for the template file in the following order: the ``bootstrap/`` folder in the current working directory, the ``bootstrap/`` folder in the |chef repo|, the ``bootstrap/`` folder in the ``~/.chef/`` directory, or a default bootstrap file. Do not use the ``--template-file`` option when ``--distro`` is specified.
.. |docker base_image| replace:: The image to use as the base image. This image is then tagged and applied as the ``FROM`` value in the |dockerfile|. Currently, this value must be an image made available via the |chef docker_hub_account|: https://registry.hub.docker.com/repos/chef/.
.. |dns_zone| replace:: The DNS zone.
.. |drbd device| replace:: The device name to use for |drbd|.
.. |drbd disk| replace:: The local LVM logical volume to use behind |drbd|.
.. |drbd flexible_meta_disk| replace:: Where |drbd| meta-data is stored.
.. |drbd primary| replace:: The ``fqdn``, ``ip`` and ``port`` of the server we consider the |drbd| *primary*. This is typically set automatically from the ``server`` entries with the ``backend`` ``role`` when in an ``ha`` topology.
.. |drbd secondary| replace:: Identical to the ``drbd['primary']`` setting, including caveats.
.. |drbd shared_secret| replace:: The shared secret for |drbd|.
.. |drbd sync_rate| replace:: The amount of bandwidth to use for data synchronization; typically a small percentage of the available bandwidth available for |drbd| replication.
.. |drbd version| replace:: The version of |drbd| that is installed on the system.
.. |driver_provisioning| replace:: The |chef provisioning| driver.
.. |dry_run| replace:: Take no action and only print out results.
.. |dry_run no_upload| replace:: Prevent changes from being uploaded to the |chef server|.
.. |dump_frequency| replace:: The dump frequency (in days) used while creating a file systems table (fstab) entry.
.. |duplex mode| replace:: The duplex mode for the interface. Possible values: ``auto``, ``half``, or ``full``.
.. |dsc_script no_code| replace:: This property may not be used in the same recipe as the ``code`` property.
.. |dsc_script no_command| replace:: This property may not be used in the same recipe as the ``command`` property.
.. |dsc_script no_config_data| replace:: This property may not be used in the same recipe as the ``configuration_data`` property.
.. |dsc_script no_config_data_script| replace:: This property may not be used in the same recipe as the ``configuration_data_script`` property.

.. Description strings that begin with the letter E.
.. The pattern is |exxxx| replace:: string.
..
..

.. E
..

.. |ebs_no_delete_on_term| replace:: Prevent the |amazon ebs| volume from being deleted upon instance termination. This option is only available for instances that are backed with |amazon ebs|.
.. |ebs_optimized| replace:: Enable optimized I/O for |amazon ebs|.
.. |ebs_size| replace:: The size of the |amazon ebs| volume, in GB. This option is only available for instances that are backed with |amazon ebs|.
.. |ebs_volume_type| replace:: The type of |amazon ebs| volume.
.. |ebs_volume_type provisioned_iops| replace:: The IOPS rate used for a |amazon ebs_volume_provisioned| volume.
.. |edit| replace:: Edit instance data using the default text editor.
.. |editor| replace:: The |chef editor| that is used for all interactive commands.
.. |effective_cache_size postgresql| replace:: The size of the disk cache that is used for data files.
.. |email| replace:: The email address for the individual who maintains the cookbook. This option places an email address in each of the pre-created files. If not specified, an email name of "YOUR_EMAIL" is used instead; this can easily be modified later.
.. |email chef_server| replace:: The email addressed to which email notifications are sent.
.. |enable actions| replace:: Enable |chef actions|.
.. |enable_git_checkout| replace:: Check out a repo from master.
.. |enable_group_conditionals| replace:: Allow conditional packages.
.. |enable_package_groups| replace:: Allow the use of package groups for a repository.
.. |enable_reporting| replace:: Enable |reporting|, which performs data collection during a |chef client| run.
.. |enable_selinux_file_permission_fixup| replace:: |selinux| environments only. Cause the |chef client| to attempt to apply the correct file permissions to an updated file via the ``restorecon`` command. Set this value to ``false`` to prevent the |chef client| from attempting this action.
.. |enable_submodules| replace:: Perform a sub-module initialization and update.
.. |enable gzip| replace:: Enable  |gzip| compression.
.. |enable ipv6| replace:: Enable |ipv6| addresses.
.. |enable non_ssl| replace:: Allow port 80 redirects to port 443. When this value is set to ``true``, load balancers on the front-end hardware are allowed to do |ssl| termination of the WebUI and API.
.. |enable reporting| replace:: Cause the |chef client| to send data to the |chef server| for use with |reporting|.
.. |enable reporting_url_fatals| replace:: Cause the |chef client| run to fail when |reporting| data cannot be sent to the |chef server| (for any reason).
.. |enable service| replace:: Enable a service.
.. |encrypted_data_bag_secret| replace:: The subdirectory in which encrypted data bag secrets are located.
.. |environment cookbooks| replace:: The environment that is to be applied to all cookbooks that are uploaded using the same action. This automatically sets the version constraint on the environment to match the version of a cookbook that is being uploaded.
.. |environment set_home| replace:: Set the ``HOME`` environment variable.
.. |environment set_mailto| replace:: Set the ``MAILTO`` environment variable.
.. |environment set_path| replace:: Set the ``PATH`` environment variable.
.. |environment set_shell| replace:: Set the ``SHELL`` environment variable.
.. |environment variables| replace:: A |ruby hash| of environment variables in the form of ``{"ENV_VARIABLE" => "VALUE"}``. (These variables must exist for a command to be run successfully.)
.. |ephemeral device| replace:: A comma-separated list of device locations to be mapped to ephemeral devices.
.. |errorlevel| replace:: The output level for error messages.

.. |event_type audit_phase_failed| replace:: The |chef client| run audit phase has failed.
.. |event_type converge_failed| replace:: The |chef client| run converge phase has failed.
.. |event_type recipe_not_found| replace:: The |chef client| was unable to find the named recipe.
.. |event_type resource_failed| replace:: A resource action has failed and will not be retried.
.. |event_type run_failed| replace:: The |chef client| run has failed.


.. |exactarch| replace:: Update only packages that match the architecture already installed.
.. |exec| replace:: A string of code that to be executed.
.. |exclude_package_list| replace:: A space-separated list of packages to be excluded from updates and installs.
.. |excluded_members| replace:: Remove users from a group. May only be used when ``append`` is set to ``true``.
.. |execute chef_apply| replace:: Execute a resource using a string.
.. |exists packagex| replace:: Use when a package already exists.
.. |external-ip-address| replace:: A static IP address that is provided by |google compute engine|.



.. Description strings that begin with the letter F.
.. The pattern is |fxxxx| replace:: string.
..
..

.. F
..

.. |fastest_mirror_enabled| replace:: Assign the fastest available mirror.
.. |fatal_windows_admin_check| replace:: Cause a |chef client| run to fail when the |chef client| does not have administrator privileges in |windows|.
.. |failover_method| replace:: The fail-over method. ``roundrobin`` randomly selects a URL out of a list of URLs and proceeds through each of them as it encounters a failure when contacting the host; ``priority`` starts from the first base URL listed and proceeds through them sequentially.
.. |file| replace:: The name of the cookbook file to be downloaded.
.. |file atomic_update| replace:: Apply atomic file updates to all resources. Set to ``true`` for global atomic file updates. Set to ``false`` for global non-atomic file updates. (Use the ``atomic_update`` setting on a per-resource basis to override this setting.)
.. |file azure_publish_settings| replace:: The name of the |azure publish_settings| file, including the path. For example: ``"/path/to/your.publishsettings"``.
.. |file cache_path| replace:: The location in which cookbooks (and other transient data) files are stored when they are synchronized. This value can also be used in recipes to download files with the ``remote_file`` resource.
.. |file cookbook_download| replace:: The file to which a cookbook download is written.
.. |file local_settings| replace:: The name of the local settings file to be generated by a template.
.. |file private_key| replace:: Save a private key to the specified file name.
.. |file public_key| replace:: Save a public key to the specified file name.
.. |FILE_NAME| replace:: The name of a file that is associated with a cookbook.
.. |file_staging_uses_destdir| replace:: How file staging (via temporary files) is done. When ``true``, temporary files are created in the directory in which files will reside. When ``false``, temporary files are created under ``ENV['TMP']``.
.. |files_backup| replace:: The number of backup copies to keep for files in the directory.
.. |files_group| replace:: Configure group permissions for files.
.. |files_owner| replace:: Configure owner permissions for files.
.. |flags| replace:: One or more command line flags that are passed to the interpreter when a command is invoked.
.. |flags powershell_script| replace:: A string that is passed to the |windows powershell| command.
.. |flags powershell| replace:: Pass parameters to the |windows powershell_dsc_short| script that is specified by the ``command`` property. Parameters are defined as key-value pairs, where the value of each key is the parameter to pass.
.. |flat| replace:: Show a list of file names. Set to ``false`` to view ls-like output.
.. |flavor| replace:: The name of the flavor that identifies the hardware configuration of the server, including disk space, memory capacity, and CPU priority.
.. |flush_cache| replace:: Flush the in-memory cache before or after a |yum| operation that installs, upgrades, or removes a package.
.. |flush_cache yum_cache| replace:: The ``flush_cache`` property does not flush the local |yum| cache! Use |yum| tools---``yum clean headers``, ``yum clean packages``, ``yum clean all``---to clean the local |yum| cache.
.. |force| replace:: Force the download of a deprecated cookbook.
.. |force directory| replace:: Overwrite an existing directory.
.. |force knife download| replace:: Use ``--force`` to download files even when the file on the hard drive is identical to the object on the server (role, cookbook, etc.). By default, files are compared to see if they have equivalent content, and local files are only overwritten if they are different.
.. |force knife upload| replace:: Use ``--force`` to upload roles, cookbooks, etc. even if the file in the directory is identical (by default, no ``POST`` or ``PUT`` is performed unless an actual change would be made).
.. |force update| replace:: Update a cookbook even if the ``--freeze`` flag has been set.
.. |force_docker_build| replace:: Force a build.
.. |force_docker_contexts| replace:: When ``true``, overwrites existing |dockerfile| contexts.
.. |force_formatter| replace:: Show formatter output instead of logger output.
.. |force_logger| replace:: Show logger output instead of formatter output.
.. |force_remove_user| replace:: Force the removal of a user. May be used only with the ``:remove`` action.
.. |force_unlink| replace:: How the |chef client| handles certain situations when the target file turns out not to be a file. For example, when a target file is actually a symlink. Set to ``true`` for the |chef client| delete the non-file target and replace it with the specified file. Set to ``false`` for the |chef client| to raise an error.
.. |format| replace:: The output format: ``summary`` (default), ``text``, ``json``, ``yaml``, and ``pp``.
.. |format chef_ctls| replace:: The output format: ``doc`` (default) or ``min``.
.. |format chef_ctls_doc| replace:: Use ``doc`` to print the progress of the |chef client| run using full strings that display a summary of updates as they occur.
.. |format chef_ctls_min| replace:: Use ``min`` to print the progress of the |chef client| run using single characters. A summary of updates is printed at the end of the |chef client| run. A dot (``.``) is printed for events that do not have meaningful status information, such as loading a file or synchronizing a cookbook. For resources, a dot (``.``) is printed when the resource is up to date, an ``S`` is printed when the resource is skipped by ``not_if`` or ``only_if``, and a ``U`` is printed when the resource is updated.
.. |format chef_ctls_other| replace:: Other formatting options are available when those formatters are configured in the |client rb| file using the ``add_formatter`` option.
.. |fork_chef| replace:: Contain the |chef client| run in a secondary process with dedicated RAM. When the |chef client| run is complete, the RAM is returned to the master process. This option helps ensure that a |chef client| uses a steady amount of RAM over time because the master process does not run recipes. This option also helps prevent memory leaks such as those that can be introduced by the code contained within a poorly designed cookbook. Use ``--no-fork`` to disable running the chef-client in fork node. Default value: ``--fork``.
.. |forward_agent| replace:: Enable |ssh| agent forwarding.
.. |freeze| replace:: Require changes to a cookbook be included as a new version. Only the ``--force`` option can override this setting.
.. |fsck_device| replace:: The |fsck| device on the |solaris| platform.
.. |fstype| replace:: The file system type (fstype) of the device.
.. |ftp_active_mode| replace:: Whether the |chef client| uses active or passive FTP. Set to ``true`` to use active FTP.
.. |ftp_proxy| replace:: The proxy server for FTP connections.
.. |ftp_proxy_pass| replace:: The password for the proxy server when the proxy server is using an FTP connection.
.. |ftp_proxy_user| replace:: The user name for the proxy server when the proxy server is using an FTP connection.

.. Description strings that begin with the letter G.
.. The pattern is |gxxxx| replace:: string.
..
..

.. G
..


.. |gem_binary resource package| replace:: A property for the ``gem_package`` provider that is used to specify a |gems| binary.
.. |gems_array| replace:: An array of |gems| to be installed.
.. |generate_berksfile| replace:: Generate a |berksfile| based on the run-list specified by the ``--run-list`` option.
.. |generate local_keys| replace:: Whether the |chef server| or |chef client| generates the private/public key pair. When ``true``, the |chef client| generates the key pair, and then sends the public key to the |chef server|.
.. |generic resource statement| replace:: The following examples demonstrate various approaches for using resources in recipes. If you want to see examples of how |company_name| uses resources in recipes, take a closer look at the cookbooks that |company_name| authors and maintains: https://github.com/chef-cookbooks.
.. |git sha| replace:: The |git| SHA associated with a patchset.
.. |git_ssh_wrapper| replace:: The alias for the ``ssh_wrapper``.
.. |git url| replace:: The raw |git| URL for the specified project.
.. |google_boot_disk_name| replace:: The name of the persistent boot disk.
.. |google_boot_disk_size| replace:: The size (in GB) of the persistent boot disk. This must be a value between 10 and 10000.
.. |google_image_project_id| replace:: The ID for the project that contains the image.
.. |google_service_account_name| replace:: The name of the service account associated with the server. The typical format is similar to: ``12345678@project.gceserviceaccount.com``.
.. |google_service_account_scope| replace:: Additional metadata for the server.
.. |google_auto_server_migrate| replace:: Whether |google compute engine| can migrate the virtual machine instance without downtime, prior to periodic infrastructure maintenance.
.. |google_auto_server_restart| replace:: Whether |google compute engine| is to automatically restart the virtual machine instance if it is terminated by non-user initiated actions.
.. |google_image| replace:: The name of the virtual application template or image that is to be used to create the virtual machine.
.. |google_compute_disks| replace:: A comma-separated list of disks to be attached.
.. |google_compute_public_ip| replace:: The public IP address for |google compute engine|.
.. |google_compute_machine_type| replace:: The machine type for the instance running in |google compute engine| server. For example, ``n1-highcpu-2`` or ``n1-highcpu-2-d``. The full list of available machine types: https://developers.google.com/compute/docs/instances.
.. |google_compute_metadata| replace:: A list of metadata key-value pairs that are associated with an instance.
.. |google_compute_network| replace:: The name of the network in which an instance is running.
.. |google_compute_server_connect_ip| replace:: Whether the IP address for |google compute engine| is ``PUBLIC`` or ``PRIVATE``.
.. |google_compute_tags| replace:: A list of tags that are associated with an instance.
.. |google_compute_user_data| replace:: The user data file used to provision |google compute engine|.
.. |gpg_check| replace:: Perform a |gnupg| signature check on packages.
.. |gpg_key| replace:: A URL that points to the ASCII-armored |gnupg| key file for this repository. Use when |yum| needs a public key to verify a package and when that key has not been imported into the |rpm| database.
.. |group command| replace:: The group name or group ID that must be changed before running a command.
.. |group config| replace:: The group that owns a process. This is required when starting any executable as a daemon. Default value: ``nil``.
.. |group default_admins| replace:: Use the |webui group admins| group to define the list of users who have administrative rights to all objects and object types for a single organization.
.. |group default_billing_admins| replace:: Use the |webui group billing| group to define the list of users who have permission to manage billing information. This permission exists only for the hosted |chef server|.
.. |group default_clients| replace:: Use the |webui group clients| group to define the list of nodes on which a |chef client| is installed and under management by |chef|. In general, think of this permission as "all of the non-human actors---the |chef client|, in nearly every case---that get data from, and/or upload data to, the |chef server|". Newly-created |chef client| instances are added to this group automatically.
.. |group default_users| replace:: Use the |webui group users| group to define the list of users who use |knife| and the **Chef Manage** user interface to interact with objects and object types. In general, think of this permission as "all of the non-admin human actors who work with data that is uploaded to and/or downloaded from the |chef server|".
.. |group deploy| replace:: The system group that is responsible for the checked-out code.
.. |group ids| replace:: A comma-separated list of security group identifiers.
.. |group_package_types| replace:: The types of packages installed when ``groupinstall`` is called. Possible values: ``default``, ``mandatory``, and ``optional``.
.. |group resource link| replace:: A string or ID that identifies the group associated with a symbolic link.
.. |grouping| replace:: Add a title and description to a group of attributes within a namespace. Takes a name (along with the / notation that defines a nested grouping), a title, and a short description.
.. |groupremove_leaf_only| replace:: Remove all packages in a group. Set this value to ``1`` to remove only those packages that are not required by another package.
.. |groups| replace:: A comma-separated list of security groups.
.. |gunicorn desc| replace:: |gunicorn| is a web service gateway interface server for |unix| that is a pre-fork worker model from the |ruby| |ruby unicorn| project.
.. |gzip compression_level| replace:: The compression level used with |gzip|, from least amount of compression (``1``, fastest) to the most (``2``, slowest).
.. |gzip http_version| replace:: Enable |gzip| depending on the version of the HTTP request.
.. |gzip proxied| replace:: The type of compression used based on the request and response.
.. |gzip types| replace:: Enable compression for the specified MIME-types.



.. Description strings that begin with the letter H.
.. The pattern is |hxxxx| replace:: string.
..
..

.. H
..

.. |ha backend| replace:: Enable this setting for backend servers in high availability topologies.
.. |ha true| replace:: When ``topology`` is set to ``ha``, this setting defaults to ``true``.
.. |handler method_all_resources| replace:: A list of all resources that are included in the ``resource_collection`` property for the current |chef client| run.
.. |handler method_backtrace| replace:: A backtrace associated with the uncaught exception data that caused a |chef client| run to fail, if present; ``nil`` for a successful |chef client| run.
.. |handler method_elapsed_time| replace:: The amount of time between the start (``start_time``) and end (``end_time``) of a |chef client| run.
.. |handler method_end_time| replace:: The time at which a |chef client| run ended.
.. |handler method_exception| replace:: The uncaught exception data which caused a |chef client| run to fail; ``nil`` for a successful |chef client| run.
.. |handler method_failed| replace:: Show that a |chef client| run has failed when uncaught exceptions were raised during a |chef client| run.
.. |handler method_node| replace:: The node on which the |chef client| run occurred.
.. |handler method_run_context| replace:: An instance of the ``Chef::RunContext`` object; used by the |chef client| to track the context of the run; provides access to the ``cookbook_collection``, ``resource_collection``, and ``definitions`` properties.
.. |handler method_start_time| replace:: The time at which a |chef client| run started.
.. |handler method_success| replace:: Show that a |chef client| run succeeded when uncaught exceptions were not raised during a |chef client| run.
.. |handler method_updated_resources| replace:: A list of resources that were marked as updated as a result of the |chef client| run.
.. |handler method_formatted_string| replace:: The exception as a formatted string, for example: ``ExceptionClass: message``.
.. |handler config_exception| replace:: A list of exception handlers that are available to the |chef client| during a |chef client| run.
.. |handler config_report| replace:: A list of report handlers that are available to the |chef client| during a |chef client| run.
.. |handler config_start| replace:: A list of start handlers that are available to the |chef client| at the start of a |chef client| run.
.. |hardware_address| replace:: The hardware address for the network interface.
.. |headers custom| replace:: A |ruby hash| of custom headers.
.. |heap_size solr| replace:: The amount of memory (in MBs) available to |apache solr|. If there is not enough memory available, search queries made by nodes to |apache solr| may fail. The amount of memory that must be available also depends on the number of nodes in the organization, the frequency of search queries, and other characteristics that are unique to each organization. In general, as the number of nodes increases, so does the amount of memory.
.. |help subcommand| replace:: Show help for the command.
.. |helper| replace:: Define a helper method inline. For example: ``helper(:hello_world) { "hello world" }`` or ``helper(:app) { node["app"] }`` or ``helper(:app_conf) { |setting| node["app"][setting] }``.
.. |helpers| replace:: Define a helper module inline or in a library. For example, an inline module: ``helpers do``, which is then followed by a block of |ruby| code. And for a library module: ``helpers(MyHelperModule)``.
.. |hide_healthy| replace:: Hide nodes on which a |chef client| run has occurred within the previous hour.
.. |hint| replace:: An |ohai| hint to be set on the target node.
.. |hint_file| replace:: ``HINT_FILE`` is the name of the |json| file.
.. |hint_name| replace:: ``HINT_NAME`` is the name of a hint in a |json| file.
.. |hint_multiple| replace:: Use multiple ``--hint`` options to specify multiple hints.
.. |history_list_view| replace:: Which column of information is displayed in the |yum| history list: ``cmds`` (display the command-line for the transaction), ``single-user-commands`` (display users, if more than one), or ``users`` (display the user who initiated the transaction).
.. |history_record| replace:: Record history entries for transactions. This typically requires extra disk space and may take longer to process than when not used; however, when this is not enabled, |yum| may not be able to provide warnings for problems that may arise.
.. |history_record_packages| replace:: A list of package names to be recorded as having helped the transaction.
.. |home_directory| replace:: The location of the home directory.
.. |host_header| replace:: The host header, domain, or host name to which a site is mapped.
.. |host chef_zero| replace:: Override the host on which |chef zero| listens.
.. |hosted-service-name| replace:: The name of the hosted service.
.. |hour cron| replace:: The hour at which the |cron| entry is to run (0 - 23).
.. |http_caching| replace:: Define how upstream HTTP caches handle HTTP downloads.
.. |http_proxy| replace:: The proxy server for HTTP connections.
.. |http_proxy_pass| replace:: The password for the proxy server when the proxy server is using an HTTP connection.
.. |http_proxy_user| replace:: The user name for the proxy server when the proxy server is using an HTTP connection.
.. |http_request query_string| replace:: The ``:get`` and ``:head`` actions appended a hard-coded query string---``?message=resource_name``---that cannot be overridden. This hard-coded string is deprecated in the |chef client| 12.0 release. Cookbooks that rely on this string need to be updated to manually add it to the URL as it is passed to the resource.
.. |http_retry_count| replace:: The number of retry attempts.
.. |http_retry_delay| replace:: The delay (in seconds) between retry attempts.
.. |https_proxy| replace:: The proxy server for HTTPS connections.
.. |https_proxy_pass| replace:: The password for the proxy server when the proxy server is using an HTTPS connection.
.. |https_proxy_user| replace:: The user name for the proxy server when the proxy server is using an HTTPS connection.




.. Description strings that begin with the letter I.
.. The pattern is |ixxxx| replace:: string.
..
..

.. I
..

.. |id delivery_change| replace:: The unique identifier for the specified |chef delivery| change.
.. |id group| replace:: The identifier for the group.
.. |id chef_client_run| replace:: The identifier for a |chef client| run.
.. |id consumer| replace:: The identity of the consumer to which messages are published.
.. |id report_instance| replace:: Ensure that instances running |amazon linux| can log the instance identifier (e.g. ``i-12345678``) and region (e.g. ``us-west-1``) for an instance that downloads a package.
.. |id site| replace:: The identifier for the site.
.. |id vlan| replace:: The identifier for the VLAN.
.. |id-only| replace:: Show only matching object IDs.
.. |identity-file| replace:: The SSH identity file used for authentication. Key-based authentication is recommended.
.. |identity_file_passphrase| replace:: The passphrase for the SSH key. Use only with ``--identity-file``.
.. |ignore_failure| replace:: Continue running a recipe if a resource fails for any reason.
.. |iis_accept_eula| replace:: Accept the terms of the end user license agreement.
.. |iis_home| replace:: The home directory for |microsoft iis|.
.. |iis_conf_dir| replace:: The location for |microsoft iis| configuration settings.
.. |iis_pubroot| replace:: The public directory.
.. |iis_docroot| replace:: The home directory.
.. |iis_log_dir| replace:: The directory in which log files are located.
.. |iis_cache_dir| replace:: The directory in which cached data is located.
.. |image| replace:: The name of the image that identifies the operating system and version to be used to create the virtual machine.
.. |include-dependencies| replace:: Ensure that when a cookbook has a dependency on one (or more) cookbooks, those cookbooks are also uploaded.
.. |include_config| replace:: The external configuration files to be included.
.. |include_credentials| replace:: Include secure credentials in a |docker| image.
.. |include_packages| replace:: A list of packages in a |yum| repository.
.. |insecure openstack| replace:: Cause the Auth URL to ignore |ssl| certificates.
.. |internet_host_address| replace:: The Internet host address for the network interface.
.. |inherits windows security| replace:: Whether a file inherits rights from its parent directory.
.. |initial| replace:: Create a |chef api client|, typically an administrator client on a freshly-installed |chef server|.
.. |input file| replace:: The name of a file to be used with the ``PUT`` or a ``POST`` request.
.. |inspec examples| replace:: The following examples show how to use this |inspec resource|.
.. |inspec resource matcher| replace:: This |inspec resource| has the following matchers.
.. |inspec resource no_matcher| replace:: This |inspec resource| does not have any matchers.
.. |installonly_limit| replace:: The number of packages listed in ``installonlypkgs``.
.. |installonlypkgs| replace:: A list of package provides that should only be installed (and never updated).
.. |installroot| replace:: An alternate ``installroot``.
.. |internal-ip-address| replace:: A static IP address that is provided by |google compute engine|.
.. |interpreter| replace:: The script interpreter to use during code execution.
.. |interval| replace:: The frequency (in seconds) at which the |chef client| runs.
.. |ip_address| replace:: The IP address.
.. |ip_address amazon_vpc| replace:: The private IP address of the instance |amazon vpc| mode.
.. |ip_address floating_openstack| replace:: The floating IP address to be associated with a new |openstack| node (assuming that IP addresses have been allocated to the project).
.. |ip_address elastic| replace:: Associate an elastic IP address with this instance.
.. |ip_address node| replace:: The IP address for the node.
.. |ip_address rabbitmq| replace:: The bind IP address for |rabbitmq|.
.. |ip_address service| replace:: The IP address on which the service is to listen.
.. |ip_address virtual| replace:: The virtual IP address.
.. |ip_version| replace:: Enable IPv6 and run |chef server osc| in "dual IPv4/IPv6 mode". When this setting is ``ipv6``, the |chef server osc| server uses IPv6 for all internal comunication and is able to accept external communications that are using IPv6 (via the |nginx| load balancer).
.. |iterations| replace:: The number of iterations for a password with a SALTED-SHA512-PBKDF2 shadow hash.


.. Description strings that begin with the letter J.
.. The pattern is |jxxxx| replace:: string.
..
..

.. J
..

.. |json attributes| replace:: The path to a file that contains |json| data.
.. |json first_run_string| replace:: A |json| string that is added to the first run of a |chef client|.
.. |json dsl environment chef type| replace:: Always set this to ``environment``. Use this setting for any custom process that consumes environment objects outside of |ruby|.
.. |json dsl environment json class| replace:: Always set this to ``Chef::Environment``. The |chef client| uses this setting to auto-inflate an environment object. If objects are being rebuilt outside of |ruby|, ignore it.
.. |json dsl role chef type| replace:: Always set this to ``role``. Use this setting for any custom process that consumes role objects outside of |ruby|.
.. |json dsl role json class| replace:: Always set this to ``Chef::Role``. The |chef client| uses this setting to auto-inflate a role object. If objects are being rebuilt outside of |ruby|, ignore it.


.. Description strings that begin with the letter K.
.. The pattern is |kxxxx| replace:: string.
..
..

.. K
..



.. |keepalive request_time| replace:: The amount of time (in seconds) to wait for requests on a connection.
.. |keepalive postgresql_count| replace:: The maximum number of keepalive proves that should be sent before dropping a connection.
.. |keepalive postgresql_idle| replace:: The amount of time (in seconds) a connection must remain idle before keepalive probes will resume.
.. |keepalive postgresql_interval| replace:: The amount of time (in seconds) between probes.
.. |keepcache| replace:: Keep the cache of headers and packages after a successful installation.
.. |keep_releases| replace:: The number of releases for which a backup is kept.
.. |kerberos-realm| replace:: The administrative domain to which a user belongs.
.. |kerberos-service| replace:: The service principal used during |kerberos|-based authentication.
.. |kernelpkgnames| replace:: A list of package names that are kernels.
.. |key| replace:: The |user pem| file that |knife| uses to sign requests made by the |chef api client| to the |chef server|.
.. |key application_deploy| replace:: The RSA private key needed to deploy an application.
.. |key create_public| replace:: Generate a new public/private key pair and replace an existing public key with the newly-generated public key.
.. |key expiration_date| replace:: The expiration date for the public key, specified as an ISO 8601 formatted string: ``YYYY-MM-DDTHH:MM:SSZ``.
.. |key generated_if_not_passed| replace:: When using |chef server osc| a default key is generated if this option is not passed in the command. For |chef server| version 12.x, see the ``--prevent-keygen`` option.
.. |key length| replace:: The length of the key.
.. |key_name resource registry_key| replace:: The path to the location in which a registry key is to be created or from which a registry key is to be deleted.
.. |key_name resource registry_key hives| replace:: The path must include the registry hive, which can be specified either as its full name or as the 3- or 4-letter abbreviation. For example, both ``HKLM\SECURITY`` and ``HKEY_LOCAL_MACHINE\SECURITY`` are both valid and equivalent. The following hives are valid: ``HKEY_LOCAL_MACHINE``, ``HKLM``, ``HKEY_CURRENT_CONFIG``, ``HKCC``, ``HKEY_CLASSES_ROOT``, ``HKCR``, ``HKEY_USERS``, ``HKU``, ``HKEY_CURRENT_USER``, and ``HKCU``.
.. |key organization_create| replace:: Write the |organization pem| to ``FILE_NAME`` instead of printing it to ``STDOUT``.
.. |key prevent_keygen| replace:: Create a user without a public key. This key may be managed later by using the ``knife user key`` subcommands.
.. |key show_details| replace:: Show a list of public keys, including URIs and expiration status.
.. |key show_expired| replace:: Show a list of public keys that have expired.
.. |key show_non_expired| replace:: Show a list of public keys that have not expired.
.. |key user_create| replace:: Write the |user pem| to a file instead of ``STDOUT``.
.. |keytab-file| replace:: The keytab file that contains the encryption key required by |kerberos|-based authentication.
.. |kitchen_auto_init| replace:: Invoke the ``init`` command if |kitchen yml| is missing.
.. |kitchen_bare| replace:: Print the name of each instance, one instance per line.
.. |kitchen_create_gemfile| replace:: Create a |rubygems| file, if one does not already exist.
.. |kitchen_destroy| replace:: The destroy strategy used at the conclusion of a |kitchen| run. Possible values: ``always`` (always destroy instances), ``never`` (never destroy instances), or ``passing`` (only destroy instances that passed).
.. |kitchen_diagnose_all| replace:: Include all diagnostics.
.. |kitchen_diagnose_instances| replace:: Include instance diagnostics.
.. |kitchen_diagnose_loader| replace:: Include data loader diagnostics.
.. |kitchen_driver| replace:: Add one (or more) |kitchen| drivers to a |rubygems| file.
.. |kitchen_license| replace:: The license for the |rubygems| file.
.. |kitchen_platform| replace:: Run |kitchen| against a single platform listed in the |kitchen yml| file. Use a |ruby| regular expression to specify the platform against which |kitchen| is to run.
.. |kitchen_platforms| replace:: Run |kitchen| against one or more platforms listed in the |kitchen yml| file. Use ``all`` to run |kitchen| against all platforms. Use a |ruby| regular expression to glob two or more platforms into a single run.
.. |kitchen_provisioner| replace:: The default provisioner that is used by |kitchen|.
.. |knife azure certificate| replace:: The ``azure`` subcommand must use a management certificate for secure communication with |azure|.
.. |knife open_source_only| replace:: This option only works when used with the open source |chef server| and will have no effect when used with |chef server oec| or |chef server| 12.x.
.. |knife option_run_list| replace:: The run-list that is passed as part of the command itself.



.. Description strings that begin with the letter L.
.. The pattern is |lxxxx| replace:: string.
..
..

.. L
..

.. |latest| replace:: Download the most recent version of a cookbook.
.. |ldap base_dn| replace:: The root |ldap| node under which all other nodes exist in the directory structure.
.. |ldap bind_dn| replace:: The distinguished name used to bind to the |ldap| server.
.. |ldap bind_password| replace:: The password for the binding user.
.. |ldap enable_tls| replace:: Enable TLS. When enabled, communication with the |ldap| server is done via a secure |ssl| connection on a dedicated port.
.. |ldap group_dn| replace:: The distinguished name for a group.
.. |ldap host| replace:: The name (or IP address) of the |ldap| server.
.. |ldap login_attribute| replace:: The |ldap| attribute that holds the user's login name.
.. |ldap port| replace:: An integer that specifies the port on which the |ldap| server listens.
.. |ldap ssl_enabled| replace:: Cause the |chef server| to connect to the |ldap| server using |ssl|.
.. |ldap system_adjective| replace:: A descriptive name for the login system that is displayed to users in the |chef server| management console.
.. |legacy_database_setting| replace:: Generate a default settings template with legacy database configuration variables.
.. |level log| replace:: The level of logging that is to be displayed by the |chef client|. The |chef client| uses the ``mixlib-log`` (https://github.com/chef/mixlib-log) to handle logging behavior. Options (in order of priority): ``:debug``, ``:info``, ``:warn``, ``:error``, and ``:fatal``.
.. |level mdadm| replace:: The |raid| level.
.. |license| replace:: The type of license under which a cookbook is distributed: ``apachev2``, ``gplv2``, ``gplv3``, ``mit``, or ``none`` (default). This option places the appropriate license notice in the pre-created files: ``Apache v2.0`` (for ``apachev2``), ``GPL v2`` (for ``gplv2``), ``GPL v3`` (for ``gplv3``), ``MIT`` (for ``mit``), or ``license 'Proprietary - All Rights Reserved`` (for ``none``). Be aware of the licenses for files inside of a cookbook and be sure to follow any restrictions they describe.
.. |license chef_server| replace:: The number of |chef server| licenses.
.. |license url| replace:: The URL to visit for more information about how to update the number of nodes licensed for an organization.
.. |license metadata_rb| replace:: The type of license under which a cookbook is distributed: ``Apache v2.0``, ``GPL v2``, ``GPL v3``, ``MIT``, or ``license 'Proprietary - All Rights Reserved`` (default). Please be aware of the licenses for files inside of a cookbook and be sure to follow any restrictions they describe.
.. |link_type| replace:: The type of link: ``:symbolic`` or ``:hard``.
.. |links interface_lag| replace:: An array of interfaces to be configured as members of a link aggregation group (LAG).
.. |links minimum_physical_lag| replace:: The minimum number of physical links that are required to ensure the availability of the link aggregation group (LAG).
.. |listener_hostname| replace:: The hostname for the listener.
.. |load-balancer| replace:: The load balancing application to which a server is to be added.
.. |local chef_repo| replace:: Show files in the local |chef repo| instead of a remote location.
.. |local_directory| replace:: Return only the contents of the local directory.
.. |local_mode| replace:: Run the |chef client| in local mode. This allows all commands that work against the |chef server| to also work against the local |chef repo|.
.. |local_object| replace:: Delete only the local copy of an object. A remote copy will not be deleted.
.. |local_template| replace:: Load a template from a local path. By default, the |chef client| loads templates from a cookbook's ``/templates`` directory. When this property is set to ``true``, use the ``source`` property to specify the path to a template on the local node.
.. |localpkg_gpgcheck| replace:: Perform a |gnu pg| signature check on local packages.
.. |lockfile| replace:: The location of the |chef client| lock file.
.. |logfile_yum| replace:: The full directory and file name for the location in which |yum| is to write a log file.
.. |log_level| replace:: The level of logging to be stored in a log file.
.. |log_location| replace:: The location of the log file.
.. |log_rotation| replace:: The log rotation policy for this service. Log files are rotated when they exceed ``file_maxbytes``. The maximum number of log files in the rotation is defined by ``num_to_keep``.
.. |log_rotation min_duration| replace:: When to log a slow |postgresql| query statement.
.. |long| replace:: Display all attributes in the output and show the output as |json|.
.. |long description| replace:: A longer description that ideally contains full instructions on the proper use of a cookbook, including definitions, libraries, dependencies, and so on. There are two ways to use this field: with the contents embedded in the field itself or with the contents pulled from a file at a specified path, such as a README.rdoc located at the top of a cookbook directory.


.. Description strings that begin with the letter M.
.. The pattern is |mxxxx| replace:: string.
..
..

.. M
..


.. |maintainer| replace:: The name of the person responsible for maintaining a cookbook, either an individual or an organization.
.. |maintainer email| replace:: The email address for the person responsible for maintaining a cookbook. Only one email can be listed here, so if this needs to be forwarded to multiple people consider using an email address that is already setup for mail forwarding.
.. |manage_endpoint| replace:: The HTTP URL for |chef manage|.
.. |manage_symlink_source| replace:: Cause the |chef client| to detect and manage the source file for a symlink.
.. |managed_entry_store| replace:: The managed entry store.
.. |manual_list| replace:: Define a search query as a space-separated list of servers.
.. |max_args| replace:: The maximum number of arguments per command line.
.. |max_chars| replace:: The maximum size (in characters) for a command line.
.. |max_connections| replace:: The maximum number of allowed concurrent connections.
.. |max_retry| replace:: The maximum number of attempts made to retrieve a file before returning an error.
.. |maximum_transmission_unit| replace:: The maximum transmission unit (MTU) for the network interface.
.. |md5_auth_cidr_addresses| replace:: Use instead of ``trust_auth_cidr_addresses`` to encrypt passwords using MD5 hashes.
.. |mdadm_defaults| replace:: When true this property sets the default values for ``chunk`` and ``metadata`` to ``nil`` allowing mdadm to use it's own default values.
.. |mdpolicy| replace:: The metadata download policy for the repository metadata index.
.. |media location| replace:: The geographic location for a virtual machine and its services.
.. |medium| replace:: Display normal attributes in the output and to show the output as |json|.
.. |members_group| replace:: Which users should be set or appended to a group.
.. |memory mb| replace:: The amount of memory, in megabytes. Possible values: ``512``, ``1024``, ``1536``, ``2048``, ``4096``, ``8192``, ``12288``, or ``16384``.
.. |memory maximum_redis| replace:: The maximum amount of memory (in bytes).
.. |memory maximum_policy_redis| replace:: The policy applied when the maximum amount of memory is reached. Possible values: ``allkeys-lru`` (remove keys, starting with those used least frequently), ``allkeys-random`` (remove keys randomly), ``noeviction`` (don't expire, return an error on write operation), ``volatile-lru`` (remove expired keys, starting with those used least frequently), ``volatile-random`` (remove expired keys randomly), and ``volatile-ttl`` (remove keys, starting with nearest expired time).
.. |message http_request| replace:: The message that is sent by the HTTP request.
.. |message resource log| replace:: The message to be added to a log file.
.. |metadata attributes| replace:: The list of attributes that are required to configure a cookbook. An attribute name is required, followed by any of these options: ``display_name`` (the name that appears in the user interface), ``description`` (a short description), ``choice`` (an array of choices that are presented to a user), ``calculated`` (the default value is calculated by the recipe), ``type`` (the type of value, either ``string``, ``array``, or ``hash``), ``required`` (the level of user input, either ``required``, ``recommended``, or ``optional``), ``recipes`` (an array of recipes), or ``default`` (the attribute's default value).
.. |metadata_expire| replace:: The amount of time (in seconds) before metadata for this repository expires.
.. |metadata rb chef_version| replace:: A range of |chef client| versions that are supported by this cookbook.
.. |metadata rb conflicts| replace:: A cookbook conflicts with another cookbook or cookbook version. Use a version constraint to define constraints for cookbook versions: ``<`` (less than), ``<=`` (less than or equal to), ``=`` (equal to), ``>=`` (greater than or equal to), ``~>`` (approximately greater than), or ``>`` (greater than). This field requires that a cookbook with a matching name and version does not exist on the |chef server|. When the match exists, the |chef server| ensures that any conflicted cookbooks are not included with the set of cookbooks that are sent to the node when the |chef client| runs.
.. |metadata rb depends| replace:: Show that a cookbook has a dependency on another cookbook. Use a version constraint to define dependencies for cookbook versions: ``<`` (|ruby less|), ``<=`` (|ruby less_or_equal|), ``=`` (|ruby equal|), ``>=`` (|ruby greater_optimistic|), ``~>`` (|ruby greater_pessimistic|), or ``>`` (|ruby greater|). This field requires that a cookbook with a matching name and version exists on the |chef server|. When the match exists, the |chef server| includes the dependency as part of the set of cookbooks that are sent to the node when the |chef client| runs. It is very important that the ``depends`` field contain accurate data. If a dependency statement is inaccurate, the |chef client| may not be able to complete the configuration of the system.
.. |metadata rb ohai_version| replace:: A range of |ohai| versions that are supported by this cookbook.
.. |metadata rb provides| replace:: Add a recipe, definition, or resource that is provided by this cookbook, should the auto-populated list be insufficient.
.. |metadata rb recommends| replace:: Add a dependency on another cookbook that is recommended, but not required. A cookbook will still work even if recommended dependencies are not available.
.. |metadata rb replaces| replace:: Whether this cookbook should replace another (and can be used in-place of that cookbook).
.. |metadata rb suggests| replace:: Add a dependency on another cookbook that is suggested, but not required. This field is weaker than ``recommends``; a cookbook will still work even when suggested dependencies are not available.
.. |metadata rb supports| replace:: Show that a cookbook has a supported platform. Use a version constraint to define dependencies for platform versions: ``<`` (less than), ``<=`` (less than or equal to), ``=`` (equal to), ``>=`` (greater than or equal to), ``~>`` (approximately greater than), or ``>`` (greater than). To specify more than one platform, use more than one ``supports`` field, once for each platform.
.. |method request type| replace:: The request method: ``DELETE``, ``GET``, ``POST``, or ``PUT``.
.. |migrate command_run| replace:: Run a migration command.
.. |migration command_string| replace:: A string that contains a shell command that can be executed to run a migration operation.
.. |minimal_ohai| replace:: Run the |ohai| plugins for name detection and resource/provider selection and no other |ohai| plugins. Set to ``true`` during integration testing to speed up test cycles.
.. |minute cron| replace:: The minute at which the |cron| entry should run (0 - 59).
.. |mirror_expire yum| replace:: The amount of time (in seconds) after which a locally-cached mirror list is to expire. When the current ``mirrorlist`` is less than this amount of time, |yum| does not download another copy of the mirror list.
.. |mirrorlist| replace:: A string that contains the URI to the mirror list, starting with ``http://``, ``ftp://``, or ``file://``. Use ``file://`` if the mirror list is a text file or resides on the local system.
.. |mirrorlist yum| replace:: A URL that points to a file that contains a list of base URLs. This attribute can be used with, or instead of, ``baseurl``.
.. |mirrorlist_expire yum| replace:: The amount of time (in seconds) after which a locally-cached mirror list is to expire. An alias for ``mirror_expire``.
.. |mismatch| replace:: Show only matching versions.
.. |mod_aspnet| replace:: Install |microsoft aspdotnet| runtime components.
.. |mod_auth_basic| replace:: Install support for basic authentication.
.. |mod_auth_windows| replace:: Install |windows| authentication, which allows clients to authenticate using |kerberos| or |ntlm|.
.. |mod_compress_dynamic| replace:: Install dynamic content compression support. Enabling dynamic compression allows a more efficient use of bandwidth; however, if the server's processor utilization is already high, the CPU load imposed by dynamic compression may affect site performance.
.. |mod_compress_static| replace:: Install support for static content compression.
.. |mod_deploy| replace:: Install the |microsoft web deployment tool|, which simplifies the migration, management, and deployment of |microsoft iis| web servers, applications, and websites.
.. |mod_iis6_metabase_compat| replace:: Install |microsoft iis| the metabase compatibility component.
.. |mod_isapi| replace:: Install extension and filter support for |microsoft isapi|.
.. |mod_logging| replace:: Install and enable HTTP logging for website activity, logging tools, and custom logging (for HTTP request/response headers, |microsoft iis| server variables, and client-side fields with simple configuration).
.. |mod_management| replace:: Install the management console, which can be used to support the management of local and remote web servers.
.. |mod_mvc3| replace:: Install |microsoft dotnet| MVC3 runtime components.
.. |mod_security| replace:: Install URL authorization (which authorizes client access to the URLs that comprise a web application), request filtering (which configures rules to block selected client requests), and IP security (which allows or denies access to content based on an IP address or a domain name).
.. |mod_tracing| replace:: Install support for tracing |microsoft aspdotnet| applications and failed requests.
.. |mod_urlrewrite| replace:: Install support for URL rewrite rules using rule templates, rewrite maps, and |microsoft dotnet| providers.
.. |mode lacp| replace:: The Link Aggregation Control Protocol (LACP) mode. Possible values: ``active`` (active mode), ``disable`` (not used), or ``passive`` (passive mode).

.. |mode resource| replace:: A quoted 3-5 character string that defines the octal mode. For example: ``'755'``, ``'0755'``, or ``'00755'``.
.. |mode resource_directory| replace::  If ``mode`` is not specified and if the directory already exists, the existing mode on the directory is used. If ``mode`` is not specified, the directory does not exist, and the ``:create`` action is specified, the |chef client| assumes a mask value of ``'0777'``, and then applies the umask for the system on which the directory is to be created to the ``mask`` value. For example, if the umask on a system is ``'022'``, the |chef client| uses the default value of ``'0755'``.
.. |mode resource_directory_11-4| replace::  If ``mode`` is not specified and if the directory already exists, the existing mode on the directory is used. If ``mode`` is not specified, the directory does not exist, and the ``:create`` action is specified, the |chef client| assumes a mask value of ``'0777'`` and then applies the umask for the system on which the directory is to be created to the ``mask`` value. For example, if the umask on a system is ``'022'``, the |chef client| uses the default value of ``'0755'``.
.. |mode resource_file| replace:: If ``mode`` is not specified and if the file already exists, the existing mode on the file is used. If ``mode`` is not specified, the file does not exist, and the ``:create`` action is specified, the |chef client| assumes a mask value of ``'0777'`` and then applies the umask for the system on which the file is to be created to the ``mask`` value. For example, if the umask on a system is ``'022'``, the |chef client| uses the default value of ``'0755'``.
.. |mode resource_file_11-4| replace:: If ``mode`` is not specified and if the file already exists, the existing mode on the file is used. If ``mode`` is not specified, the file does not exist, and the ``:create`` action is specified, the |chef client| assumes a mask value of ``'0777'` and then applies the umask for the system on which the file is to be created to the ``mask`` value. For example, if the umask on a system is ``'022'``, the |chef client| uses the default value of ``'0755'``.
.. |mode *nix| replace:: A quoted 3-5 character string that defines the octal mode that is passed to |chmod|. For example: ``'755'``, ``'0755'``, or ``'00755'``. If the value is specified as a quoted string, it works exactly as if the ``chmod`` command was passed. If the value is specified as an integer, prepend a zero (``0``) to the value to ensure that it is interpreted as an octal number. For example, to assign read, write, and execute rights for all users, use ``'0777'`` or ``'777'``; for the same rights, plus the sticky bit, use ``'01777'`` or ``'1777'``.
.. |mode windows security| replace:: A quoted 3-5 character string that defines the octal mode that is translated into rights for |windows| security. For example: ``'755'``, ``'0755'``, or ``'00755'``. Values up to ``'0777'`` are allowed (no sticky bits) and mean the same in |windows| as they do in |unix|, where ``4`` equals ``GENERIC_READ``, ``2`` equals ``GENERIC_WRITE``, and ``1`` equals ``GENERIC_EXECUTE``. This property cannot be used to set ``:full_control``. This property has no effect if not specified, but when it and ``rights`` are both specified, the effects are cumulative.
.. |month cron| replace:: The month in the year on which a |cron| entry is to run (1 - 12).
.. |mount_point| replace:: The directory (or path) in which the device is to be mounted.
.. |multilib_policy| replace:: Install all possible architectures for any package, or only the best architecture for the platform. Possible values: ``all`` or ``best``.

.. Description strings that begin with the letter N.
.. The pattern is |nxxxx| replace:: string.
..
..

.. N
..


.. |name admin_webui| replace:: The name of the administrator for the web user interface.
.. |name application| replace:: The name of the application.
.. |name application_pool| replace:: The name of the application pool.
.. |name availability_zone| replace:: The name of the availability zone. Each availability zone is unique within a region.
.. |name chef_server| replace:: The name of the |chef server|.
.. |name class_chef_handler| replace:: The name of the handler class. This can be module name-spaced.
.. |name client_webui| replace:: The name of the |chef server| web user interface.
.. |name cluster| replace:: The name of the cluster.
.. |name command| replace:: The name of the command to be executed.
.. |name cookbook| replace:: The name of the cookbook.
.. |name data_bag| replace:: The name of the data bag.
.. |name data_bag_item| replace:: The name of a specific item within a data bag.
.. |name db_ocid| replace:: The name of the database.
.. |name delivery_project| replace:: A project inside a |chef delivery| Organization.
.. |name distribution| replace:: The name of the distribution.
.. |name dns_azure| replace:: The name of the DNS server (also known as the |azure hosted_service|).
.. |name environment| replace:: The name of the environment.
.. |name firewall| replace:: The name of the firewall.
.. |name fqdn| replace:: The |fqdn| of the host.
.. |name git_repo| replace:: The name of the |git| repository.
.. |name homebrew_user| replace:: The name of the |homebrew| owner to be used by the |chef client| when executing a command.
.. |name key_gnupg| replace:: The name of the |gnupg| key.
.. |name group| replace:: The name of the group.
.. |name group_process_owner| replace:: The name of the group that owns a process. This is required when starting any executable as a daemon.
.. |name group_service_directory| replace:: The name of the group for which access to service directory and scripts is granted.
.. |name gunicorn_processx| replace:: The name of an instance of |gunicorn|. This attribute is only necessary when more than one instance of |gunicorn| is running.
.. |name iam_profile| replace:: The name of the |amazon iam| to apply to this instance.
.. |name interface| replace:: The name of the interface.
.. |name key_directory| replace:: The name of the key that is to be created, deleted, or modified.
.. |name key_public| replace:: The name of the public key.
.. |name lag| replace:: The name of the link aggregation group (LAG).
.. |name_link| replace:: The name of the link.
.. |name load_balancer| replace:: The name of the load balancer.
.. |name module| replace:: The name of the module.
.. |name monitor| replace:: The name of the monitor.
.. |name nagios_nrpecheck| replace:: The name of the |nagios nrpe| check.
.. |name node| replace:: The name of the node.
.. |name node_client_rb| replace:: Determines which configuration should be applied and sets the ``client_name``, which is the name used when authenticating to a |chef server|. The default value is the |fqdn| of the |chef client|, as detected by |ohai|. In general, Chef recommends that you leave this setting blank and let |ohai| assign the |fqdn| of the node as the ``node_name`` during each |chef client| run.
.. |name node_knife_rb| replace:: The name of the node. This may be a username with permission to authenticate to the |chef server| or it may be the name of the machine from which |knife| is run.
.. |name ohai_plugin| replace:: The name of an |ohai| plugin to be reloaded.
.. |name openstack_compute| replace:: The |openstack compute| user name.
.. |name openstack_tenant| replace:: The |openstack compute| tenant name.
.. |name owner| replace:: The name of the owner.
.. |name package| replace:: The name of the package.
.. |name package_group| replace:: The name of the package group.
.. |name package_yum| replace:: One of the following: the name of a package, the name of a package and its architecture, the name of a dependency.
.. |name pid_file| replace:: The file name for the process identifier (PID) file.
.. |name placement_group| replace:: The name of the placement group.
.. |name plugin| replace:: The name of the plugin.
.. |name policy_group| replace:: The name of a policy group that exists on the |chef server|.
.. |name policy_name| replace:: The name of a policy, as identified by the ``name`` setting in a |policyfile rb| file.
.. |name port| replace:: The name of the port.
.. |name powershell_cmdlet| replace:: The name of a valid |windows powershell| cmdlet. The name may only contain letter (a-z, A-Z), number (0-9), and underscore (_) characters and should start with a letter. The name may not be null or empty.
.. |name powershell_dsc_resource| replace:: The name of the |windows powershell_dsc_short| resource.
.. |name powershell_module| replace:: The name of the module from which a |windows powershell_dsc_short| resource originates.
.. |name program| replace:: The name of the program.
.. |name proxy| replace:: The user name for the proxy.
.. |name repository_yum| replace:: The name of the |yum| repository.
.. |name ruby_block| replace:: The name of the |ruby| block.
.. |name s3_bucket| replace:: The name of the |amazon s3| bucket.
.. |name scm_provider| replace:: The name of the source control management provider.
.. |name server| replace:: The name of the server.
.. |name service| replace:: The name of the service.
.. |name site| replace:: The name of the site.
.. |name sname_or_name| replace:: The ``node_name`` property as a short node name (``sname``) or a long node name (``name``). A node with a long node name cannot communicate with a node with a short node name.
.. |name status| replace:: Show only the names of files with a status of ``Added``, ``Deleted``, ``Modified``, or ``Type Changed``.
.. |name template_settings_file| replace:: The name of a template to be rendered to create the local settings file.
.. |name user| replace:: The name of the user.
.. |name user api_dns_update| replace:: The |dns update api| user name.
.. |name user cron| replace:: The name of the user that runs the command. If the ``user`` property is changed, the original ``user`` for the |crontab| program continues to run until that |crontab| program is deleted.
.. |name user postgresql| replace:: The |postgresql| account user name.
.. |name user rackspace| replace:: The |rackspace| account user name.
.. |name user yum_basic_auth| replace:: The user name for basic authentication to a repository or to a URL.
.. |name validation_client| replace:: The name of the validation client, typically a client named |chef validator|.
.. |name virtual_environment| replace:: The name of the virtual environment.
.. |name virtual_host| replace:: The name of the virtual host.
.. |name virtual_machine| replace:: The host name for the virtual machine.
.. |name vlan| replace:: The name of the VLAN.
.. |name vrrp_sync_group| replace:: The name of the |vrrp| synchronization group.
.. |name vrrp_sync_instance| replace:: The name of the |vrrp| synchronization instance.
.. |name windows_registry_value| replace:: The name of the value to be stored in the |windows| registry.
.. |name only| replace:: Show only the names of modified files.
.. |name_rules org| replace:: The name must begin with a lower-case letter or digit, may only contain lower-case letters, digits, hyphens, and underscores, and must be between 1 and 255 characters.
.. |name_rules org_full| replace:: The full name must begin with a non-white space character and must be between 1 and 1023 characters.
.. |netmask| replace:: The decimal representation of the network mask.
.. |network_address| replace:: The address for the network interface.
.. |network_default| replace:: The network as the default.
.. |network_label| replace:: Add a private network.
.. |network_name| replace:: The name of the network in which a virtual machine is created.
.. |network_private| replace:: Specify that a bootstrap network is a private network.
.. |nginx bookshelf_caching| replace:: Whether |nginx| is used to cache cookbooks. When ``:on``, |nginx| serves up the cached content instead of forwarding the request.
.. |nginx cache_max_size| replace:: The ``max_size`` parameter used by the |nginx| cache manager, which is part of the ``proxy_cache_path`` directive. When the size of file storage exceeds this value, the |nginx| cache manager removes the least recently used data.
.. |nginx client_max_body_size| replace:: The maximum accepted body size for a client request, as indicated by the ``Content-Length`` request header. When the maximum accepted body size is greater than this value, a ``413 Request Entity Too Large`` error is returned.
.. |nginx ssl_company_name| replace:: The name of your company.
.. |nginx ssl_country_name| replace:: The country in which your company is located.
.. |nginx ssl_email_address| replace:: The default email address for your company.
.. |nginx ssl_locality_name| replace:: The city in which your company is located.
.. |nginx ssl_organizational_unit_name| replace:: The organization or group within your company that is running the |chef server|.
.. |nginx ssl_state_name| replace:: The state, province, or region in which your company is located.
.. |nginx stub_status| replace:: Enables the |nginx| ``stub_status`` module.
.. |nginx stub_status allow_list| replace:: The IP address on which accessing the ``stub_status`` endpoint is allowed.
.. |nginx stub_status listen_host| replace:: The host on which the |nginx| ``stub_status`` module listens.
.. |nginx stub_status listen_port| replace:: The port on which the |nginx| ``stub_status`` module listens.
.. |nginx stub_status location| replace:: The name of the |nginx| ``stub_status`` endpoint used to access data generated by the |nginx| ``stub_status`` module.
.. |no name tags| replace:: Prevent tag names from being displayed in the output.
.. |no_berkshelf| replace:: Prevent |berkshelf| from running, even when a |berksfile| exists.
.. |no_bootstrap| replace:: Enable the |chef client| bootstrap.
.. |no_diff| replace:: Show a diff when a file changes.
.. |no_editor| replace:: Prevent the |chef editor| from being opened and accept data as-is.
.. |no_force| replace:: Force the upload of files even if they haven't been changed.
.. |no_host_key_verify| replace:: Use ``--no-host-key-verify`` to disable host key verification.
.. |no_lazy_load| replace:: Download all cookbook files and templates at the beginning of the |chef client| run.
.. |no_options| replace:: This command does not have any specific options.
.. |no_pretty| replace:: Use ``--no-pretty`` to disable |prettyprint| output for |json|.
.. |no_proxy| replace:: A comma-separated list of URLs that do not need a proxy.
.. |no_recurse_delete| replace:: Use ``--recurse`` to delete directories recursively.
.. |no_recurse_deps| replace:: Use ``--recurse`` to list dependencies recursively.
.. |no_recurse_diff| replace:: Use ``--no-recurse`` to disable listing a directory recursively.
.. |no_recurse_download| replace:: Use ``--no-recurse`` to disable downloading a directory recursively.
.. |no_recurse_upload| replace:: Use ``--no-recurse`` to disable uploading a directory recursively.
.. |node_environment| replace:: The environment to which the node is associated.
.. |node_fqdn| replace:: The |fqdn| for the node.
.. |node_last_checkin| replace:: The time of the most recent check-in by the |chef client| running on that node.
.. |node_uptime| replace:: The amount of time the node has been running.
.. |node_hostname| replace:: The hostname to which the node is to connect.
.. |node_purge| replace:: The name of the node to be deleted, if different from the server name.
.. |node_path| replace:: The location in which nodes are stored when the |chef client| is run in local mode.
.. |node_path_10| replace:: The location in which to look for node-specific recipes.

.. |node type_cloud| replace:: A cloud-based node is hosted in an external cloud-based service, such as |amazon aws|, |openstack|, |rackspace|, |google compute engine|, or |azure|. Plugins are available for |knife| that provide support for external cloud-based services. |knife| can use these plugins to create instances on cloud-based services. Once created, the |chef client| can be used to deploy, configure, and maintain those instances.
.. |node type_network| replace:: A network node is any networking device---a switch, a router---that is being managed by a |chef client|, such as networking devices by |juniper|, |arista|, |cisco|, and |f5|. Use |chef| to automate common network configurations, such physical and logical Ethernet link properties and VLANs, on these devices.
.. |node type_physical| replace:: A physical node is typically a server or a virtual machine, but it can be any active device attached to a network that is capable of sending, receiving, and forwarding information over a communications channel. In other words, a physical node is any active device attached to a network that can run a |chef client| and also allow that |chef client| to communicate with a |chef server|.
.. |node type_virtual| replace:: A virtual node is a machine that runs only as a software implementation, but otherwise behaves much like a physical machine.

.. |non_unique_members| replace:: Allow ``gid`` duplication. May only be used with the ``Groupadd`` provider.
.. |non_unique_user| replace:: Create a duplicate (non-unique) user account.
.. |notifies| replace:: Which resource takes action when this resource's state changes. A resource may notify more than one resource; use a ``notifies`` statement for each resource to be notified.
.. |num_to_keep| replace:: The number of log files to keep.
.. |num_versions| replace:: The number of cookbook versions to include in the response, where ``n`` is the number of cookbook versions. For example: ``num_versions=3`` returns the three latest versions, in descending order (newest to oldest). Use ``num_versions=all`` to return all cookbook versions. If ``num_versions`` is not specified, a single cookbook version is returned. ``0`` is an invalid input (an empty array for the versions of each cookbook is returned).


.. Description strings that begin with the letter O.
.. The pattern is |oxxxx| replace:: string.
..
..

.. O
..


.. |obsoletes| replace:: Enable obsoletes logic processing during distribution level upgrades.
.. |onboot ifconfig| replace:: Bring up the network interface on boot.
.. |once| replace:: Run the |chef client| only once and cancel ``interval`` and ``splay`` options.
.. |one_column| replace:: Show only one column of results.
.. |onparent ifconfig| replace:: Bring up the network interface when its parent interface is brought up.
.. |openid_cstore_couchdb| replace:: Store |open id| data in |couch db| instead of the file system.
.. |openid_cstore_path| replace:: The location in which |open id| data is stored in the file system.
.. |opscode_support| replace:: This setting should not be changed without first consulting a |company_name| support engineer.
.. |options mount| replace:: An array or string that contains mount options. If this value is a string, it is converted to an array.
.. |orgmapper desc| replace:: |orgmapper| is a tool that can be used with a non-hosted |chef server| to provide administrative access to back-end objects. |orgmapper| can be a dangerous tool and should be used carefully. In general, anything that needs to be done around automating user creation, making permissions changes, and so on, can be done more easily using the ``knife-acl`` plugin and by using the |chef server| web interface.
.. |orgmapper desc_private_chef| replace:: |orgmapper| is a tool that can be used with |chef private| to provide administrative access to back-end objects. |orgmapper| can be a dangerous tool and should be used carefully. In general, anything that needs to be done around automating user creation, making permissions changes, and so on, can be done more easily using the ``knife-acl`` plugin and by using the |chef private| web interface.
.. |os-disk-name| replace:: The operating system type of the |azure| OS image: ``Linux`` or ``Windows``.
.. |override_runlist| replace:: Replace the current run list with the specified items.
.. |overwrite_groups| replace:: Cause |yum| to use all matching repositories or only use the last matching repository.
.. |owner directory_service| replace:: The owner of a service directory and scripts.
.. |owner file| replace:: The owner of a file.
.. |owner system| replace:: The system owner responsible for the checked-out code.
.. |owner resource link| replace:: The owner associated with a symbolic link.
.. |owner windows security| replace:: A string or ID that identifies the group owner by user name, including fully qualified user names such as ``domain\user`` or ``user@domain``. If this value is not specified, existing owners remain unchanged and new owner assignments use the current user (when necessary).


.. Description strings that begin with the letter P.
.. The pattern is |pxxxx| replace:: string.
..
..

.. P
..

.. |packages array| replace:: An array of packages to install.
.. |params| replace:: A |ruby hash| of extra parameters that are to be passed to a template file.
.. |PART| replace:: The part of the cookbook to show: ``attributes``, ``definitions``, ``files``, ``libraries``, ``providers``, ``recipes``, ``resources``, or ``templates``. More than one part can be specified.
.. |pass_number| replace:: The pass number used by the file system check (``fsck``) command while creating a file systems table (``fstab``) entry.
.. |password application| replace:: The application password.
.. |password certificate_ssl| replace:: The password for the |ssl| certificate.
.. |password openstack_compute| replace:: The |openstack compute| password.
.. |password proxy_server| replace:: The password for the proxy server.
.. |password rabbitmq| replace:: The password for the |rabbitmq| user.
.. |password postgresql_user| replace:: The password for the |postgresql| user account.
.. |password shadow_hash| replace:: The password shadow hash. This property requires that ``ruby-shadow`` be installed. This is part of the |debian| package: ``libshadow-ruby1.8``.
.. |password sql_user| replace:: The password for the ``sql_user``.
.. |password sql_ro_user| replace:: The password for the ``sql_ro_user``.
.. |password user| replace:: The user password.
.. |password windows_service_run_as| replace:: The password for the user specified by ``run_as_user``.
.. |password yum_basic_auth| replace:: The password used with ``username`` for basic authentication.
.. |path bitmap| replace:: The path to a file in which a write-intent bitmap is stored.
.. |path bootstrap_template| replace:: The path to a template file to be used during a bootstrap operation.
.. |path certificate_ssl| replace:: The path to the location of the |ssl| certificate.
.. |path certificate_windows_store| replace:: Add the specified certificate to the store before creating the listener.
.. |path chef_handler| replace:: The full path to the handler file or the path to a |gem| (if the handler ships as part of a |ruby| |gem|).
.. |path chef_handler_directory| replace:: The directory in which handlers are dropped.
.. |path chef_repo| replace:: The path to the |chef repo|.
.. |path cookbook_checksum| replace:: The path at which cookbook checksums are located.
.. |path cookbook_file| replace:: The path to the destination at which a file is to be created.
.. |path delivery_job_root| replace:: The path to the job root.
.. |path directory| replace:: The path to the directory.
.. |path directory_delivery| replace:: The path for the directory in which configuration is written.
.. |path environment| replace:: The path to the environment.
.. |path file| replace:: The full path to the file, including the file name and its extension.
.. |path file_backup| replace:: The location in which backup files are stored. If this value is empty, backup files are stored in the directory of the target file.
.. |path full_path_to_file| replace:: The full path to the file, including the file name and its extension.
.. |path_fully_qualified| replace:: Using a fully qualified path is recommended, but is not always required.
.. |path hint_ohai| replace:: The path to the file that contains hints for |ohai|.
.. |path key_public| replace:: The path to a file that contains the public key.
.. |path output_file| replace:: The location in which the ``winrmcert.b64``, ``winrmcert.pem``, and ``winrmcert.pfx`` files are generated.
.. |path pid_file| replace:: The location in which a process identification number (pid) is saved. An executable, when started as a daemon, writes the pid to the specified file.
.. |path plugin_ohai| replace:: The directory in which |ohai| plugins are located.
.. |path powershell_data_file| replace:: The path to a valid |windows powershell| data file that also contains a node called ``localhost``.
.. |path recipe_file| replace:: The path to a recipe. For example, if a recipe file is in the current directory, use ``recipe_file.rb``. This is typically used with the ``--local-mode`` option.
.. |path repository| replace:: The path to the repository.
.. |path requirements_filex| replace:: The relative path to a requirements file. If this attribute is unspecified, the provider looks for one in the project root named ``requirements/#{chef_environment}.txt`` or ``requirements.txt``.
.. |path resource execute| replace:: An array of paths to use when searching for a command. These paths are not added to the command's environment $PATH.
.. |path roles_chef| replace:: The location in which role files are located.
.. |path ssl_certificate yum_client| replace:: The path to the |ssl| client certificate that |yum| should use to connect to repositories and/or remote sites.
.. |path ssl_certificate yum_client_key| replace:: The path of the location in which the |ssl| client key used by |yum| is located.
.. |path ssl_certificate yum_directory| replace:: The path to the directory in which the certificate authorities |yum| should use to verify |ssl| certificates are located.
.. |path validation_client| replace:: The path to the validation key used by the client, typically a file named |chef validator pem|.
.. |pattern command_line| replace:: One (or more) patterns for a command line. If this option is not specified, a list of patterns may be expected on standard input.
.. |pattern process_table| replace:: The pattern to look for in the process table.
.. |pedant debug_org_creation| replace:: Run tests with full output.
.. |pedant log_http_requests| replace:: Log HTTP requests in a file named ``http-traffic.log`` that is located in the path specified by ``log_directory``.
.. |permission create| replace:: Use the **Create** global permission to define which users and groups may create the following server object types: cookbooks, data bags, environments, nodes, roles, and tags.
.. |permission delete| replace:: Use the **Delete** permission to define which users and groups may delete an object.
.. |permission grant| replace:: Use the **Grant** permission to define which users and groups may configure permissions on an object.
.. |permission list| replace:: Use the **List** global permission to define which users and groups may view the following server object types: cookbooks, data bags, environments, nodes, roles, and tags.
.. |permission read| replace:: Use the **Read** permission to define which users and groups may view the details of an object.
.. |permission update| replace:: Use the **Update** permission to define which users and groups may edit the details of an object.
.. |permissions| replace:: One (or more) permissions that are to be set.
.. |persistdir| replace:: The directory in which |yum| stores information that is to persist across multiple |chef client| runs.
.. |platform| replace:: The platform for which a cookbook is designed.
.. |platform_node| replace:: The platform on which a node is running.
.. |platform_version| replace:: The version of the platform.
.. |plugin reload_by_ohai| replace:: Cause |ohai| to reload the specified plug-ins.
.. |pluginconfpath| replace:: The list of directories in which |yum| is to look for plugin configuration files.
.. |pluginpath| replace:: The list of directories in which |yum| is to look for plugin modules.
.. |plugins_yum| replace:: Enable plugins.
.. |port chef_zero| replace:: The port on which |chef zero| is to listen.
.. |port listen_postgresql| replace:: The connection source to which |postgresql| is to respond.
.. |port enable_non_ssl_nginx| replace:: Allow port 80 redirects to port 443. When this value is set to ``false``, load balancers on the front-end hardware are allowed to do |ssl| termination of the WebUI and API.
.. |port non_ssl_nginx| replace:: The port on which the WebUI and API are bound for non-|ssl| connections.
.. |port service| replace:: The port on which the service is to listen.
.. |postgresql external| replace:: Set to ``true`` to run |postgresql| external to the |chef server|. Must be set once only on a new installation of the |chef server| before the first ``chef-server-ctl reconfigure`` command is run. If this is set after a reconfigure or set to ``false``, any reconfigure of the |chef server| will return an error.
.. |postgresql external_db_superuser| replace:: The |postgresql| user name. This user must be granted either the ``CREATE ROLE`` and ``CREATE DATABASE`` permissions in |postgresql| or be granted ``SUPERUSER`` permission. This user must also have an entry in the host-based authentication configuration file used by |postgresql| (traditionally named ``pg_hba.conf``).
.. |postgresql external_db_password| replace:: The password for the user specified by ``postgresql['db_superuser']``.
.. |postgresql external_port| replace:: The port used by |postgresql| if that port is **not** 5432.
.. |postgresql external_vip| replace:: The host for this IP address must be online and reachable from the |chef server| via the port specified by ``postgresql['port']``.
.. |postgresql shmax| replace:: The maximum amount of shared memory.
.. |postgresql shmall| replace:: The total amount of available shared memory.
.. |precompile_assetsx| replace:: Pre-compile assets. Unless this attribute is specified, the |chef client| attempts to auto-detect whether the pipeline is in use by looking in ``config/assets.yml``.
.. |prerelease| replace:: Install pre-release gems.
.. |print_after| replace:: Show data after a destructive operation.
.. |print_on_command_line| replace:: Run the print command on the command line.
.. |priority process| replace:: A priority value assigned to the process.
.. |priority service| replace:: The relative priority of the program for start and shutdown ordering.
.. |priority yum| replace:: The priority for repository entries; a repository has priority when its priority value is higher than another repository's priority value.
.. |private-key-file| replace:: The file in which the |ssh| private key used for authentication is located.
.. |private_network| replace:: A private IP address for use with a bootstrap operation.
.. |property dsc_resource| replace:: A property from a |windows powershell_dsc| resource. Use this property multiple times, one for each property in the |windows powershell_dsc| resource.
.. |programs supervisor_group| replace:: An array of program names. Programs that are listed become members of the group.
.. |protected_multilib| replace:: Perform a check to ensure that multilib packages are of the same version.
.. |protected_packages| replace:: The list of packages that should never be completely removed by |yum|.
.. |protocol http| replace:: The HTTP protocol type to which a site responds: ``:http`` or ``:https``.
.. |provider resource_parameter| replace:: Explicitly specify a provider.
.. |provisioning_server| replace:: The |chef server| on which IDs are located.
.. |proxy_auth| replace:: Enable proxy authentication to the |chef server| web user interface.
.. |public-key-file| replace:: The file in which the |ssh| public key used for authentication is located.
.. |purge amazon ec2| replace:: Destroy all corresponding nodes and clients on the |chef server|, in addition to the |amazon ec2| node itself. This action (by itself) assumes that the node and client have the same name as the server; if they do not have the same names, then the ``--node-name`` option must be used to specify the name of the node.
.. |purge cookbook| replace:: Entirely remove a cookbook (or cookbook version) from the |chef server|. Use this action carefully because only one copy of any single file is stored on the |chef server|. Consequently, purging a cookbook disables any other cookbook that references one or more files from the cookbook that has been purged.
.. |purge google| replace:: Destroy all corresponding nodes and clients on the |chef server|, in addition to the |google compute engine| node itself. This action (by itself) assumes that the node and client have the same name as the server; if they do not have the same names, then the ``--node-name`` option must be used to specify the name of the node.
.. |purge knife download| replace:: Use ``--purge`` to delete local files and directories that do not exist on the |chef server|. By default, if a role, cookbook, etc. does not exist on the |chef server|, the local file for said role is left alone and NOT deleted.
.. |purge knife upload| replace:: Use ``--purge`` to delete roles, cookbooks, etc. from the |chef server| if their corresponding files do not exist in the |chef repo|. By default, such objects are left alone and NOT purged.
.. |purge node rackspace| replace:: Destroy all corresponding nodes on the |chef server|, in addition to the |rackspace| node itself. This option (by itself) assumes that the node and client have the same name as the server. If they do not, use the ``--node-name`` option to specify the correct name for the node.
.. |purge os disk windows azure| replace:: Destroy all corresponding operating system disks, in addition to the |azure| node itself.
.. |purge target_directory| replace:: Purge extra files found in the target directory.
.. |purge windows azure| replace:: Destroy all corresponding nodes and clients on the |chef server|, in addition to the |azure| node itself. This action (by itself) assumes that the node and client have the same name as the server; if they do not have the same names, then the ``--node-name`` option must be used to specify the name of the node.
.. |purge_before_symlink| replace:: An array of directories (relative to the application root) to be removed from a checkout before symbolic links are created. This attribute runs before ``create_dirs_before_symlink`` and before ``symlink``.



.. Description strings that begin with the letter Q.
.. The pattern is |qxxxx| replace:: string.
..
..

.. Q
..

.. |query| replace:: Protect search queries that start with a hyphen (-). A ``-q`` query may be specified as an argument or an option, but not both.
.. |quota_limit| replace:: Set a quota limit.
.. |quorum push jobs| replace:: The minimum number of nodes that match the search criteria, are available, and acknowledge the job request. This can be expressed as a percentage (e.g. ``50%``) or as an absolute number of nodes (e.g. ``145``).


.. Description strings that begin with the letter R.
.. The pattern is |rxxxx| replace:: string.
..
..

.. R
..

.. |r knife list| replace:: List directories recursively.
.. |rabbitmq analytics_max_length| replace:: The maximum number of messages that can be queued before |rabbitmq| automatically drops messages from the front of the queue to make room for new messages.
.. |rabbitmq capacity_affects_status| replace:: Specify if the ``_status`` endpoint in the |api chef server| will fail if the monitored queue is at capacity.
.. |rabbitmq drop_on_full| replace:: Specify if messages will stop being sent to the |rabbitmq| queue when it is at capacity.
.. |rabbitmq management_enabled| replace:: Specify if the |rabbitmq mgmt| is enabled.
.. |rabbitmq management_password| replace:: The |rabbitmq mgmt| password.
.. |rabbitmq management_port| replace:: The |rabbitmq mgmt| port.
.. |rabbitmq management_user| replace:: The |rabbitmq mgmt| user.
.. |rabbitmq prevent_startup| replace:: Specify if the |chef server| will start when the monitored |rabbitmq| queue is full.
.. |rabbitmq qmon_enabled| replace:: Specify if the queue length monitor is enabled.
.. |rabbitmq qmon_milliseconds| replace:: The frequency (in milliseconds) at which the length of the |rabbitmq| queue is checked.
.. |rabbitmq qmon_queue| replace:: The |rabbitmq| queue that is observed by queue length monitor.
.. |rabbitmq qmon_timeout_milliseconds| replace:: The timeout (in milliseconds) at which calls to the queue length monitor will stop if the |chef server| is overloaded.
.. |rabbitmq qmon_vhost| replace:: The virtual host for the |rabbitmq| queue that is observed by queue length monitor.
.. |rabbitmq ssl_versions| replace:: The |ssl| versions used by the |rabbitmq mgmt|.

.. |rabbit_mgmt_http_cull_interval| replace:: The maximum cull interval (in seconds) for the HTTP connection pool that is used by the |rabbitmq mgmt|.
.. |rabbit_mgmt_http_init_count| replace:: The initial worker count for the HTTP connection pool that is used by the |rabbitmq mgmt|.
.. |rabbit_mgmt_http_max_age| replace:: The maximum connection worker age (in seconds) for the HTTP connection pool that is used by the |rabbitmq mgmt|.
.. |rabbit_mgmt_http_max_connection_duration| replace:: The maximum connection duration (in seconds) for the HTTP connection pool that is used by the |rabbitmq mgmt|.
.. |rabbit_mgmt_http_max_count| replace:: The maximum worker count for the HTTP connection pool that is used by the |rabbitmq mgmt|.
.. |rabbit_mgmt_ibrowse_options| replace:: An array of comma-separated key-value pairs of ibrowse options for the HTTP connection pool that is used by the |rabbitmq mgmt|.
.. |rabbit_mgmt_timeout| replace:: The timeout for the HTTP connection pool that is used by the |rabbitmq mgmt|.
.. |rackconnect wait| replace:: Specify that |rackconnect| automation setup be complete before bootstrapping a node.
.. |rackspace_api_auth_url| replace:: The URL used to authenticate the |rackspace| API key.
.. |rackspace_api_key| replace:: The unique alphanumeric identifier that is associated with a |rackspace| account.
.. |rackspace config_drive| replace:: Specify if a config drive device should be created in ``/dev/disk/by-label/config-2``.
.. |rackspace disk_partition| replace:: The disk partitioning scheme.
.. |rackspace file| replace:: The file used to inject data into a node on |rackspace|.
.. |rackspace network_label| replace:: The label for the network.
.. |rackspace metadata| replace:: A |json| string that contains a metadata hash.
.. |rackspace region| replace:: The |rackspace| region.
.. |rackspace service_level_wait| replace:: Specify that |rackspace| service level automation setup be complete before bootstrapping a node.
.. |rackspace user_data_file| replace:: The user data file that is placed in the directory on the config drive.
.. |rackspace version_api_cloud_servers| replace:: The |rackspace api_cloud_servers| version.
.. |raid_device exists| replace:: Indicates whether the RAID array exists.
.. |raid_device mdadm| replace:: The name of the |raid| device.
.. |raid_device superblock_type| replace:: The superblock type for RAID metadata.
.. |readme-format| replace:: The document format of the readme file: ``md`` (markdown) and ``rdoc`` (|ruby| docs).
.. |reboot reason| replace:: A string that describes the reboot action.
.. |recent_yum| replace:: The age (in days) of a package, after which a package is no longer considered a "recent" package.
.. |recipe_url| replace:: The URL location from which a remote cookbook |tar gz| is to be downloaded.
.. |recursive directory| replace:: Create or delete parent directories recursively. For the ``owner``, ``group``, and ``mode`` properties, the value of this attribute applies only to the leaf directory.
.. |recursive registry_key| replace:: When creating a key, this value specifies that the required keys for the specified path are to be created. When using the ``:delete_key`` action in a recipe, and if the registry key has subkeys, then set the value for this property to ``true``.
.. |recursive remote_directory| replace:: Create or delete directories recursively.
.. |reference resource scm| replace:: The alias for revision.
.. |region amazon| replace:: The name of the region from which instances of hosted applications are launched. Each region has a unique endpoint.
.. |remote resource| replace:: The remote repository to use when synchronizing an existing clone.
.. |remote deps_on_server| replace:: Determine dependencies from objects located on the |chef server| instead of in the local |chef repo|.
.. |remote_file_attributes| replace:: A package at a remote location (using the `remote_file resource <https://docs.chef.io/resource_remote_file.html>`__) as a |ruby hash| of properties that modifes the properties of the |resource remote_file| resource.
.. |replace_file| replace:: Define a string that is to be used to replace the first occurrence of a file name.
.. |replace_string| replace:: Define a string that is to be used to replace all occurrences of a file name.
.. |repo_gpgcheck| replace:: Perform a |gnu pg| signature check on data in the repository.
.. |repo_mode| replace:: The layout of the local |chef repo|. Possible values: ``static``, ``everything``, or ``hosted_everything``. Use ``static`` for just roles, environments, cookbooks, and data bags. By default, ``everything`` and ``hosted_everything`` are dynamically selected depending on the server type.
.. |repository| replace:: The path to the |chef repo|.
.. |repository git_or_svn| replace:: The alias for the repository.
.. |repository application| replace:: The name of the sub-directory in which the pristine copy of an application’s source is kept.
.. |repository_cache| replace:: The name of the sub-directory in which the pristine copy of an application's source is kept.
.. |reset_nice| replace:: Attempt to reset the nice value to zero before running the transaction.
.. |resource_block_default| replace:: Default value: the ``name`` of the resource block.
.. |resource action add ifconfig| replace:: Run |ifconfig| to configure a network interface and (on some platforms) write a configuration file for that network interface.
.. |resource action add route| replace:: Add a route.
.. |resource action assemble mdadm| replace:: Assemble a previously created array into an active array.
.. |resource action cancel reboot| replace:: Cancel a reboot request.
.. |resource action checkout scm| replace:: Clone or check out the source. When a checkout is available, this provider does nothing.
.. |resource action configure_startup| replace:: Configure a service based on the value of the ``startup_type`` property.
.. |resource action create cookbook_file| replace:: Create a file. If a file already exists (but does not match), update that file to match.
.. |resource action create cron| replace:: Create an entry in a |cron| table file ("crontab"). If an entry already exists (but does not match), update that entry to match.
.. |resource action create directory| replace:: Create a directory. If a directory already exists (but does not match), update that directory to match.
.. |resource action create env| replace:: Create an environment variable. If an environment variable already exists (but does not match), update that environment variable to match.
.. |resource action create file| replace:: Create a file. If a file already exists (but does not match), update that file to match.
.. |resource action create group| replace:: Create a group. If a group already exists (but does not match), update that group to match.
.. |resource action create link| replace:: Create a link. If a link already exists (but does not match), update that link to match.
.. |resource action create mdadm| replace:: Create an array with per-device superblocks. If an array already exists (but does not match), update that array to match.
.. |resource action create remote_directory| replace:: Create a directory and/or the contents of that directory. If a directory or its contents already exist (but does not match), update that directory or its contents to match.
.. |resource action create remote_file| replace:: Synchronize a file from a remote source to the file system. If a file already exists (but does not match), update that file to match.
.. |resource action create template| replace:: Create a file. If a template already exists (but does not match), update that template to match.
.. |resource action create user| replace:: Create a user with given properties. If a user already exists (but does not match), update that user to match.
.. |resource action create registry_key| replace:: Create a registry key. If a registry key already exists (but does not match), update that registry key to match.
.. |resource action create_if_missing cookbook_file| replace:: Create a file if it does not exist.
.. |resource action create_if_missing directory| replace:: Create a directory if it does not exist.
.. |resource action create_if_missing file| replace:: Create a file only if the file does not exist. When the file exists, nothing happens.
.. |resource action create_if_missing remote_directory| replace:: Create a directory and/or the contents of that directory, but only if it does not exist.
.. |resource action create_if_missing remote_file| replace:: Create a file locally by fetching from the remote source, but only if the file does not exist.
.. |resource action create_if_missing template| replace:: Create a file only if it does not exist.
.. |resource action create_if_missing registry_key| replace:: Create a registry key if it does not exist. Also, create a registry key value if it does not exist.
.. |resource action delete cookbook_file| replace:: Delete a file.
.. |resource action delete cron| replace:: Delete an entry from a |cron| table file ("crontab").
.. |resource action delete directory| replace:: Delete a directory.
.. |resource action delete env| replace:: Delete an environment variable.
.. |resource action delete file| replace:: Delete a file.
.. |resource action delete http_request| replace:: Send a ``DELETE`` request.
.. |resource action delete ifconfig| replace:: Run |ifconfig| to disable a network interface and (on some platforms) delete that network interface's configuration file.
.. |resource action delete link| replace:: Delete a link.
.. |resource action delete registry_key| replace:: Delete the specified values for a registry key.
.. |resource action delete key registry_key| replace:: Delete the specified registry key and all of its subkeys.
.. |resource action delete remote_directory| replace:: Delete a directory, including the contents of that directory.
.. |resource action delete route| replace:: Delete a route.
.. |resource action deploy deploy| replace:: Deploy an application.
.. |resource action disable chef_handler| replace:: Disable the handler for the current |chef client| run on the current node.
.. |resource action disable ifconfig| replace:: Run |ifconfig| to disable a network interface.
.. |resource action disable mount| replace:: Remove an entry from the file systems table (fstab).
.. |resource action disable service| replace:: Disable a service.
.. |resource action enable chef_handler| replace:: Enable the handler for the current |chef client| run on the current node.
.. |resource action enable ifconfig| replace:: Run |ifconfig| to enable a network interface.
.. |resource action enable mount| replace:: Add an entry to the file systems table (fstab).
.. |resource action export scm| replace:: Export the source, excluding or removing any version control artifacts.
.. |resource action export service| replace:: Enable a service at boot.
.. |resource action force_deploy deploy| replace:: Remove any existing release of the same code version and re-deploy a new one in its place.
.. |resource action force_export scm| replace:: Export the source, excluding or removing any version control artifacts and force an export of the source that is overwriting the existing copy (if it exists).
.. |resource action get http_request| replace:: Send a ``GET`` request.
.. |resource action head http_request| replace:: Send a ``HEAD`` request.
.. |resource action install osx_profile| replace:: Install the specified configuration profile.
.. |resource action install package| replace:: Install a package. If a version is specified, install the specified version of the package.
.. |resource action lock user| replace:: Lock a user's password.
.. |resource action manage group| replace:: Manage an existing group. This action does nothing if the group does not exist.
.. |resource action manage user| replace:: Manage an existing user. This action does nothing if the user does not exist.
.. |resource action modify env| replace:: Modify an existing environment variable. This prepends the new value to the existing value, using the delimiter specified by the ``delim`` property.
.. |resource action modify group| replace:: Modify an existing group. This action raises an exception if the group does not exist.
.. |resource action modify user| replace:: Modify an existing user. This action raises an exception if the user does not exist.
.. |resource action mount mount| replace:: Mount a device.
.. |resource action nothing| replace:: Define this resource block to do nothing until notified by another resource to take action. When this resource is notified, this resource block is either run immediately or it is queued up to be run at the end of the |chef client| run.
.. |resource action nothing erlang| replace:: Prevent the |erlang| call from running.
.. |resource action nothing execute| replace:: Prevent a command from running. This action is used to specify that a command is run only when another resource notifies it.
.. |resource action nothing service| replace:: Do nothing with a service.
.. |resource action options http_request| replace:: Send an ``OPTIONS`` request.
.. |resource action post http_request| replace:: Send a ``POST`` request.
.. |resource action purge package| replace:: Purge a package. This action typically removes the configuration files as well as the package.
.. |resource action put http_request| replace:: Send a ``PUT`` request.
.. |resource action reboot action| replace:: Use to request an immediate reboot or to queue a reboot using the ``:reboot_now`` (immediate reboot) or ``:request_reboot`` (queued reboot) actions built into the |resource reboot| resource.
.. |resource action reboot now| replace:: Reboot a node so that the |chef client| may continue the installation process.
.. |resource action reconfigure package| replace:: Reconfigure a package. This action requires a response file.
.. |resource action reload ohai| replace:: Reload the |ohai| configuration on a node.
.. |resource action reload service| replace:: Reload the configuration for this service.
.. |resource action remount mount| replace:: Remount a device.
.. |resource action remove group| replace:: Remove a group.
.. |resource action remove osx_profile| replace:: Remove the specified configuration profile.
.. |resource action remove package| replace:: Remove a package.
.. |resource action remove user| replace:: Remove a user.
.. |resource action request reboot| replace:: Reboot a node at the end of a |chef client| run.
.. |resource action restart service| replace:: Restart a service.
.. |resource action rollback deploy| replace:: Roll an application back to the previous release.
.. |resource action run erlang| replace:: Run the |erlang| call.
.. |resource action run execute| replace:: Run a command.
.. |resource action run powershell_script| replace:: Run the script.
.. |resource action run ruby_block| replace:: Run a |ruby| block.
.. |resource action run script| replace:: Run a script.
.. |resource action run windows_batch| replace:: Run a batch file.
.. |resource action start service| replace:: Start a service, and keep it running until stopped or disabled.
.. |resource action stop mdadm| replace:: Stop an active array.
.. |resource action stop service| replace:: Stop a service.
.. |resource action sync scm| replace:: Update the source to the specified version, or get a new clone or checkout. This action causes a hard reset of the index and working tree, discarding any uncommitted changes.
.. |resource action touch file| replace:: Touch a file. This updates the access (atime) and file modification (mtime) times for a file.
.. |resource action uninstall package| replace:: Uninstall a package.
.. |resource action umount mount| replace:: Unmount a device.
.. |resource action unlock user| replace:: Unlock a user's password.
.. |resource action upgrade package| replace:: Install a package and/or ensure that a package is the latest version.
.. |resource action write log| replace:: Write to log.
.. |resource short_actions| replace:: The ``:nothing`` action can be used with any resource or lightweight resource.
.. |resource short_attributes| replace:: The ``ignore_failure``, ``provider``, ``retries``, ``retry_delay``, and ``supports`` properties can be used with any resource or lightweight resources.
.. |resource short_conditions| replace:: The ``not_if`` and ``only_if`` conditional executions can be used to put additional guards around certain resources so that they are only run when the condition is met.
.. |resource short_notifications| replace:: The ``notifies`` and ``subscribes`` notifications can be used with any resource.
.. |resource short_relative_paths| replace:: The ``#{ENV['HOME']}`` relative path can be used with any resource.
.. |resource short_windows_file_security| replace:: The |resource template|, |resource file|, |resource remote_file|, |resource cookbook_file|, |resource directory|, and |resource remote_directory| resources support the use of inheritance and access control lists (ACLs) within recipes.
.. |resource short_run_during_compile| replace:: Sometimes a resource needs to be run before every other resource or after all resources have been added to the resource collection.
.. |response code 200 ok| replace:: OK. The request was successful.
.. |response code 201 created| replace:: Created. The object was created.
.. |response code 400 bad request| replace:: Bad request. The contents of the request are not formatted correctly.
.. |response code 400 bad request sandbox| replace:: Bad request. The object has already been committed or one (or more) of the objects were not properly uploaded.
.. |response code 400 checksum| replace:: The contents of the file do not have the correct checksum.
.. |response code 400 unsuccessful| replace:: The request was unsuccessful.
.. |response code 401 unauthorized| replace:: Unauthorized. The user or client who made the request could not be authenticated. Verify the user/client name, and that the correct key was used to sign the request.
.. |response code 403 forbidden| replace:: Forbidden. The user who made the request is not authorized to perform the action.
.. |response code 403 unauthorized| replace:: Unauthorized. The user who made the request is not authorized to perform the action.
.. |response code 404 not found| replace:: Not found. The requested object does not exist.
.. |response code 409 conflict| replace:: Conflict. The object already exists.
.. |response code 409 unauthorized| replace:: Unauthorized. The user who made the request is not authorized to perform the action.
.. |response code 412 cookbook version| replace:: Not allowed. A set of cookbooks and/or cookbook versions could not be found that met all of the requirements of the run-list. A cookbook in the run-list may not exist. A dependency may be present for a cookbook that does not exist. A constraint on a cookbook made by a run-list, environment, or cookbook version, may not match an available cookbook version.
.. |response code 413 entity_too_large| replace:: Request entity too large. A request may not be larger than 1000000 bytes.
.. |response_file| replace:: The direct path to the file used to pre-seed a package.
.. |response_file variables| replace:: A |ruby hash| of response file variables in the form of ``{"VARIABLE" => "VALUE"}``.
.. |restart shell_command| replace:: A string that contains a shell command that can be executed to run a restart operation.
.. |retries| replace:: The number of times to catch exceptions and retry the resource.
.. |retry_delay| replace:: The retry delay (in seconds).
.. |returns| replace:: A comma-delimited list of return codes that indicate the success or failure of the command that was run remotely.
.. |return_value cmd| replace:: The return value for a command. This may be an array of accepted values. An exception is raised when the return value(s) do not match.
.. |revision| replace:: A branch, tag, or commit to be synchronized with |git|. This can be symbolic, like ``HEAD`` or it can be a source control management-specific revision identifier.
.. |rights windows security| replace:: The permissions for users and groups in a |windows| environment. For example: ``rights <permissions>, <principal>, <options>`` where ``<permissions>`` specifies the rights granted to the principal, ``<principal>`` is the group or user name, and ``<options>`` is a |ruby hash| with one (or more) advanced rights options.
.. |role chef_server| replace:: The configuration type of the |chef server|.
.. |role memcached| replace:: The name of a role. During a |chef client| run, a search is performed to find a node with the same name as this value in the same environment as the current role. If a node is found, it's IP address is used when rendering the ``memcached.yml`` file.
.. |role-name| replace:: The name of the virtual machine.
.. |role-size| replace:: The size of the virtual machine: ``ExtraSmall``, ``Small``, ``Medium``, ``Large``, or ``ExtraLarge``.
.. |rollback_on_error| replace:: Roll a resource back to a previously-deployed release if an error occurs when deploying a new release.
.. |root redis| replace:: The root directory for |redis|.
.. |route_gateway| replace:: The gateway for the route.
.. |route_device| replace:: The network interface to which the route applies.
.. |routing_metric| replace:: The routing metric for the interface.
.. |rows| replace:: The number of rows to be returned.
.. |rpm_verbosity| replace:: Set the output level: ``critical``, ``debug``, ``info`` (default), ``emergency``, ``error``, or ``warn``.
.. |ruby dsl cookbook| replace:: A version constraint for a single cookbook.
.. |ruby dsl cookbook version| replace:: A version constraint for a group of cookbooks.
.. |ruby dsl default attribute| replace:: Optional. A set of attributes to be applied to all nodes, assuming the node does not already have a value for the attribute. This is useful for setting global defaults that can then be overridden for specific nodes. If more than one role attempts to set a default value for the same attribute, the last role applied is the role to set the attribute value. When nested attributes are present, they are preserved.
.. |ruby dsl description| replace:: A description of the functionality that is covered.
.. |ruby dsl environment run list| replace:: Optional. A list of environments, each specifying a recipe or a role to be applied to that environment. This setting must specify the ``_default`` environment. If the ``_default`` environment is set to ``[]`` or ``nil``, then the run list is empty.
.. |ruby dsl name| replace:: A unique name within the organization. Each name must be made up of letters (upper- and lower-case), numbers, underscores, and hyphens: [A-Z][a-z][0-9] and [_-]. Spaces are not allowed.
.. |ruby dsl override attribute| replace:: Optional. A set of attributes to be applied to all nodes, even if the node already has a value for an attribute. This is useful for ensuring that certain attributes always have specific values. If more than one role attempts to set an override value for the same attribute, the last role applied wins. When nested attributes are present, they are preserved.
.. |ruby dsl run list| replace:: A list of recipes and/or roles to be applied and the order in which they are to be applied.
.. |ruby equal| replace:: equal to
.. |ruby greater| replace:: greater than
.. |ruby greater_optimistic| replace:: greater than or equal to; also known as "optimistically greater than", or "optimistic"
.. |ruby greater_pessimistic| replace:: approximately greater than; also known as "pessimistically greater than", or "pessimistic"
.. |ruby less| replace:: less than
.. |ruby less_or_equal| replace:: less than or equal to
.. |run-list| replace:: A comma-separated list of roles and/or recipes to be applied.
.. |run-list indicator| replace:: Show only the run-list.
.. |run_list policy| replace:: The run-list associated with a policy file.
.. |run_lock_timeout| replace:: The amount of time (in seconds) to wait for a |chef client| lock file to be deleted.
.. |runlist_items| replace:: Permanently replace the current run-list with the specified run-list items.

.. Description strings that begin with the letter S.
.. The pattern is |sxxxx| replace:: string.
..
..

.. S
..

.. |s3_url_expiry_window_size| replace:: The frequency at which unique URLs are generated. This value may be a specific amount of time, i.e. ``15m`` (fifteen minutes) or a percentage of the value of ``s3_url_ttl``, i.e. ``10%``.
.. |s3_url_ttl| replace:: The amount of time (in seconds) before connections to the server expire.
.. |salt| replace:: The salt value for a password shadow hash.
.. |sandbox_path| replace:: The location in which cookbook files are stored (temporarily) during upload.
.. |save_frequency_redis| replace:: Set the save frequency. Pattern: ``{ "seconds" => "keys", "seconds" => "keys", "seconds" => "keys" }``.
.. |script-path| replace:: A colon-separated path at which |ruby| scripts are located.
.. |search index| replace:: A search index is a full-text list of objects that are stored on the |chef server|, against which search queries can be made.
.. |search index_data_bag| replace:: A data bag is a global variable that is stored as |json| data and is accessible from a |chef server|.
.. |search index_environment| replace:: An environment is a way to map an organization's real-life workflow to what can be configured and managed when using |chef server|.
.. |search index_node| replace:: A node is any server or virtual server that is configured to be maintained by a |chef client|.
.. |search index_role| replace:: A role is a way to define certain patterns and processes that exist across nodes in an organization as belonging to a single job function.
.. |search key| replace:: A field name/description pair is available in the |json| object. Use the field name when searching for this information in the |json| object.
.. |search pattern| replace:: A search pattern is a way to fine-tune search results by returning anything that matches some type of incomplete search query.
.. |search operator| replace:: An operator can be used to ensure that certain terms are included in the results, are excluded from the results, or are not included even when other aspects of the query match.
.. |search partial| replace:: A partial search query allows a search query to be made against specific attribute keys that are stored on the |chef server|.
.. |search query syntax| replace:: A search query is comprised of two parts: the key and the search pattern.
.. |search special character| replace:: A special character can be used to fine-tune a search query and to increase the accuracy of the search results.
.. |search_index| replace:: The name of the index to be queried: ``client``, ``environment``, ``node``, ``role``, or ``DATA_BAG_NAME``.
.. |search_query| replace:: The search query used to identify a list of items on a |chef server|. This option uses the same syntax as the ``search`` sub-command.
.. |search_query ssh| replace:: The search query used to return a list of servers to be accessed using |ssh| and the specified ``SSH_COMMAND``. This option uses the same syntax as the search sub-command.
.. |secret| replace:: The encryption key that is used for values contained within a data bag item.
.. |secret_file| replace:: The path to the file that contains the encryption key.
.. |secret_config| replace:: If ``secret`` is not specified, the |chef client| looks for a secret at the path specified by the ``encrypted_data_bag_secret`` setting in the |client rb| file.
.. |see attributes| replace:: See "Properties" section below for more information about all of the properties that may be used with this resource.
.. |see file_specificity| replace:: See "File Specificity" below for more information.
.. |see providers| replace:: See "Providers" section below for more information.
.. |see syntax| replace:: See "Syntax" section above for more information.
.. |sensitive| replace:: Ensure that sensitive resource data is not logged by the |chef client|.
.. |server_aliases| replace:: An array of server aliases.
.. |server command_reconfigure| replace:: Reconfigure the |chef server|. This option reads from the |path chef server chef server rb| file and applies that configuration to the |chef server|. Any time changes are made to the |chef server rb| file, run the |chef server ctl| command with this option.
.. |server command_restart| replace:: Restart all enabled services or restart a single service.
.. |server command_start| replace:: Start all enabled services or start a single service.
.. |server command_status| replace:: View the status of all services or view the status of a single service.
.. |server command_stop| replace:: Stop all enabled services or stop a single service.
.. |server command_tail| replace:: Follow the |chef server| logs for all services or for a single service.
.. |server command_test| replace:: Execute |chef pedant|, an integration test suite for the |chef server| installation. By default, only a subset of the available test are run. Add the ``--all`` flag to run the full test suite.
.. |server command_upgrade| replace:: Use for in-place upgrades of the |chef server osc| server, version 11.0.4 (or higher). This subcommand applies the necessary SQL changes without having to back up data and installs the server from scratch. Back up your data before performing the upgrade anyway, just to ensure that it is available, should it be needed. This subcommand may only be used when the |chef server osc| server is configured for a standalone topology and it assumes that all services used by |chef server osc| are enabled.
.. |server_fqdn| replace:: The |fqdn| for the server.
.. |service_order keepalived| replace:: The order by which |keepalived| starts and stops services when transitioning from a primary server to a backup.
.. |session_expiry| replace:: Expiration time for web client sessions (in minutes).
.. |settings django_template| replace:: A |ruby hash| of additional settings that is to be made available to a template.
.. |shallow_clone| replace:: Set the clone depth to ``5``.
.. |shared_buffers postgresql| replace:: The amount of memory that is dedicated to |postgresql| for data caching.
.. |shell| replace:: The login shell.
.. |show_all_images| replace:: Show all fields for all images.
.. |show_availability_zone| replace:: Show a list of availability zones.
.. |show_local_files| replace:: Show local files instead of remote files.
.. |show_organizations| replace:: Show all organizations.
.. |showdupesfromrepos| replace:: Show duplicate packages. When false, only the newest packages are shown.
.. |signing_ca_cert| replace:: The path to where the certificate is located. This setting is generated automatically by the |chef client| and is passed to |open ssl|.
.. |signing_ca_country| replace:: The country code associated with the |ca| policy. This setting is passed by the |chef client| to |open ssl|.
.. |signing_ca_domain| replace:: The domain associated with the |ca| policy. This setting is passed by the |chef client| to |open ssl|.
.. |signing_ca_email| replace:: The email address associated with the |ca| policy. This setting is passed by the |chef client| to |open ssl|.
.. |signing_ca_group| replace:: The group associated with the |ca| policy. This setting is passed by the |chef client| to |open ssl|.
.. |signing_ca_key| replace:: The path to where the private key is located. This setting is generated automatically by the |chef client| and is passed to |open ssl|.
.. |signing_ca_location| replace:: The location associated with the |ca| policy. This setting is passed by the |chef client| to |open ssl|.
.. |signing_ca_org| replace:: The organization associated with the |ca| policy. This setting is passed by the |chef client| to |open ssl|.
.. |signing_ca_state| replace:: The state (or province) associated with the |ca| policy. This setting is passed by the |chef client| to |open ssl|.
.. |signing_ca_user| replace:: The user associated with the |ca| policy. This setting is passed by the |chef client| to |open ssl|.
.. |size disk| replace:: The size of a disk, in GB.
.. |skip_broken| replace:: Remove packages that are causing problems from the transaction.
.. |skip-dependencies| replace:: Ensure that all cookbooks to which the installed cookbook has a dependency are not installed.
.. |smtp server| replace:: The |smtp| server to which a connection is made.
.. |solo mode| replace:: Run the |chef client| in |chef solo| mode. This setting determines if the |chef client| is to attempt to communicate with the |chef server|.

.. |solr_auto_soft_commit| replace:: The maximum number of documents before a soft commit is triggered.
.. |solr_commit_interval| replace:: The frequency (in seconds) at which node objects are added to the |apache solr| search index.
.. |solr_data_path| replace:: The location in which the |apache solr| indexes are located.
.. |solr_heap_size| replace:: The amount of memory allocated to the |jvm| that is being used to run |apache solr|.
.. |solr_home_path| replace:: The path to the |apache solr| home directory.
.. |solr_ip_address| replace:: The IP address for the machine on which |apache solr| is running.
.. |solr_java_opts| replace:: A |ruby hash| of ``JAVA_OPTS`` environment variables to be set.
.. |solr_jetty_path| replace:: The path to the settings that control the |apache jetty| environment.
.. |solr_max_commit_docs| replace:: The frequency (in documents) at which node objects are added to the |apache solr| search index.
.. |solr_max_field_length| replace:: The maximum field length (in number of tokens/terms). If a field length exceeds this value, |apache solr| may not be able to complete building the index.
.. |solr_max_merge_docs| replace:: The maximum number of index segments allowed before they are merged into a single index.
.. |solr_merge_factor| replace:: The maximum number of document updates that can be stored in memory before being flushed and added to the current index segment.
.. |solr_new_size| replace:: Configure the ``-XX:NewSize`` ``JAVA_OPTS`` environment variable.
.. |solr_poll_seconds| replace:: The frequency (in seconds) at which the secondary machine polls the primary.
.. |solr_ram_buffer_size| replace:: The size (in megabytes) of the RAM buffer. When document updates exceed this amout, pending updates are flushed.
.. |solr_update_frequency_caveat| replace:: When data is committed to the |apache solr| index, all incoming updates are blocked. If the duration between updates is too short, it is possible for the rate at which updates are asked to occur to be faster than the rate at which objects can be actually committed.
.. |solr_url| replace:: The URL for the server from which the |apache solr| search engine is run.
.. |sort| replace:: The order in which search results are to be sorted.
.. |sort_reverse| replace:: Sort a list by last run time, descending.
.. |source cookbook_file| replace:: The name of the file in ``COOKBOOK_NAME/files/default`` or the path to a file located in ``COOKBOOK_NAME/files``. The path must include the file name and its extension.
.. |source file_location| replace:: The location of the source file.
.. |source file_location http_ftp_local| replace:: The location of the source file may be HTTP (``http://``), FTP (``ftp://``),  or local (``file:///``).
.. |source file_location http_ftp_local_unc| replace:: The location of the source file may be HTTP (``http://``), FTP (``ftp://``), local (``file:///``), or UNC (``\\\\host\\share\\file.tar.gz``).
.. |source resource apt_package| replace:: The direct path to a |debian dpkg| or |deb_package| package.
.. |source resource package| replace:: The path to a package in the local file system.
.. |source resource package aix| replace:: The |ibm aix| platform requires ``source`` to be a local file system path because ``installp`` does not retrieve packages using HTTP or FTP.
.. |source remote_directory| replace:: The base name of the source file (and inferred from the ``path`` property).
.. |source template| replace:: The location of a template file.
.. |source template_cookbook| replace:: By default, the |chef client| looks for a template file in the ``/templates`` directory of a cookbook.
.. |source template_local| replace:: When the ``local`` property is set to ``true``, use to specify the path to a template on the local node.
.. |source-image| replace:: The name of the disk image to be used to create the virtual machine.
.. |speed interface| replace:: The speed for the interface. Possible values: ``auto``, ``100m``, ``1g``, ``10g``, ``40g``, ``56g``, or ``100g``.
.. |splay| replace:: A random number between zero and ``splay`` that is added to ``interval``. Use splay to help balance the load on the |chef server| by ensuring that many |chef client| runs are not occuring at the same interval.
.. |splay org_create| replace:: A number (in milliseconds) to add to ``create_wait_ms``.
.. |ssh_command| replace:: The command to be run against the results of a search query.
.. |ssh_gateway| replace:: The |ssh| tunnel or gateway that is used to run a bootstrap action on a machine that is not accessible from the workstation.
.. |ssh_gateway_identity| replace:: The private key for the SSH gateway.
.. |ssh_key amazon_ec2| replace:: The |ssh| key for the |amazon ec2| environment.
.. |ssh_key eucalyptus| replace:: The |ssh| key for the |eucalyptus| environment.
.. |ssh_key openstack| replace:: The |ssh| key for the |openstack| environment.
.. |ssh_key rackspace| replace:: The name of an existing SSH keypair. The public key is injected into the node.
.. |ssh_password| replace:: The |ssh| password. This can be used to pass the password directly on the command line. If this option is not specified (and a password is required) |knife| prompts for the password.
.. |ssh_port| replace:: The |ssh| port.
.. |ssh_user| replace:: The |ssh| user name.
.. |ssh_wrapper resource| replace:: The path to the wrapper script used when running |ssh| with |git|. The ``GIT_SSH`` environment variable is set to this.
.. |ssl_ca_cert_yum| replace:: The path to the directory in which the certificate authorities |yum| is to use to verify |ssl| certificates are located.
.. |ssl_ca_file| replace:: The file in which the |open ssl| key is saved. This setting is generated automatically by the |chef client| and most users do not need to modify it.
.. |ssl_ca_path| replace:: The path to where the |open ssl| key is located. This setting is generated automatically by the |chef client| and most users do not need to modify it.
.. |ssl_certificate| replace:: The |ssl| certificate used to verify communication over HTTPS.
.. |ssl_certificate key| replace:: The certificate key used for |ssl| communication.
.. |ssl_certificate length_months| replace:: The number of months for which a certificate is valid.
.. |ssl_certificate verify| replace:: Verify |ssl| certificates.
.. |ssl_check_cert_permissions_yum| replace:: Check permissions on both local and remote paths for certificates.
.. |ssl_ciphers| replace:: The list of supported cipher suites that are used to establish a secure connection.
.. |ssl_client_cert| replace:: The |open ssl| |x509| certificate used for mutual certificate validation. This setting is only necessary when mutual certificate validation is configured on the |chef server|.
.. |ssl_client_cert_yum| replace:: The path to the |ssl| client certificate that |yum| is to use to connect to repositories and/or remote sites.
.. |ssl_client_key| replace:: The |open ssl| |x509| key used for mutual certificate validation. This setting is only necessary when mutual certificate validation is configured on the |chef server|.
.. |ssl_client_key_yum| replace:: The path of the location in which the |ssl| client key used by |yum| is located.
.. |ssl_url_or_uri| replace:: The URL or URI for the location at which the |ssl| certificate is located.

.. ssl_verify_mode is also in the server_security.html topic.
.. |ssl_verify_mode| replace:: Set the verify mode for HTTPS requests.
.. |ssl_verify_mode_verify_api_cert| replace:: Verify the |ssl| certificate on the |chef server|. When ``true``, the |chef client| always verifies the |ssl| certificate. When ``false``, the |chef client| uses the value of ``ssl_verify_mode`` to determine if the |ssl| certificate requires verification.
.. |ssl_verify_mode_verify_none| replace:: Use ``:verify_none`` to do no validation of |ssl| certificates.
.. |ssl_verify_mode_verify_peer| replace:: Use ``:verify_peer`` to do validation of all |ssl| certificates, including the |chef server| connections, S3 connections, and any HTTPS |resource remote_file| resource URLs used in the |chef client| run.
.. |ssl_verify_bootstrap_none| replace:: Use ``none`` to do no validation of |ssl| certificates.
.. |ssl_verify_bootstrap_peer| replace:: Use ``peer`` to do validation of all |ssl| certificates, including the |chef server| connections, S3 connections, and any HTTPS |resource remote_file| resource URLs used in the |chef client| run.
.. |start| replace:: The row at which return results begin.
.. |static_files| replace:: A |ruby hash| that maps URLs to files.
.. |stdin chef_apply| replace:: Execute a resource using standard input.
.. |storage account| replace:: The name of the storage account used with the hosted service.
.. |strategy| replace:: The deploy strategy: ``timestamped_deploy`` or ``deploy_revision`` (default). Use ``deploy_revision`` to ensure that the name of a release sub-directory is based on a revision identifier and puts deployed components under the destination location that is owned by the user who runs the application. For users of |git|, this is the familiar SHA checksum. For users of |svn|, it is the integer revision number. If a name other than a revision identifier is provided---branch names, tags, and so on---the |chef client| ignores the alternate names and looks up the revision identifier and uses it to name the release sub-directory. Use ``timestamped_deploy`` to name a release sub-directory with a timestamp in the form of YYYYMMDDHHMMSS. For example: /my/deploy/dir/releases/20121120162342.
.. |subnet| replace:: The |amazon vpc| instance in which a node is to be created.
.. |subscribes| replace:: Specify that this resource is to listen to another resource, and then take action when that resource's state changes.
.. |subscribes timers| replace:: The ``subscribes`` property uses the same timers as the ``notifies`` property.
.. |sudo bootstrap| replace:: Execute a bootstrap operation with |sudo cmd|.
.. |supports chef_handler| replace:: The type of handler.
.. |supports mount| replace:: A |ruby hash| of options for supported mount features.
.. |supports resources| replace:: A hash of options that contains hints about the capabilities of a resource. The |chef client| may use these hints to help identify the correct provider.
.. |supports service| replace:: A list of properties that controls how the |chef client| is to attempt to manage a service: ``:restart``, ``:reload``, ``:status``. For ``:restart``, the init script or other service provider can use a restart command; if ``:restart`` is not specified, the |chef client| attempts to stop and then start a service. For ``:reload``, the init script or other service provider can use a reload command. For ``:status``, the init script or other service provider can use a status command to determine if the service is running; if ``:status`` is not specified, the |chef client| attempts to match the ``service_name`` against the process table as a regular expression, unless a pattern is specified as a parameter property.
.. |supports user| replace:: A Mash where keys represent features and values are booleans that indicate if that feature is supported.
.. |svlogd_num| replace:: The number of |svlogd| log files to retain.
.. |svlogd_size| replace:: The size (in bytes) of the |svlogd| log file.
.. |svn_arguments resource| replace:: The extra arguments that are passed to the |svn| command.
.. |svn_info_args resource| replace:: Use when the ``svn info`` command is used by the |chef client| and arguments need to be passed. The ``svn_arguments`` command does not work when the ``svn info`` command is used.
.. |svn_password resource| replace:: The password for a user that has access to the |svn| repository.
.. |svn_username resource| replace:: The user name for a user that has access to the |svn| repository.
.. |symlink_before_migrate| replace:: Map files in a shared directory to the current release directory. The symbolic links for these files are created before any migration is run. Use parentheses ``( )`` around curly braces ``{ }`` to ensure the contents within the curly braces are interpreted as a block and not as an empty |ruby hash|. Set to ``symlink_before_migrate({})`` to prevent the creation of symbolic links.
.. |symlinks| replace:: Map files in a shared directory to their paths in the current release directory. This property runs after ``create_dirs_before_symlink`` and ``purge_before_symlink``.
.. |syntax_check_cache_path| replace:: All files in a cookbook must contain valid |ruby| syntax. Use this setting to specify the location in which |knife| caches information about files that have been checked for valid |ruby| syntax.
.. |syslog_device| replace:: The path of the location to which syslog messages are sent.
.. |syslog_facility| replace:: The facility name for syslog messages.
.. |syslog_ident| replace:: The program name for syslog messages.
.. |system group| replace:: Show if a group belongs to a system group. Set to ``true`` if the group belongs to a system group.
.. |system user| replace:: Create a system user. This property may be used with ``useradd`` as the provider to create a system user which passes the ``-r`` flag to ``useradd``.



.. Description strings that begin with the letter T.
.. The pattern is |txxxx| replace:: string.
..
..

.. T
..

.. |tags| replace:: The tags for this server.
.. |tags list| replace:: A list of tags that are to be displayed in the output.
.. |target_interface| replace:: The IP address that is to be assigned to the network interface.
.. |target_address| replace:: The IP address of the target route.
.. |tcp_ports| replace:: A comma-separated list of local and public |tcp| ports that are to be opened. For example: ``80:80,433:5000``.
.. |tcp_tests| replace:: Specify that |ssh| be available using a |tcp| check directory in port 22.
.. |template bootstrap| replace:: The bootstrap template to use. This may be the name of a bootstrap template---``chef-full``, for example---or it may be the full path to an |erb| template that defines a custom bootstrap.
.. |template context_file| replace:: The name of a template to use to create the context file.
.. |template database_yml| replace:: The name of a template to use to create the ``database.yml`` file.
.. |throttle| replace:: Enable bandwidth throttling for downloads. When set to ``0``, bandwidth throttling is disabled. When set to an integer, along with ``k``, ``M``, or ``G``, represents the bandwidth value. For example: ``6.5k`` represents 6.5 kilobytes per second and ``4M`` represents 4 megabytes per second. Use a ``%`` to assign an integer as a percentage of total bandwidth. For example: ``80%`` uses 80% of the total available bandwidth.
.. |thumbprint| replace:: The thumbprint of the |ssl| certificate.
.. |time cron| replace:: A time interval. Possible values: ``:annually``, ``:daily``, ``:hourly``, ``:midnight``, ``:monthly``, ``:reboot``, ``:weekly``, or ``:yearly``.
.. |time reports_end| replace:: Find runs with an end time less than or equal to the specified date. This option must be used in conjunction with ``--starttime`` and may define up to a 90-day time period.
.. |time reports_start| replace:: Find runs with a start time greater than or equal to the specified date. This option must be used in conjunction with ``--endtime`` and may define up to a 90-day time period.
.. |timestamp reports_unix| replace:: Show start and end times as |unix| timestamps. This option may be used when the ``--endtime`` and ``--starttime`` options are used.
.. |timeout| replace:: The amount of time (in seconds) to wait before timing out.
.. |timeout ms| replace:: The amount of time (in milliseconds) to wait before timing out.
.. |timeout authz| replace:: The amount of time (in milliseconds) to wait for a connection to be established.
.. |timeout bifrost| replace:: The amount of time (in seconds) before a request to the |service bifrost| service times out.
.. |timeout command| replace:: The amount of time (in seconds) a command is to wait before timing out.
.. |timeout connection| replace:: The amount of time (in seconds) to wait before a connection times out.
.. |timeout depsolver| replace:: The amount of time (in milliseconds) to wait for cookbook dependency problems to be solved.
.. |timeout org_create| replace:: The amount of time (in milliseconds) to wait before creating an organization.
.. |timeout os_process| replace:: The amount of time (in milliseconds) before an external process times out.
.. |timeout push jobs| replace:: The maximum amount of time (in seconds) by which a job must complete, before it is stopped.
.. |timeout reboot| replace:: The amount of time (in seconds) a command is to wait before proceeding with a reboot.
.. |timeout redis| replace:: The amount of time (in seconds) a client may be idle before timeout.
.. |timeout rest| replace:: The time (in seconds) after which an HTTP REST request is to time out.
.. |timeout scm| replace:: The amount of time (in seconds) to wait for a command to execute before timing out.
.. |timeout scm_value_git| replace:: When this property is specified using the |resource deploy| resource, the value of the ``timeout`` property is passed from the |resource deploy| resource to the |resource scm_git| resource.
.. |timeout scm_value_deploy| replace:: When specified, this value is passed from the |resource deploy| resource to the |resource scm_git| or |resource scm_subversion| resources.
.. |timeout scm_value_subversion| replace:: When this property is specified using the |resource deploy| resource, the value of the ``timeout`` property is passed from the |resource deploy| resource to the |resource scm_subversion| resource.
.. |timeout smtp_connect| replace:: The amount of time (in seconds) to wait for a connection to an |smtp| server.
.. |timeout worker| replace:: The amount of time (in seconds) that a worker can be silent before it is killed and restarted.
.. |timeout auth_windows| replace:: The amount of time (in minutes) to wait for authentication to succeed.
.. |timeout worker_process| replace:: The amount of time (in seconds) before a worker process times out.
.. |to resource link| replace:: The actual file to which the link is to be created.
.. |tolerant| replace:: Be tolerant of errors that may occur on the command line.
.. |trace functions_on_server| replace:: Execute trace functions by the server.
.. |tree| replace:: Show dependencies in a visual tree structure (including duplicates, if they exist).
.. |trust_auth_cidr_addresses| replace:: Use for clear-text passwords.
.. |tsflags| replace:: A comma- or space-separated list of transaction flags to be passed to the transaction set.
.. |type module| replace:: The module type.
.. |type package_11-16_string| replace:: A string that specifies the type of package.
.. |type package| replace:: A symbol that specifies the type of package.


.. Description strings that begin with the letter U.
.. The pattern is |uxxxx| replace:: string.
..
..

.. U
..

.. |udp_ports| replace:: A comma-separated list of local and public |udp| ports that are to be opened. For example: ``80:80,433:5000``.
.. |umask| replace:: The file mode creation mask, or umask.
.. |uri repository| replace:: The URI for the repository.
.. |uri repository_git| replace:: The URI for the |git| repository.
.. |uri repository_svn| replace:: The URI for the |svn| repository.
.. |url_bugtracker| replace:: The URL at which bugs are filed.
.. |url chef_server| replace:: The URL for the |chef server|.
.. |url chef_server_base| replace:: The base URL to which the service is to return links to API resources. Use ``:host_header`` to ensure the URL is derived from the host header of the incoming HTTP request.
.. |url external_bookshelf| replace:: The base URL to which the service is to return links to API resources. Use ``:host_header`` to ensure the URL is derived from the host header of the incoming HTTP request.
.. |url http_request| replace:: The URL to which an HTTP request is sent.
.. |url cookbook_issues| replace:: The URL for the location in which a cookbook's issue tracking is maintained. This setting is also used by |supermarket|.
.. |url cookbook_source| replace:: The URL for the location in which a cookbook's source code is maintained. This setting is also used by |supermarket|.
.. |url key_download| replace:: The URL from which a key is downloaded.
.. |url key_validation| replace:: The URL for the validation key.
.. |url package_download| replace:: The URL from which a package is downloaded.
.. |url proxy_server| replace:: The URL for the proxy server.
.. |url secret_amazon_s3| replace:: The |amazon s3| URL at which an encrypted data bag secret is located.
.. |url supermarket| replace:: The URL at which the |supermarket| is located.
.. |use bundler| replace:: Run ``bundler``. If ``false``, |bundler| is never used. This attribute defaults to ``true`` when a |gem| includes |bundler|.
.. |use bundler_option_deployment| replace:: Run |bundler| with the ``--deployment`` option. This attribute defaults to ``true`` when a |gemfilelock| is present.
.. |use cidr| replace:: Use with |cidr| notation.
.. |use conditional_get| replace:: Enable conditional HTTP requests by using a conditional ``GET`` (with the |if_modified_since| header) or an opaque identifier (|etag|). To use |if_modified_since| headers, ``use_last_modified`` must also be set to ``true``. To use |etag| headers, ``use_etag`` must also be set to ``true``.
.. |use current_branch| replace:: Ensure that the current branch is used.
.. |use custom_log_script| replace:: Specify that a service has a custom logging script.
.. |use etag| replace:: Enable |etag| headers. Set to ``false`` to disable |etag| headers. To use this setting, ``use_conditional_get`` must also be set to ``true``.
.. |use file_overwrite| replace:: Overwrite a file when it is different.
.. |use ha| replace:: Run the |chef server| in a high availability topology.
.. |use iam_profile| replace:: Use the |amazon iam| profile that is assigned to the current machine.
.. |use interface| replace:: Activate the interface.
.. |use keepalive| replace:: Enable HTTP keepalive (if available).
.. |use last_modified| replace:: Enable |if_modified_since| headers. Set to ``false`` to disable |if_modified_since| headers. To use this setting, ``use_conditional_get`` must also be set to ``true``.
.. |use nagle| replace:: Enable the |nagle| buffering algorithm.
.. |use null_character| replace:: Show a ``NULL`` character (``\0``) instead of white space as the separator.
.. |use public_ip_address| replace:: Associate a public IP address to an |amazon vpc| instance.
.. |use repo| replace:: Enable a repository.
.. |use sendfile| replace:: Copy data between file descriptors when ``sendfile()`` is used.
.. |use ssl| replace:: Enable |ssl|.
.. |use sudo_password| replace:: Perform a bootstrap operation with |sudo cmd|; specify the password with the ``-P`` (or ``--ssh-password``) option.
.. |use tcpip| replace:: Enable |tcpip| transactions.
.. |use trailing_slash| replace:: Show directories with trailing slashes (/).
.. |user bifrost| replace:: The user with permission to publish data.
.. |user checked_out_code| replace:: The system user that is responsible for the checked-out code.
.. |user chef_client| replace:: The user that owns a process. This is required when starting any executable as a daemon.
.. |user command| replace:: The user name or user ID that should be changed before running a command.
.. |user data_file_ec2| replace:: The |amazon ec2| user data file used during instance provisioning.
.. |user homedir| replace:: Manage a user's home directory.
.. |user homedir_create| replace:: With the ``:create`` action, a user's home directory is created based on ``HOME_DIR``. If the home directory is missing, it is created unless ``CREATE_HOME`` in ``/etc/login.defs`` is set to ``no``. When created, a skeleton set of files and sub-directories is also created in the home directory.
.. |user homedir_modify| replace:: With the ``:modify`` action, a user's home directory is moved to ``HOME_DIR``. If the home directory is missing, it is created unless ``CREATE_HOME`` in ``/etc/login.defs`` is set to ``no``. The contents of the user's home directory are moved to the new location.
.. |user knife| replace:: The user name used by |knife| to sign requests made by the |chef api client| to the |chef server|. Authentication fails if the user name does not match the private key.
.. |user name_or_id| replace:: A user name or identifier that must be changed before running a command.
.. |user ocid| replace:: The user with permission to write to ``sql_database``.
.. |user ocid_admins| replace:: An array of |chef server| user names who may add applications to the identity service.
.. |user uid| replace:: The numeric user identifier.
.. |user windows_service_run_as| replace:: The user under which a |windows| service runs.

.. Description strings that begin with the letter V.
.. The pattern is |vxxxx| replace:: string.
..
..

.. V
..

.. |validation_client_name| replace:: The name of the |chef validator| key that is used by the |chef client| to access the |chef server| during the initial |chef client| run.
.. |validation_key| replace:: The location of the file that contains the key used when a |chef client| is registered with a |chef server|. A validation key is signed using the ``validation_client_name`` for authentication.
.. |value resource directory| replace:: The value with which ``key_name`` is set.
.. |values resource registry_key| replace:: An array of hashes, where each |ruby hash| contains the values that are to be set under a registry key. Each |ruby hash| must contain ``:name``, ``:type``, and ``:data`` (and must contain no other key values).
.. |values resource registry_key types| replace:: ``:type`` represents the values available for registry keys in |windows|. Use ``:binary`` for REG_BINARY, ``:string`` for REG_SZ, ``:multi_string`` for REG_MULTI_SZ, ``:expand_string`` for REG_EXPAND_SZ, ``:dword`` for REG_DWORD, ``:dword_big_endian`` for REG_DWORD_BIG_ENDIAN, or ``:qword`` for REG_QWORD.
.. |values resource registry_key multi_string| replace:: ``:multi_string`` must be an array, even if there is only a single string.
.. |variables passed_to_template| replace:: A |ruby hash| of variables that are passed into a |ruby| template file.
.. |vcpus| replace:: The number of virtual CPUs that are available per virtual machine.
.. |verbose| replace:: Set for more verbose outputs. Use ``-VV`` for maximum verbosity.
.. |verbose knife_bootstrap| replace:: Run the initial |chef client| run at the ``debug`` log-level (e.g. ``chef-client -l debug``).
.. |verbose_logging| replace:: Set the log level. Options: ``true``, ``nil``, and ``false``. When this is set to ``false``, notifications about individual resources being processed are suppressed (and are output at the ``:info`` logging level). Setting this to ``false`` can be useful when a |chef client| is run as a daemon.
.. |verify_file| replace:: A block or a string that returns ``true`` or ``false``. A string, when ``true`` is executed as a system command.
.. |version chef| replace:: The version of the |chef client|.
.. |version chef_max| replace:: The maximum version of the |chef client| that is allowed to access the |chef server| via the |api chef server|.
.. |version chef_min| replace:: The minimum version of the |chef client| that is allowed to access the |chef server| via the |api chef server|.
.. |version chef_server| replace:: The version of the |chef server|.
.. |version ohai| replace:: The version of |ohai|.
.. |version cookbook| replace:: The current version of a cookbook. Version numbers always follow a simple three-number version sequence.
.. |version cookbook_download| replace:: The version of a cookbook to download.
.. |version package| replace:: The version of a package to be installed or upgraded.
.. |version package_version_assumed| replace:: The version of a package to be installed or upgraded. If a version is not specified, the latest version is assumed.
.. |version postgresql| replace:: The (currently) hardcoded version of |postgresql|.
.. |version push jobs| replace:: The version of |push jobs|.
.. |version protocols_ssl| replace:: The |ssl| protocol versions that are enabled.
.. |versioned_cookbooks| replace:: Append cookbook versions to cookbooks. Set to ``false`` to hide cookbook versions: ``cookbooks/apache``. Set to ``true`` to show cookbook versions: ``cookbooks/apache-1.0.0`` and/or ``cookbooks/apache-1.0.1``. When this setting is ``true``, |subcommand knife download| downloads ALL cookbook versions, which can be useful if a full-fidelity backup of data on the |chef server| is required.
.. |vlan tag_array| replace:: An array of VLANs that carry traffic on a trunk interface.
.. |vlan tagged| replace:: Specify that a port is in access or trunk mode.
.. |vlan untagged| replace:: The native VLAN on an interface.
.. |vrrp_instance_advert| replace:: The frequency (in seconds) at which the primary |vrrp| server is to advertise.
.. |vrrp_instance_interface| replace:: The interface over which |vrrp| traffic is sent.
.. |vrrp_instance_ipaddress| replace:: The virtual IP address to be managed.
.. |vrrp_instance_ipaddress_device| replace:: The device to which the virtual IP address is added.
.. |vrrp_instance_nopreempt| replace:: Specify that a lower priority machine maintains the master role, even if a higher priority machine is available.
.. |vrrp_instance_password| replace:: The secret key for |vrrp| pairs.
.. |vrrp_instance_prempt_delay| replace:: The ``prempt_delay`` value for the |vrrp| instance.
.. |vrrp_instance_priority| replace:: The priority for this server.
.. |vrrp_instance_state| replace:: The state of the |vrrp| server.
.. |vrrp_instance_virtual_router_id| replace:: The virtual router identifier used by the |keepalived| pair.

.. |vrrp_unicast_bind| replace:: The unicast cluster IP address to which |keepalived| binds.
.. |vrrp_unicast_peer| replace:: The unicast cluster IP address used by |keepalived| to talk to its peer.




.. Description strings that begin with the letter W.
.. The pattern is |wxxxx| replace:: string.
..
..

.. W
..

.. |warning_condition| replace:: A string that is passed to the command using the ``-w`` flag.
.. |watchdog_timeout| replace:: The maximum amount of time (in seconds) available to the |chef client| run when the |chef client| is run as a service on the |windows| platform. If the |chef client| run does not complete within the specified timeframe, the |chef client| run is terminated.
.. |web_ui_admin_default_password| replace:: The default password for the |chef server| web user interface. This password should be changed immediately after logging in for the first time.
.. |web_ui_admin_user_name| replace:: The default user name for the |chef server| web user interface.
.. |web_ui_key| replace:: The path to where the key used by the |chef server| web user interface is located.
.. |webui validation_client_name| replace:: The name of the |chef validator|.
.. |webapp_template| replace:: The template used to render the virtual host configuration file.
.. |weekday cron| replace:: The day of the week on which this entry is to run (0 - 6), where Sunday = 0.
.. |whyrun_mode| replace:: Run the executable in |whyrun| mode, which is a type of |chef client| run that does everything except modify the system. Use |whyrun| mode to understand why the |chef client| makes the decisions that it makes and to learn more about the current and proposed state of the system.
.. |whitelist attribute_automatic| replace:: A |ruby hash| that whitelists ``automatic`` attributes, preventing non-whitelisted attributes from being saved.
.. |whitelist attribute_default| replace:: A |ruby hash| that whitelists ``default`` attributes, preventing non-whitelisted attributes from being saved.
.. |whitelist attribute_none| replace:: If the |ruby hash| is empty, no attributes are saved.
.. |whitelist attribute_normal| replace:: A |ruby hash| that whitelists ``normal`` attributes, preventing non-whitelisted attributes from being saved.
.. |whitelist attribute_override| replace:: A |ruby hash| that whitelists ``override`` attributes, preventing non-whitelisted attributes from being saved.
.. |windows group_identifier| replace:: A string or ID that identifies the group owner by group name, including fully qualified group names such as ``domain\group`` or ``group@domain``. If this value is not specified, existing groups remain unchanged and new group assignments use the default ``POSIX`` group (if available).
.. |windows registry| replace:: The |windows| registry is a database that stores configuration information for machines that run |windows|. The registry stores information about the system hardware, installed programs, and other settings, including for each user of the computer.
.. |windows service_type_automatic| replace:: This action is equivalent to an ``Automatic`` startup type on the |windows| platform.
.. |windows service_type_disabled| replace:: This action is equivalent to a ``Disabled`` startup type on the |windows| platform.
.. |winrm_basic| replace:: Set this value to ``true`` for development and testing purposes. The ``knife windows`` subcommand supports |kerberos| and |windows basic| authentication schemes.
.. |winrm_allow_unencrypted| replace:: Set this value to ``true`` for development and testing purposes.
.. |winrm_auth_protocol| replace:: The authentication protocol to be used during |windows remote management| communication.
.. |winrm_max_memory_per_shell_mb| replace:: The |chef client| and |ohai| typically require more memory than the default setting allows. Increase this value to ``300MB``. Only required on |windows 2008 server r2 standard| and older. The default in |windows 2012| was increased to ``1024MB``.
.. |winrm_max_timeouts| replace:: A bootstrap command can take longer than allowed by the default setting. Increase this value to ``1800000`` (30 minutes).
.. |winrm_password| replace:: The |windows remote management| password.
.. |winrm_port| replace:: The |windows remote management| port.
.. |winrm_port_knife| replace:: The TCP port on the remote system to which |subcommand knife windows| commands using |windows remote management| are to be made.
.. |winrm_session_timeout| replace:: The amount of time (in minutes) for the maximum length of a |windows remote management| session.
.. |winrm_ssl_verify_mode| replace:: The peer verification mode that is used during |windows remote management| communication.
.. |winrm_transport| replace:: The |windows remote management| transport type.
.. |winrm_user| replace:: The |windows remote management| user name.
.. |with_uri| replace:: Show the corresponding URIs.
.. |work_mem| replace:: The size (in megabytes) of allowed in-memory sorting.
.. |worker_connections| replace:: The maximum number of simultaneous clients.
.. |worker_max_keepalive| replace:: The amount of time (in seconds) to wait for requests on a |keepalived| connection.
.. |worker_processes| replace:: The number of allowed worker processes.
.. |worker_processes certificates| replace:: The number of certificates for each allowed worker process.
.. |worker_processes depsolver| replace:: The number of |ruby| processes for which cookbook dependency problems are unsolved.



.. Description strings that begin with the letter X.
.. The pattern is |xxxxx| replace:: string.
..
..

.. X
..

.. |x_forwarded_proto| replace:: The protocol used to connect to the server. Possible values: ``http`` and ``https``.




.. Description strings that begin with the letter Y.
.. The pattern is |yxxxx| replace:: string.
..
..

.. Y
..

.. |yes| replace:: Respond to all confirmation prompts with "Yes". |knife| is not to ask for confirmation.
.. |yum_lock_timeout| replace:: The amount of time (in seconds) after which a |yum| lock request is to time out.



.. Description strings that begin with the letter Z.
.. The pattern is |zxxxx| replace:: string.
..
..

.. Z
..

.. |zenoss zenpack desc| replace:: A |zenoss zenpack| is used to add or override functionality within the |zenoss| platform.
.. |zone google| replace:: The |google compute engine| zone in which a disk is located.

