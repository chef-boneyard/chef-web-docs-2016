.. Description strings that begin with the letter A.
.. The pattern is |axxxx| replace:: string.
.. 
.. 

.. A
.. 

.. |accept_license| replace:: Indicates that an end-user license agreement will be accepted automatically.
.. |active_rehashing| replace:: Use to enable active rehashing.
.. |add_formatter| replace:: Use to specify a 3rd-party formatter.
.. |additional_remotes| replace:: An array of additional remotes that are added to the |git| repository configuration.
.. |admin client| replace:: Indicates that a client will be created as an admin client. This is required when users of the open source |chef server| need to access the |api chef server| as an administrator.
.. |after| replace:: Use this to add the run list item after the specified run list item.
.. |after_restart| replace:: A block of code or a path to a file that contains code that is run after restarting.
.. |all| replace:: Displays a node in the |chef editor|. By default, attributes that are default, override, or automatic are not shown.
.. |all cookbooks| replace:: Indicates that all cookbooks will be uploaded.
.. |all cookbooks delete| replace:: Indicates that a cookbook and every version of that cookbook will be deleted.
.. |all cookbooks generate| replace::  Indicates that metadata should be generated for all cookbooks, and not just for a specified cookbook.
.. |all cookbooks return| replace:: Indicates that all available versions of each cookbook will be returned.
.. |all cookbooks test| replace:: Indicates that all cookbooks will be tested.
.. |all data bags| replace:: Indicates that all data bags found at the specified path will be uploaded.
.. |all environments| replace:: Indicates that all environments found at the specified path will be uploaded.
.. |allow_downgrade| replace:: |resource yum_package| resource only. Indicates that |yum| can downgrade a package to satisfy requested version requirements.
.. |alwaysprompt| replace:: Indicates whether |yum| will prompt for confirmation when the list of packages to be installed exactly matches the list of packages given from the command line.
.. |amqp_host| replace:: The IP address for the host to which a connection is made.
.. |amqp_pass| replace:: The password for the ``amqp_user``.
.. |amqp_port| replace:: The port number for the host to which a connection is made.
.. |amqp_user| replace:: A user name with permission to access the host.
.. |amqp_vhost| replace:: The virtual host name.
.. |amqp_consumer_id| replace:: The identifier for the consumer that will handle messages.
.. |api chef server clients| replace:: The ``/clients`` endpoint is used to manage an |chef api client| list and their associated RSA public key-pairs.
.. |api client description| replace:: An |chef api client| is any machine that has permission to use the |api chef server| to communicate with the |chef server|. An |chef api client| is typically a node (on which the |chef client| runs) or a workstation (on which |knife| runs), but can also be any other machine configured to use the |api chef server|.
.. |api eucalyptus_endpoint| replace:: The API endpoint used with the |eucalyptus| environment.
.. |api openstack_endpoint| replace:: The API endpoint used with the |openstack| environment.
.. |append_group| replace:: Use to specify how members should be appended and/or removed from a group. When ``true``, ``members`` will be appended and ``excluded_members`` will be removed. When ``false``, group members will be reset to the value of the ``members`` attribute.
.. |appendfsync| replace:: Indicates the frequency at which the operating system will write data on-disk, instead of waiting for more data. Possible values: ``no`` (don't fsync, let operating system flush data), ``always`` (fsync after every write to the append-only log file), and ``everysec`` (fsync only once time per second).
.. |appendonly| replace:: Indicates whether data is dumped asynchronously on-disk or to an append-only log file.
.. |appendonly_min_size| replace:: The minimum size of the append only file. Only files larger than this value will be rewritten.
.. |appendonly_percent| replace:: The size of the current append only file, as compared to the base size. The append only file is rewritten when the current file exceeds the base size by this value.
.. |application_pool app| replace:: The application pool to which an application belongs.
.. |application_pool site| replace:: The application pool to which a site belongs.
.. |application_port| replace:: The port on which the application server will run. 
.. |application_server_role| replace:: The name of a role for an application server. During a |chef client| run, a search will be performed to find application servers.
.. |architecture package| replace:: The architecture of the package that will be installed or upgraded. (This value can also be passed as part of the package name.)
.. |architecture registry_key| replace:: The architecture of the node for which keys will be created or deleted. Possible values: ``:x86`` (for nodes with a 32-bit registry), ``:x86_64`` (for nodes with a 64-bit registry), and ``:machine`` (to have the |chef client| determine the architecture during the |chef client| run).
.. |architecture windows_process| replace:: The architecture of the process under which a script is executed. Possible values: ``:x86`` (for 32-bit processes) and ``:x86_64`` (for 64-bit processes). If these values are not provided in a recipe, the |chef client| will default to the correct value for the architecture, as determined by |ohai|. An exception will be raised when anything other than ``:x86`` is specified for a 32-bit process.
.. |artifact_id| replace:: The identifier for an artifact. If this value is not specified, the name of the resource will be used as the identifier.
.. |architecture registry_key machine| replace:: In order to read or write 32-bit registry keys on 64-bit machines running |windows|, the ``architecture`` attribute must be set to ``:i386``. The ``:x86_64`` value can be used to force writing to a 64-bit registry location, but this value is less useful than the default (``:machine``) because the |chef client| will return an exception if ``:x86_64`` is used and the machine turns out to be a 32-bit machine (whereas with ``:machine``, the |chef client| will be able to access the registry key on the 32-bit machine).
.. |arguments windows_autorun| replace:: The arguments for a program.
.. |arguments chef_handler| replace:: An array of arguments that are passed to the initializer for the handler class.
.. |arguments windows_shortcut| replace:: The command-line arguments associate with a shortcut.
.. |assume_yes| replace:: Indicates whether |yum| will prompt for confirmation of critical actions.
.. |atomic_update| replace:: Indicates whether atomic file updates are used on a per-resource basis. Set to ``true`` for atomic file updates. Set to ``false`` for non-atomic file updates. (This setting overrides ``file_atomic_update``, which is a global setting found in the |client rb| file.)
.. |attribute_show| replace:: The attribute (or attributes) to show.
.. |attribute python_install_method| replace:: The method used to install |python|.
.. |attribute ssh| replace:: The attribute that is used when opening the |ssh| connection.
.. |attribute_type automatic| replace:: An ``automatic`` attribute contains data that is identified by |ohai| at the beginning of every |chef client| run. An ``automatic`` attribute cannot be modified and always has the highest attribute precedence.
.. |attribute_type default| replace:: A ``default`` attribute is automatically reset at the start of every |chef client| run and has the lowest attribute precedence. A cookbook should be authored to use ``default`` attributes as often as possible.
.. |attribute_type force_default| replace:: A ``force_default`` attribute is used to ensure that an attribute defined in a cookbook (by an attribute file or by a recipe) takes precedence over a ``default`` attribute set by a role or an environment.
.. |attribute_type force_override| replace:: A ``force_override`` attribute is used to ensure that an attribute defined in a cookbook (by an attribute file or by a recipe) takes precedence over an ``override`` attribute set by a role or an environment.
.. |attribute_type normal| replace:: A ``normal`` attribute is a setting that persists on the target system and is never reset during a |chef client| run. A ``normal`` attribute has a higher attribute precedence than a ``default`` attribute.
.. |attribute_type override| replace:: An ``override`` attribute is automatically reset at the start of every |chef client| run and has a higher attribute precedence than ``default``, ``force_default``, and ``normal`` attributes. An ``override`` attribute is most often specified in a recipe, but can be specified in an attribute file, for a role, and/or for an environment. A cookbook should be authored so that it uses ``override`` attributes only when required.
.. |authorized_openid_identifiers| replace:: The identifier for the |open id| associated with the |chef server| web UI.
.. |authorized_openid_providers| replace:: The provider for the |open id| associated with the |chef server| web UI.
.. |autorestart supervisor| replace:: Indicates if a process is never auto-restarted (``false``), restarted when a program exits with an unknown exit code (``unexpected``), or unconditionally restarted (``true``).
.. |autostart supervisor| replace:: Indicates if a program starts automatically when |python supervisor| is started.
.. |availability_zone| replace:: The name of the availability zone. Each availability zone is unique within a region.
.. |aws_access_key_id| replace:: The access key identifier used with |amazon ec2|.
.. |aws_access_key_secret| replace:: The secret access key for the API endpoint used with |amazon ec2|.
.. |aws_access_key_username| replace:: The user name for the secret access key for the API endpoint used with |amazon ec2|.
.. |aws_access_key_password| replace:: The password for the secret access key for the API endpoint used with |amazon ec2|.
.. |azure host description| replace:: The description for the host.
.. |azure_host_name| replace:: The host name for the |azure| environment.
.. |azure_pem_filename| replace:: The name of the file that contains the |ssh| public key that is used when authenticating to |azure|.
.. |azure_subscription_id| replace:: The subscription identifier for the |azure| portal.
.. |azure preserve_os_disk| replace:: Indicates that the corresponding operating system disk will be preserved.
.. |azure preserve_virtual_disk| replace:: Indicates that the underlying virtual hard disk (VHD) will be preserved.
.. |azure preserve_dns_name| replace:: Indicates that the DNS entries for corresponding cloud services will be preserved. If this option is ``false``, any service not used by any virtual machine will be deleted.
.. |azure delete_storage_account| replace:: Indicates that any corresponding storage account will be deleted. When this option is ``true``, any storage account not used by any virtual machine will be deleted.      
.. |azure affinity_group| replace:: The affinity group to which the virtual machine belongs. Required when not using a service location.
.. |azure availability_set| replace:: The name of the availability set for the virtual machine.
.. |azure dns_name| replace:: Required. The name of the DNS prefix that is used to access the cloud service. This name must be unique within |azure|. Use with ``--azure-connect-to-existing-dns`` to use an existing DNS prefix.
.. |azure network_name| replace:: The network for the virtual machine.
.. |azure subnet_name| replace:: The subnet for the virtual machine.
.. |azure virtual_machine_name| replace:: The name of the virtual machine. Must be unique within |azure|. Required for advanced server creation options.
.. |azure connect_to_existing_dns| replace:: Indicates that a new virtual machine will be added to the existing deployment and/or service. Use with ``--azure-dns-name`` to ensure the correct DNS is used.

.. Description strings that begin with the letter B.
.. The pattern is |bxxxx| replace:: string.
.. 
.. 

.. B
.. 

.. |backlog_connections| replace:: The maximum number of pending connections.
.. |backups_kept| replace:: The number of backups to be kept. Set to ``false`` to prevent backups from being kept.
.. |bandwidth_yum| replace:: The maximum amount of network bandwidth (in bytes).
.. |before| replace:: Use this to add the run list item before the specified run list item.
.. |before_fork| replace:: The object that is called by the master process before executing the |unicorn| binary.
.. |before_migrate| replace:: A block of code (or a path to a file that contains code) that is run before a migration.
.. |before_restart| replace:: A block of code (or a path to a file that contains code) that is run before restarting.
.. |before_symlink| replace:: A block of code (or a path to a file that contains code) that is run before symbolic linking.
.. |bind redis| replace:: Indicates that |redis| will bind to the specified IP address.
.. |bindings| replace:: A string that identifies the information needed to communicate with a site. This information may be an IP address, unspecified IP addresses, a port number, or an (optional) host header. For example: ``111.111.1.1:443:www.opscode.com`` or ``*:443:``.
.. |block_ruby| replace:: A block of |ruby| code.
.. |block-startup-timeout| replace:: The amount of time that should elapse before the deployment process is stopped.
.. |blocking_torrent_file| replace:: Indicates whether a file should be downloaded in a single |chef client| run. If ``false``, the download may take place across one (or more) |chef client| runs.
.. |boot_protocol| replace:: The boot protocol used by a network interface.
.. |bootstrap no_proxy| replace:: A URL or IP address that specifies a location that should not be proxied.
.. |bootstrap proxy| replace:: The proxy server for the node that is the target of a bootstrap operation.
.. |bootstrap protocol| replace:: The protocol used to bootstrap on a machine that is running |windows server|: ``winrm`` or ``ssh``.
.. |bootstrap version| replace:: The version of the |chef client| to install.
.. |branch| replace:: The name of the default branch. This will default to the master branch.
.. |broadcast_address| replace:: The broadcast address for a network interface. One some platforms this attribute is not set using |ifconfig|, but is instead added to the startup configuration file for the network interface.
.. |build_local_file| replace:: Indicates that a command line will be built or executed against a local file.
.. |bundler_unicorn| replace:: Indicates whether |unicorn| bundles the application.
.. |bundler_skip_groups| replace:: An array of |bundler| groups to skip.



.. Description strings that begin with the letter C.
.. The pattern is |cxxxx| replace:: string.
.. 
.. 

.. C
.. 


.. |ca_trust_file| replace:: The |ca| trust file used for |ssl| transport.
.. |cache_path| replace:: Use to specify the home directory for the user that is running the |chef client| as a non-root user.
.. |cachedir| replace:: The directory in which |yum| stores cache and db files.
.. |CATEGORY| replace:: The cookbook category: ``Databases``, ``Web Servers``, ``Process Management``, ``Monitoring & Trending``, ``Programming Languages``, ``Package Management``, ``Applications``, ``Networking``, ``Operations Systems & Virtualization``, ``Utilities``, or ``Other``.
.. |cfg_cmd| replace:: A command to be passed in after ``appcmd.exe set config``.
.. |checkout_branch git| replace:: Use to specify the name of a branch to be checked out.
.. |checkpoint_completion_target| replace:: A completion percentage that is used to determine how quickly a checkpoint should finish in relation to the completion status of the next checkpoint. For example, if the value is ``0.5``, then a checkpoint will attempt to finish before 50% of the next checkpoint is done.
.. |checkpoint_segments| replace:: The maximum amount (in megabytes) between checkpoints in log file segments.
.. |checkpoint_timeout| replace:: The amount of time (in minutes) between checkpoints.
.. |checkpoint_warning| replace:: A frequency (in seconds) at which message is sent to the server log files if checkpoint segments are being filled faster than their currently configured values.
.. |checksum_path| replace:: The location in which checksums for individual cookbook files (such as recipes) are stored. The checksum itself is stored in |couch db| and is compared to a file in this location that has a filename that is identical to the checksum.
.. |checksum apple_disk_image| replace:: The |sha256| checksum for the |apple disk image|. If the local file matches the checksum, the |chef client| will not download it.
.. |checksum file| replace:: The |sha256| checksum of the file. Use to prevent the |resource remote_file| resource from re-downloading a file. When the local file matches the checksum, the |chef client| will not download it.
.. |chef_server_url| replace:: The URL for the |chef server|.
.. |chef_shell mode client| replace:: Indicates that |chef shell| will be run in |chef client| mode.
.. |chef_shell mode solo| replace:: Indicates that |chef shell| will be run in |chef solo| mode.
.. |chef_shell mode standalone| replace:: Indicates that |chef shell| will be run in standalone mode.
.. |chef_zero_enabled| replace:: Indicates whether |chef zero| is enabled.
.. |chef_zero_port| replace:: The port on which |chef zero| will listen.
.. |chunk_size| replace:: The chunk size.
.. |clean_requirements_on_remove| replace:: Indicates whether package dependencies are also removed when a package is removed.
.. |client| replace:: Use to create a client configuration. This will read from the |knife rb| config file to generate a config file suitable for use in |path chef client rb|, and will then copy the validation certificate into the specified directory.
.. |client_key| replace:: The location of the file which contains the client key.
.. |client_registration_retries| replace:: The number of times a |chef client| should attempt to register with a |chef server|.
.. |cluster member_nodes| replace:: A list of nodes that should be part of a cluster.
.. |code quoted_string| replace:: A quoted (" ") string of code to be executed.
.. |code erlang_call| replace:: The code to be executed on a node located within a distributed |erlang| system.
.. |collectstatic| replace:: Indicates the behavior of the ``staticfiles`` application. If ``true``, it will invoke ``manage.py`` with ``collectstatic -- noinput``.
.. |color| replace:: Indicates whether colored output will be used.
.. |color_list_available_downgrade| replace:: The color used for a package downgrade.
.. |color_list_available_install| replace:: The color used for a package install.
.. |color_list_available_reinstall| replace:: The color used for a package reinstall.
.. |color_list_available_upgrade| replace:: The color used for a package upgrade.
.. |color_list_installed_extra| replace:: The color used when a package to be installed does not match an available package with the same name and architecture.
.. |color_list_installed_newer| replace:: The color used when a package to be installed are newer than an available package with the same name and architecture.
.. |color_list_installed_older| replace:: The color used when a package to be installed are older than an available package with the same name and architecture.
.. |color_list_installed_reinstall| replace:: The color used when a package to be installed are same version as an available package with the same name and architecture.
.. |color_search_match| replace:: The color used for text matches in search.
.. |color_update_installed| replace:: The color used for a package in the updates list, which are already installed.
.. |color_update_local| replace:: The color used for a package in the updates list, which are already downloaded.
.. |color_update_remote| replace:: The color used for a package in the updates list, which need to be downloaded.
.. |command options| replace:: One (or more) additional options that are passed to the command.
.. |command parameters| replace:: One (or more) additional parameters that are passed to the command.
.. |command service_init| replace:: The path to the init script associated with the service.
.. |command service_reload| replace:: The command used to tell a service to reload its configuration.
.. |command service_restart| replace:: The command used to restart a service.
.. |command service_stop| replace:: The command used to stop a service.
.. |command service_start| replace:: The command used to start a service.
.. |command service_status| replace:: The command used to check the run status for a service.
.. |command_or_path| replace:: The command to be run or the path to a file that contains the command to be run.
.. |commands sudo| replace:: An array of commands that the user or group can execute using |sudo cmd|. This value must use the full path for each command, otherwise the resulting fragment will fail validation.
.. |commands_yum| replace:: A list of commands to run when no functional commands are specified on the command line.
.. |comment user| replace:: One (or more) comments about the user.
.. |components array| replace:: An array of components. For example: ``["main", "street"]``.
.. |config chef-client| replace:: The configuration file to use.
.. |config rb chef server| replace:: A |chef server rb| file is used to specify the configuration settings for the |chef server|. 
.. |config rb client| replace:: A |client rb| file is used to specify the configuration details for the |chef client|.
.. |config rb knife| replace:: A |knife rb| file is used to specify the |chef repo|-specific configuration details for |knife|. 
.. |config rb metadata| replace:: A |metadata rb| file is never interpreted directly. Rather, the |metadata rb| file provides a simple location to store and edit data that is then compiled by the |chef server| and stored as |json| data.
.. |config rb server| replace:: A |server rb| file is used to specify the configuration details for the |chef server|. 
.. |config rb solo| replace:: A |solo rb| file is used to specify the configuration details for |chef solo|. 
.. |config rb solr| replace:: A |solr rb| file is used to specify the configuration details for |chef solr|, |chef solr indexer|, and |chef solr rebuild|. 
.. |content file| replace:: A string that is written to the file. The contents of this attribute will replace any previous content when this attribute has something other than the default value.
.. |concurrency| replace:: The number of allowed concurrent connections.
.. |config| replace:: The configuration file to use.
.. |continue_seeding_torrent_file| replace:: Indicates whether a file should continue to be seeded to the |bittorrent| swarm after download.
.. |cookbook directory attributes| replace:: The sub-directory in which attributes are located. 
.. |cookbook directory libraries| replace:: The sub-directory in which libraries are located. 
.. |cookbook directory providers| replace:: The sub-directory in which lightweight providers are located. 
.. |cookbook directory recipes| replace:: The sub-directory in which recipes are located. 
.. |cookbook directory resources| replace:: The sub-directory in which lightweight resources are located. 
.. |cookbook directory templates| replace:: The sub-directory in which templates are located.
.. |cookbook file_location| replace:: The cookbook in which a file is located (if it is not located in the current cookbook). 
.. |cookbook name application| replace:: The |cookbook application| cookbook is the base cookbook for the |cookbook application_java|, |cookbook application_nginx|, |cookbook application_php|, |cookbook application_python|, and |cookbook application_ruby| cookbooks.
.. |cookbook name application_java| replace:: The |cookbook application_java| cookbook is used to manage |apache tomcat| and |java| web applications.
.. |cookbook name application_nginx| replace:: The |cookbook application_nginx| cookbook is used to manage |nginx| applications.
.. |cookbook name application_php| replace:: The |cookbook application_php| cookbook is used to |php| applications.
.. |cookbook name application_python| replace:: The |cookbook application_python| cookbook is used to manage |celery|, |django|, and |gunicorn| applications.
.. |cookbook name application_ruby| replace:: The |cookbook application_ruby| cookbook is used to manage |memcached|, |passenger|, |ruby unicorn|, and |ruby on rails| applications.
.. |cookbook name apt| replace:: The |cookbook apt| cookbook is used to configure |apt| and |apt| services, for managing |apt| repositories and preferences.
.. |cookbook name aws| replace:: The |cookbook aws| cookbook is used to manage resources that are running in |amazon aws|.
.. |cookbook name bluepill| replace:: The |cookbook bluepill| cookbook is used to install |bluepill|, and then use it to manage services.
.. |cookbook name chef_handler| replace:: The |cookbook chef_handler| cookbook is used to distribute and enable exception and report handlers.
.. |cookbook name daemontools| replace:: The |cookbook daemontools| cookbook is used to install and configure |daemontools| so that it can be used to manage |unix| services.
.. |cookbook name djbdns| replace:: The |cookbook djbdns| cookbook is used to install |djbdns| and use it to configure DNS services.
.. |cookbook name dmg| replace:: The |cookbook dmg| cookbook is used to create a |dmg| package for use with |mac os x|.
.. |cookbook name dynect| replace:: The |cookbook dynect| cookbook is used to manage DNS records using the |dynect| REST API.
.. |cookbook name firewall| replace:: The |cookbook firewall| cookbook is used to manage firewalls and their associated firewall rulesets.
.. |cookbook name freebsd| replace:: The |cookbook freebsd| cookbook is used to manage port options for |freebsd|.
.. |cookbook name gunicorn| replace:: The |cookbook gunicorn| cookbook is used to install and configure |gunicorn|.
.. |cookbook name homebrew| replace:: The |cookbook homebrew| cookbook is used to install and configure |homebrew| for use as the package manager for |mac os x|.
.. |cookbook name iis| replace:: The |cookbook iis| cookbook is used to install and configure |microsoft iis|.
.. |cookbook name maven| replace:: The |cookbook maven| cookbook is used to install and configure |apache maven|.
.. |cookbook name nagios| replace:: The |cookbook nagios| cookbook is used to install and configure |nagios|.
.. |cookbook name netdev| replace:: The |cookbook netdev| cookbook is used to install and configure network interfaces and Layer 2 switching.
.. |cookbook name pacman| replace:: The |cookbook pacman| cookbook is used to install the |archlinux pacman| package manager and configure groups.
.. |cookbook name php| replace:: The |cookbook php| cookbook is used to install and configure |php| and |php| modules.
.. |cookbook name powershell| replace:: The |cookbook powershell| cookbook is used to install |windows powershell|.
.. |cookbook name python| replace:: The |cookbook python| cookbook is used to install |python|, |python pip|, and |python virtualenv|.
.. |cookbook name rabbitmq| replace:: The |cookbook rabbitmq| cookbook is used to install and configure |rabbitmq|.
.. |cookbook name riak| replace:: The |cookbook riak| cookbook is used to install and configure the |riak| distributed data store.
.. |cookbook name samba| replace:: The |cookbook samba| cookbook is used to install and configure |samba|.
.. |cookbook name sudo| replace:: The |cookbook sudo| cookbook is used to install |sudo cmd| and configure |path etc sudoers|.
.. |cookbook name supervisor| replace:: The |cookbook supervisor| cookbook is used to install |python supervisor| and use it to provide resources while configuring services.
.. |cookbook name transmission| replace:: The |cookbook transmission| cookbook is used to install and configure the |transmission| |bittorrent| client.
.. |cookbook name users| replace:: The |cookbook users| cookbook is used to create users based on a data bag search.
.. |cookbook name webpi| replace:: The |cookbook webpi| cookbook is used to run the |microsoft webpi|.
.. |cookbook name windows| replace:: The |cookbook windows| cookbook is used to configure auto run, batch, reboot, enable built-in operating system packages, configure |windows| packages, reboot machines, and more.
.. |cookbook name yum| replace:: The |cookbook yum| cookbook is used to manage the contents of the ``yum.conf`` configuration file for global |yum| configurations and for individual |yum| repositories.
.. |cookbook name zenoss| replace:: The |cookbook zenoss| cookbook is used to install and configure |zenoss|, and then register nodes as devices.
.. |cookbook path| replace:: The directory in which cookbook are created. This can be a colon-separated path.
.. |cookbook_path subdirectory| replace:: The sub-directory for cookbooks on the |chef client|. This value can be a string or an array of file system locations, processed in the specified order. The last cookbook is considered to override local modifications.
.. |cookbook_tarball_path| replace:: The location in which a |chef server| stores cookbooks that have been saved in the .tar file format, and from which cookbooks are distributed to a |chef client|.
.. |cookbook template_location| replace:: The cookbook in which a template files is located (if it is not located in the current cookbook).
.. |COOKBOOK_VERSION delete| replace:: The version of a cookbook to be deleted. If a cookbook has only one version, this option does not need to be specified. If a cookbook has more than one version and this option is not specified, |knife| will prompt for a version.
.. |COOKBOOK_VERSION download| replace:: The version of a cookbook to be downloaded. If a cookbook has only one version, this option does not need to be specified. If a cookbook has more than one version and this option is not specified, |knife| will prompt for a version.
.. |COOKBOOK_VERSION install| replace:: The version of the cookbook to be installed. If a version is not specified, the most recent version of the cookbook will be installed.
.. |COOKBOOK_VERSION show| replace:: The version of a cookbook to be shown. If a cookbook has only one version, this option does not need to be specified. If a cookbook has more than one version and this option is not specified, a list of cookbook versions will be returned.
.. |cookie resource erlang_call| replace:: The magic cookie for the node to which a connection is made.
.. |copyright| replace:: The name of the copyright holder. This option will place a copyright notice that contains the name of the copyright holder in each of the pre-created files. If this option is not specified, a copyright name of "your_company_name" will be used instead; it can be easily modified later.
.. |cost_repo| replace:: The relative cost of accessing this repository.
.. |couchdb_database| replace:: The name of the |couch db| database.
.. |couchdb_url| replace:: The URL for the |couch db| database.
.. |couchdb_version| replace:: Optional. The version of the |couch db| database.
.. |create_dirs_before_symlink| replace:: Use this attribute to create directories before symbolic links are created. This attribute runs after ``purge_before_symlink`` and before ``symlink``.
.. |create_env_directory| replace:: Use to create an ``env`` directory for a service. The directory will contain files named for each environment variable that is required, with the contents of its value in a |ruby hash|. For more information about the ``env`` directory, see: http://cr.yp.to/daemontools/envdir.html.
.. |creates file_exists| replace:: Indicates that a command to create a file will not be run when that file already exists.
.. |credential_file google| replace:: The credential file used by |google compute engine|. (This file is created when running the ``knife google setup`` command.)
.. |critical_condition nagios_nrpecheck| replace:: A string that is passed to the command using the ``-c`` flag.
.. |cwd| replace:: The current working directory.
.. |cwd run_command| replace:: The current working directory from which a command is run.
.. |cwd tinydns| replace:: The current working directory in which the |tinydns| data file is located.



.. Description strings that begin with the letter D.
.. The pattern is |dxxxx| replace:: string.
.. 
.. 

.. D
.. 

.. |d knife list| replace:: Indicates that a directory's children will not be shown when a directory matches a pattern.
.. |daemonize| replace:: Indicates that the executable will be run as a daemon.
.. |daemonize gunicorn| replace:: Indicates that the |gunicorn| process is daemonized.
.. |data_bag_decrypt_minimum_version| replace:: The minimum required version of data bag encryption. Possible values: ``0``, ``1``, and ``2``. When all of the machines in an organization are running |chef client| version 11.6 (or higher), it is recommended that this value be set to ``2``.
.. |data_bag_path| replace:: The location from which a data bag is loaded.
.. |database_master_role| replace:: The name of a role. During a |chef client| run, a search will be performed to find a node with the same name as this value in the same environment as the current role. If a node is found, it's IP address will be used when rendering the context file.
.. |database_master_role database_yml| replace:: The name of a role. During a |chef client| run, a search will be performed to find a node with the same name as this value in the same environment as the current role. If a node is found, it's IP address will be used when rendering the ``database.yml`` file.
.. |database_quantity| replace:: The number of databases.
.. |day cron| replace:: The day of month at which the |cron| entry should run (1 - 31).
.. |db_pool_size| replace:: The number of open connections to |postgresql| that are maintained by the |service erchef| service.
.. |debug_enabled| replace:: Indicates whether debugging is turned on.
.. |debug_level| replace:: The output level for debug messages.
.. |debug settings_template| replace:: Indicates that the default settings template will control debugging.
.. |defaults| replace:: Indicates that |knife| will use the default value, instead of asking a user to provide one.
.. |delete_local_and_remote| replace:: Indicates that both local and remote copies of an object should be deleted.
.. |delete chef_validator| replace:: Use to force the deletion of the |chef client| when it is also a |chef validator|.
.. |delim resource directory| replace:: The delimiter that is used to separate multiple values for a single key.
.. |deploy_to| replace:: The "meta root" for the application, if different from the path that is used to specify the name of a resource.
.. |depth git_shallow_clone| replace:: The number of past revisions that will be included in the |git| shallow clone.
.. |description cookbook| replace:: A short description of a cookbook and its functionality.
.. |description environment| replace:: The description of the environment. This value will populate the description field for the environment on the |chef server|.
.. |description interface| replace:: The description of the interface.
.. |description recipe| replace:: A description for a recipe, mostly for cosmetic value within the |chef server| user interface.
.. |destination resource scm| replace:: The path to the location to which the source will be cloned, checked out, or exported.
.. |description role| replace:: The description of the role. This value will populate the description field for the role on the |chef server|.
.. |description resource_attributes_intro| replace:: This resource has the following attributes:
.. |description vlan| replace:: The description of the VLAN.
.. |description windows_shortcut| replace:: A description of the |windows| shortcut.
.. |description yum_repository| replace:: A description of the |yum| repository.
.. |details cloudkick_check| replace:: A |json| object with data specific to a |cloudkick| check.
.. |device aws_ebs_volume| replace:: The local block device to be attached to an |amazon ebs| volume.
.. |device ifconfig| replace:: The network interface to be configured.
.. |device mount| replace:: The special block device or remote node, a label, or a uuid to be mounted.
.. |device_type| replace:: The type of device: ``:device``, ``:label``, or ``:uuid``.
.. |device mdadm| replace:: A comma-separated list of devices to be part of a RAID array.
.. |diff_disabled| replace:: Indicates whether the |chef client| will create a diff when the |chef client| makes changes to a file.
.. |diff_filesize_threshold| replace:: The maximum size (in bytes) of a file for which the |chef client| can create a diff.
.. |diff_output_threshold| replace:: The maximum size (in bytes) of a diff file created by the |chef client|.
.. |diff_download| replace:: Indicates that only new and modified files will be downloaded.
.. |diff_filter| replace:: Indicates that files will be selected that have been added (``A``), deleted (``D``), modified (``M``), and/or have had their type changed (``T``). Any combination of filter characters may be used, including no filter characters. Use ``*`` to select all paths if a file matches other criteria in the comparison.
.. |diff_upload| replace:: Indicates that only new and modified files will be uploaded.
.. |dir| replace:: The directory into which a cookbook will be downloaded.
.. |directory apple_disk_image| replace:: The directory under ``/Volumes`` where the |apple disk image| is to be mounted.
.. |directory dmg_package| replace:: The directory to which the ``.app`` directory is copied.
.. |directory keepalived| replace:: The location in which |keepalived| will store on-disk data.
.. |directory logs| replace:: The directory in which log data is stored.
.. |directory maven| replace:: The folder in which the |jar| file and its dependencies will be located.
.. |directory package_download| replace:: The directory to which a package is downloaded.
.. |directory postgresql| replace:: The location in which |postgresql| is located.
.. |directory postgresql_data| replace:: The location in which |postgresql| will store on-disk data.
.. |directory postgresql_home| replace:: The home directory for |postgresql|.
.. |directory redis| replace:: The working directory. (Also the location in which an append-only log file is created, if used.)
.. |directives php_pear| replace:: Extra extension directives (or settings) for a |pecl|. On most platforms, these directives are rendered into the extension's .ini file.
.. |directory daemontools| replace:: The directory in which the service is set up.
.. |disable plugin_ohai| replace:: An array of |ohai| plugins to be disabled on a node.
.. |disable-bootstrap| replace:: Indicates that the bootstrap process should be disabled.
.. |diskspacecheck| replace:: Indicates whether |yum| checks for sufficient disk space before a transaction is run.
.. |distroverpkg| replace:: The package used by |yum| to determine the version for a distribution.
.. |distributed_erlang_node| replace:: Indicates that a node is a distributed |erlang| node.
.. |distro| replace:: The template file to be used during a bootstrap operation. The following distributions are supported: ``chef-full`` (the default bootstrap), ``centos5-gems``, ``fedora13-gems``, ``ubuntu10.04-gems``, ``ubuntu10.04-apt``, ``ubuntu12.04-gems``, and the name of a custom bootstrap template file. When this option is used, |knife| will search for the template file in the following order: the ``bootstrap/`` folder in the current working directory, the ``bootstrap/`` folder in the |chef repo|, the ``bootstrap/`` folder in the ``~/.chef/`` directory, or a default bootstrap file. Do not use the ``--template-file`` option when ``--distro`` is specified.
.. |dns_zone| replace:: The DNS zone.
.. |dry_run| replace:: Indicates that no action is taken and that results are only printed out.
.. |dry_run no_upload| replace:: Use to prevent changes from being uploaded to the |chef server|.
.. |dump_frequency| replace:: The dump frequency (in days) used while creating a file systems table (fstab) entry.
.. |duplex mode| replace:: The duplex mode for the interface. Possible values: ``auto``, ``half``, or ``full``.



.. Description strings that begin with the letter E.
.. The pattern is |exxxx| replace:: string.
.. 
.. 

.. E
.. 

.. |ebs-no-delete-on-term| replace:: Indicates that the |amazon ebs| volume will not be deleted upon instance termination. This option is only available for instances that are backed with |amazon ebs|.
.. |ebs-size| replace:: The size of the |amazon ebs| volume, in GB. This option is only available for instances that are backed with |amazon ebs|.
.. |edit| replace:: Use to edit instance data using the default text editor.
.. |editor| replace:: The |chef editor| that is used for all interactive commands.
.. |effective_cache_size postgresql| replace:: The size of the disk cache that is used for data files.
.. |email| replace:: The email address for the individual who maintains the cookbook. This option will place an email address in each of the pre-created files. If this option is not specified, an email name of "your_email" will be used instead; it can be easily modified later.
.. |enable_checkout git| replace:: Use to check out a repo from master.
.. |enable_group_conditionals| replace:: Use to allow conditional packages.
.. |enable_package_groups| replace:: Use to allow the use of package groups for a repository.
.. |enable_reporting| replace:: Use to enable data collection reporting during a |chef client| run.
.. |enable_selinux_file_permission_fixup| replace:: |selinux| environments only. Indicates whether the |chef client| will attempt to apply the correct file permissions to an updated file by using the ``restorecon`` command. Set this value to ``false`` to prevent the |chef client| from attempting this action.
.. |enable_submodules| replace:: Use to perform a sub-module initialization and update.
.. |enable gzip| replace:: Use to enable  |gzip| compression.
.. |enable ipv6| replace:: Use to enable |ipv6| addresses.
.. |enable non_ssl| replace:: Use to allow port 80 redirects to port 443. When this value is set to ``false``, load balancers on the front-end hardware are allowed to do |ssl| termination of the WebUI and API.
.. |enable reporting| replace:: Indicates that the |chef client| will send data to the |chef server oec| server for use with |reporting|.
.. |enable reporting_url_fatals| replace:: Indicates that the |chef client| run will fail if reporting data cannot be sent to the |chef server oec| server (for any reason).
.. |enable service| replace:: Indicates whether the service is enabled.
.. |encrypted_data_bag_secret| replace:: The subdirectory in which encrypted data bag secrets are located.
.. |environment cookbooks| replace:: The environment that will be applied to all cookbooks that are uploaded using the same action. This will automatically set the version constraint on the environment to match the version of a cookbook that is being uploaded.
.. |environment key_value_pairs| replace:: A |ruby hash| of key-value pairs in the form of ``KEY1=val1,KEY2=val2`` that will be placed in the environment for a child process.
.. |environment set_home| replace:: Use to set the ``HOME`` environment variable.
.. |environment set_mailto| replace:: Use to set the ``MAILTO`` environment variable.
.. |environment set_path| replace:: Use to set the ``PATH`` environment variable.
.. |environment set_shell| replace:: Use to set the ``SHELL`` environment variable.
.. |environment variables| replace:: A |ruby hash| of environment variables in the form of ``{"ENV_VARIABLE" => "VALUE"}``. (These variables must exist for a command to be run successfully.)
.. |ephemeral device| replace:: A comma-separated list of device locations to be mapped to ephemeral devices.
.. |errorlevel| replace:: The output level for error messages.
.. |exactarch| replace:: Use to update only packages that match the architecture already installed.
.. |exec| replace:: A string of code that will be executed.
.. |exclude_package_list| replace:: A space-separated list of packages to be excluded from updates and installs.
.. |excluded_members| replace:: Use to remove users from a group. May only be used when ``append`` is set to ``true``.
.. |execute chef_apply| replace:: Use to execute a resource using a string.
.. |exists package| replace:: Use when a package already exists.
.. |exitcodes| replace:: A list of expected exit codes for a program.
.. |external-ip-address| replace:: A static IP address that is provided by |google compute engine|.



.. Description strings that begin with the letter F.
.. The pattern is |fxxxx| replace:: string.
.. 
.. 

.. F
.. 

.. |fastest_mirror_enabled| replace:: Use to assign the fastest available mirror.
.. |fatal_windows_admin_check| replace:: Use to cause a |chef client| run to fail when the |chef client| does not have administrator privileges in |windows|.
.. |failover_method| replace:: The fail-over method. ``roundrobin`` randomly selects a URL out of a list of URLs and proceeds through each of them as it encounters a failure when contacting the host; ``priority`` starts from the first base URL listed and proceeds through them sequentially.
.. |file| replace:: The name of the cookbook file to be downloaded.
.. |file atomic_update| replace:: Use to apply atomic file updates to all resources. Set to ``true`` for global atomic file updates. Set to ``false`` for global non-atomic file updates. (Use the ``atomic_update`` setting on a per-resource basis to override this setting.)
.. |file azure_publish_settings| replace:: The name of the |azure publish_settings| file, including the path. For example: ``"/path/to/your.publishsettings"``.
.. |file cache_path| replace:: The location in which cookbooks (and other transient data) files are stored when they are synchronized. (This value can also be used in recipes to download files with the ``remote_file`` resource.)
.. |file cookbook_download| replace:: The file to which a cookbook download is written.
.. |file local_settings| replace:: The name of the local settings file to be generated by a template.
.. |file private_key| replace:: Use to save a private key to the specified file name.
.. |file public_key| replace:: All users are assigned a public key. Use to write the public key to a file.
.. |FILE_NAME| replace:: The name of a file that is associated with a cookbook.
.. |file pear_channel| replace:: The definition file for a |pear| channel.
.. |file_staging_uses_destdir| replace:: Use to specify how file staging (via temporary files) is done. When ``true``, temporary files are created in the directory in which files will reside. When ``false``, temporary files are created under ``ENV['TMP']``.
.. |files_backup| replace:: The number of backup copies to keep for files in the directory.
.. |files_group| replace:: Use to configure group permissions for files.
.. |files_owner| replace:: Use to configure owner permissions for files.
.. |finish_script| replace:: Indicates that a service has a finish script. 
.. |firewall enable_bluelock| replace:: Use to install a firewall, through which public network access can be controlled.
.. |firewall rule_in| replace:: The IP address or subnet from which incoming traffic originates.
.. |firewall rule_out| replace:: The IP address or subnet to which traffic is routed.
.. |firewall rule_position| replace:: The position at which a rule is inserted. If this value is not specified, a rule is inserted at the end of a rule list.
.. |firewall rule_protocol| replace:: The protocol used by the firewall rule. Valid values are: ``:all``, ``:udp``, ``:tcp``.
.. |flags| replace:: One (or more) command line flags that are passed to the interpreter when a command is invoked.
.. |flat| replace:: Use to show a list of file names. Set to ``false`` to view ls-like output.
.. |flavor| replace:: The name of the flavor that identifies the hardware configuration of the server, including disk space, memory capacity, and CPU priority.
.. |flush_cache| replace:: An array that indicates whether the |yum| cache should be flushed before or after a |yum| operation that installs, upgrades, or removes a package. Possible values: ``:before`` and ``:after``.
.. |force| replace:: Indicates that the download of a deprecated cookbook will be forced.
.. |force directory| replace:: Indicates that an existing directory will be overwritten.
.. |force knife download| replace:: Use ``--force`` to download files even when the file on the hard drive is identical to the object on the server (role, cookbook, etc.). By default, files are compared to see if they have equivalent content, and local files are only overwritten if they are different.
.. |force knife upload| replace:: Use ``--force`` to upload roles, cookbooks, etc. even if the file in the directory is identical (by default, no ``POST`` or ``PUT`` is performed unless an actual change would be made).
.. |force update| replace:: Indicates that a cookbook should be updated even if the ``--freeze`` flag has been set.
.. |force_formatter| replace:: Indicates that formatter output will be used instead of logger output.
.. |force_logger| replace:: Indicates that logger output will be used instead of formatter output.
.. |force_unlink| replace:: Use to specify how the |chef client| handles certain situations when the target file turns out not to be a file. For example, when a target file is actually a symlink. Set to ``true`` to have the |chef client| delete the non-file target and replace it with the specified file. Set to ``false`` for the |chef client| to raise an error.
.. |format| replace:: The output format: ``summary`` (default), ``text``, ``json``, ``yaml``, and ``pp``.
.. |format chef_ctls| replace:: The output format: ``doc`` (default) or ``min``.
.. |format chef_ctls_doc| replace:: Use ``doc`` to print the progress of the |chef client| run using full strings that display a summary of updates as they occur.
.. |format chef_ctls_min| replace:: Use ``min`` to print the progress of the |chef client| run using single characters. A summary of updates is printed at the end of the |chef client| run. A dot (``.``) is printed for events that do not have meaningful status information, such as loading a file or synchronizing a cookbook. For resources, a dot (``.``) is printed when the resource is up to date, an ``S`` is printed when the resource is skipped by ``not_if`` or ``only_if``, and a ``U`` is printed when the resource is updated.
.. |format chef_ctls_other| replace:: Other formatting options are available when those formatters are configured in the |client rb| file using the ``add_formatter`` option.
.. |fork_chef| replace:: Indicates that a |chef client| run will be contained in a secondary process with dedicated RAM. When the |chef client| run is complete the RAM will be returned to the master process. This option helps ensure that a |chef client| will use a steady amount of RAM over time because the master process will not run recipes. This option will also help prevent memory leaks (such as those that can be introduced by the code contained within a poorly designed cookbook). Use ``--no-fork`` to disable running the chef-client in fork node. Default value: ``--fork``.
.. |forward_agent| replace:: Indicates that |ssh| agent forwarding is enabled.
.. |freeze| replace:: Indicates that a cookbook cannot be modified; any changes to this cookbook must be included as a new version. Only the ``--force`` option can override this setting.
.. |fstype| replace:: The file system type (fstype) of the device.
.. |ftp_active_mode| replace:: Indicates whether the |chef client| will use active or passive FTP. Set to ``true`` to use active FTP.



.. Description strings that begin with the letter G.
.. The pattern is |gxxxx| replace:: string.
.. 
.. 

.. G
.. 


.. |gem_binary resource package| replace:: An attribute for the ``gem_package`` provider that is used to specify a |gems| binary. This attribute is useful when installing |ruby| 1.9 |gems| while running in |ruby| 1.8.
.. |gems_array| replace:: An array of |gems| to be installed.
.. |generic resource statement| replace:: The following examples demonstrate various approaches for using resources in recipes. If you want to see examples of how |company_name| uses resources in recipes, take a closer look at the cookbooks that |company_name| authors and maintains: https://github.com/opscode-cookbooks.
.. |git_ssh_wrapper| replace:: The alias for the ``ssh_wrapper``.
.. |google_image| replace:: The name of the virtual application template or image that will be used to create the virtual machine.
.. |google_compute_disks| replace:: A comma-separated list of disks to be attached.
.. |google_compute_public_ip| replace:: The public IP address for |google compute engine|.
.. |google_compute_machine_type| replace:: The machine type for the instance running in |google compute engine| server. For example, ``n1-highcpu-2`` or ``n1-highcpu-2-d``. The full list of available machine types: https://developers.google.com/compute/docs/instances.
.. |google_compute_metadata| replace:: A list of metadata key-value pairs that are associated with an instance.
.. |google_compute_network| replace:: The name of the network in which an instance is running.
.. |google_compute_server_connect_ip| replace:: Indicates whether the IP address for |google compute engine| is ``PUBLIC`` or ``PRIVATE``.
.. |google_compute_tags| replace:: A list of tags that are associated with an instance.
.. |google_compute_user_data| replace:: The user data file used to provision |google compute engine|.
.. |gpg_check| replace:: Indicates whether |yum| will perform a |gnupg| signature check on packages.
.. |gpg_key| replace:: A URL that points to the ASCII-armored |gnupg| key file for this repository. Use this attribute when |yum| needs a public key to verify a package and when that key has not been imported into the |rpm| database.
.. |group command| replace:: The group name or group ID that must be changed before running a command.
.. |group config| replace:: The group that owns a process. This is required when starting any executable as a daemon. Default value: ``nil``.
.. |group default_admins| replace:: Use the |webui group admins| group to define the list of users who have administrative rights to all objects and object types for a single organization.
.. |group default_billing_admins| replace:: Use the |webui group billing| group to define the list of users who have permission to manage billing information. (This permission exists only for hosted |chef server oec|.)
.. |group default_clients| replace:: Use the |webui group clients| group to define the list of nodes on which a |chef client| is installed and configured to be managed by the |chef server|. In general, think of this permission as "all of the non-human actors---the |chef client|, in nearly every case---that will get data from and/or upload data to the |chef server|". Newly-created |chef client| instances are added to this group automatically.
.. |group default_users| replace:: Use the |webui group users| group to define the list of users who will use |knife| and the |webui| user interface to interact with objects and object types. In general, think of this permission as "all of the non-admin human actors who will work with data that is uploaded to and/or downloaded from the |chef server|".
.. |group deploy| replace:: The system group that is responsible for the checked-out code.
.. |group ids| replace:: A comma-separated list of security group identifiers.
.. |group_package_types| replace:: The types of packages installed when ``groupinstall`` is called. Possible values: ``default``, ``mandatory``, and ``optional``.
.. |group resource link| replace:: A string or ID that identifies the group associated with a symbolic link.
.. |grouping| replace:: Adds a title and description to a group of attributes within a namespace. Takes a name (along with the / notation that defines a nested grouping), a title, and a short description.
.. |groupremove_leaf_only| replace:: Indicates whether all packages in a group will be removed. Set this value to ``1`` to remove only those packages that are not required by another package.
.. |groups| replace:: A comma-separated list of security groups.
.. |gunicorn desc| replace:: |gunicorn| is a web service gateway interface server for |unix| that is a pre-fork worker model from the |ruby| |ruby unicorn| project.
.. |gzip compression_level| replace:: The compression level used with |gzip|, from least amount of compression (``1``, fastest) to the most (``2``, slowest).
.. |gzip http_version| replace:: Enables |gzip| depending on the version of the HTTP request.
.. |gzip proxied| replace:: The type of compression used based on the request and response.
.. |gzip types| replace:: Enables compression for the specified MIME-types.



.. Description strings that begin with the letter H.
.. The pattern is |hxxxx| replace:: string.
.. 
.. 

.. H
.. 


.. |handler method_all_resources| replace:: A list of all resources that are included in the ``resource_collection`` property for the current |chef client| run.
.. |handler method_backtrace| replace:: A backtrace associated with the uncaught exception data which caused a |chef client| run to fail, if present; ``nil`` for a successful |chef client| run.
.. |handler method_elapsed_time| replace:: The amount of time between the start (``start_time``) and end (``end_time``) of a |chef client| run.
.. |handler method_end_time| replace:: The time at which a |chef client| run ended.
.. |handler method_exception| replace:: The uncaught exception data which caused a |chef client| run to fail; ``nil`` for a successful |chef client| run.
.. |handler method_failed| replace:: Indicates that a |chef client| run failed; ``true`` when uncaught exceptions were raised during a |chef client| run.
.. |handler method_node| replace:: The node on which the |chef client| run occurred.
.. |handler method_run_context| replace:: An instance of the ``Chef::RunContext`` object; used by the |chef client| to track the context of the run; provides access to the ``cookbook_collection``, ``resource_collection``, and ``definitions`` properties.
.. |handler method_start_time| replace:: The time at which a |chef client| run started.
.. |handler method_success| replace:: Indicates that a |chef client| run succeeded; ``true`` when uncaught exceptions were not raised during a |chef client| run.
.. |handler method_updated_resources| replace:: A list of resources that were marked as updated as a result of the |chef client| run.
.. |handler method_formatted_string| replace:: The exception as a formatted string, for example: ``ExceptionClass: message``.
.. |handler config_exception| replace:: A list of exception handlers that are available to the |chef client| during a |chef client| run.
.. |handler config_report| replace:: A list of report handlers that are available to the |chef client| during a |chef client| run.
.. |handler config_start| replace:: A list of start handlers that are available to the |chef client| at the start of a |chef client| run.
.. |hardware_address| replace:: The hardware address for the network interface.
.. |headers custom| replace:: A |ruby hash| of custom headers.
.. |heap_size solr| replace:: The amount of memory available to |apache solr|. If there is not enough memory available, search queries made by nodes to |apache solr| may fail. The amount of memory that must be available also depends on the number of nodes in the organization, the frequency of search queries, and other characteristics that are unique to each organization. In general, as the number of nodes increases, so will the amount of memory.
.. |help subcommand| replace:: Shows help for the command.
.. |helper| replace:: Use to define a helper method inline. For example: ``helper(:hello_world) { "hello world" }`` or ``helper(:app) { node["app"] }`` or ``helper(:app_conf) { |setting| node["app"][setting] }``.
.. |helpers| replace:: Use to define a helper module inline or in a library. For example, an inline module: ``helpers do``, which is then followed by a block of |ruby| code. And for a library module: ``helpers(MyHelperModule)``.
.. |hide_healthy| replace:: Indicates that nodes on which a |chef client| run has occurred within the previous hour will be hidden.
.. |hint| replace:: An |ohai| hint to be set on the target of the bootstrap. The hint is contained in a file and is formatted as |json|: ``{"attribute":"value","attribute":"value"...}``. ``HINT_NAME`` is the name of the hint and ``HINT_FILE`` is the name of the hint file located at ``/etc/chef/ohai/hints/HINT_FILE.json``. Use multiple ``--hint`` options in the command to specify multiple hints.
.. |history_list_view| replace:: Use to set which column of information is displayed in the |yum| history list: ``cmds`` (display the command-line for the transaction), ``single-user-commands`` (display users, if more than one), or ``users`` (display the user who initiated the transaction).
.. |history_record| replace:: Indicates whether |yum| should record history entries for transactions. This attribute typically requires extra disk space and may take longer to process than when this attribute is not used; however, when this attribute is not enabled, |yum| may not be able to provide warnings for problems that may arise.
.. |history_record_packages| replace:: A list of package names that should be recorded as having helped the transaction.
.. |home_directory| replace:: The location of the home directory.
.. |host_header| replace:: The host header, domain, or host name to which a site is mapped.
.. |host vcloud| replace:: The |vcloud| API endpoint.
.. |hosted-service-name| replace:: The name of the hosted service.
.. |hour cron| replace:: The hour at which the |cron| entry should run (0 - 23).
.. |http_caching| replace:: Use to define how upstream HTTP caches handle HTTP downloads.
.. |http_proxy| replace:: The proxy server for HTTP connections.
.. |http_proxy_pass| replace:: The password for the proxy server when the proxy server is using an HTTP connection.
.. |http_proxy_user| replace:: The user name for the proxy server when the proxy server is using an HTTP connection.
.. |http_retry_count| replace:: The number of retry attempts.
.. |http_retry_delay| replace:: The delay (in seconds) between retry attempts.
.. |https_proxy| replace:: The proxy server for HTTPS connections.
.. |https_proxy_pass| replace:: The password for the proxy server when the proxy server is using an HTTPS connection.
.. |https_proxy_user| replace:: The user name for the proxy server when the proxy server is using an HTTPS connection.




.. Description strings that begin with the letter I.
.. The pattern is |ixxxx| replace:: string.
.. 
.. 

.. I
.. 


.. |id aws_resource_tag| replace:: One or more resources whose tags will be modified. This value may be a single ID as a string or multiple IDs as an array. If this value is not specified, then the ``name`` attribute for each resource will be used.
.. |id aws_snapshot| replace:: The identifier used to build an |amazon ebs| volume snapshot.
.. |id customer_dynect| replace:: The |dns update api| customer ID.
.. |id group_torrent_file| replace:: A string or ID that identifies the group owner of a file.
.. |id ebs_volume| replace:: The identifier for an |amazon ebs| volume.
.. |id group| replace:: The identifier for the group.
.. |id hp_tenant| replace:: The tenant identifier that represents a collection of service subscriptions and/or resources in the |hp cloud| account.
.. |id monitor_cloudkick| replace:: The identifier of a |cloudkick| monitor, which will be the parent of a |cloudkick| check.
.. |id network_vcloud| replace:: The |vcloud| network ID.
.. |id product_webpi| replace:: The identifier of the product to be installed.
.. |id chef_client_run| replace:: The identifier for a |chef client| run.
.. |id report_instance| replace:: Use to ensure that instances running |amazon linux| can log the instance identifier (e.g. ``i-12345678``) and region (e.g. ``us-west-1``) for an instance that downloads a package.
.. |id site| replace:: The identifier for the site.
.. |id vlan| replace:: The identifier for the VLAN.
.. |id-only| replace:: Indicates that only matching object IDs will be shown.
.. |identity-file| replace:: The SSH identity file used for authentication. Key-based authentication is recommended.
.. |identity_file_passphrase| replace:: The passphrase for the SSH key. Use only with ``--identity-file``.
.. |ignore_failure| replace:: Use to continue running a recipe if a resource fails for any reason.
.. |iis_accept_eula| replace:: Indicates that the terms of the end user license agreement is accepted.
.. |iis_home| replace:: The home directory for |microsoft iis|.
.. |iis_conf_dir| replace:: The location for |microsoft iis| configuration settings.
.. |iis_pubroot| replace:: The public directory.
.. |iis_docroot| replace:: The home directory.
.. |iis_log_dir| replace:: The directory in which log files are located.
.. |iis_cache_dir| replace:: The directory in which cached data is located.
.. |image| replace:: The name of the image that identifies the operating system (and version) that will be used to create the virtual machine.
.. |include-dependencies| replace:: Indicates that when a cookbook has a dependency on one (or more) cookbooks, those cookbooks will also be uploaded.
.. |include_config| replace:: The external configuration files to be included.
.. |include_packages| replace:: A list of packages in a |yum| repository.
.. |insecure openstack| replace:: Indicates that the Auth URL will ignore SSL certificates.
.. |internet_host_address| replace:: The Internet host address for the network interface.
.. |inherits windows security| replace:: Indicates that a file inherits rights from its parent.
.. |initial| replace:: Use to create a |chef api client|, typically an administrator client on a freshly-installed |chef server|.
.. |input file| replace:: The name of a file to be used with the ``PUT`` or a ``POST`` request.
.. |installonly_limit| replace:: The number of packages listed in ``installonlypkgs``.
.. |installonlypkgs| replace:: A list of package provides that should only be installed (and never updated).
.. |installroot| replace:: Use to specify an alternate ``installroot``.
.. |installer_type windows| replace:: The type of windows installation package: ``:msi``, ``:inno``, ``:nsis``, ``:wise``, ``:installshield``, or ``:custom``. If this value is not specified, the provider will attempt to identify the installer type on its own and will use the best match. If this value cannot be properly specified, use the ``:custom`` value to pass a value to the ``installer_type`` attribute and then the ``options`` attribute to set the proper flags for a silent or quiet installation.
.. |internal-ip-address| replace:: A static IP address that is provided by |google compute engine|.
.. |interpreter| replace:: The script interpreter to be used during code execution.
.. |interpreter python| replace:: The |python| script interpreter to be used during code execution.
.. |interval| replace:: The frequency (in seconds) at which the |chef client| runs.
.. |ip_address| replace:: The IP address.
.. |ip_address floating_openstack| replace:: The floating IP address to be associated with a new |openstack| node (assuming that IP addresses have been allocated to the project).
.. |ip_address node| replace:: The IP address for the node.
.. |ip_address rabbitmq| replace:: The IP address for machine on which |rabbitmq| is running.
.. |ip_address virtual| replace:: The virtual IP address.



.. Description strings that begin with the letter J.
.. The pattern is |jxxxx| replace:: string.
.. 
.. 

.. J
.. 

.. |json attributes| replace:: The path to a file that contains |json| data.
.. |json first_run_string| replace:: A |json| string that is added to the first run of a |chef client|.
.. |json dsl environment chef type| replace:: This should always be set to ``environment``. Use this setting for any custom process that consumes environment objects outside of |ruby|.
.. |json dsl environment json class| replace:: This should always be set to ``Chef::Environment``. This setting is used internally by the |chef client| to auto-inflate an environment object. If objects are being rebuilt outside of |ruby|, ignore it.
.. |json dsl role chef type| replace:: This should always be set to ``role``. Use this setting for any custom process that consumes role objects outside of |ruby|.
.. |json dsl role json class| replace:: This should always be set to ``Chef::Role``. This setting is used internally by the |chef client| to auto-inflate an role object. If objects are being rebuilt outside of |ruby|, ignore it.




.. Description strings that begin with the letter K.
.. The pattern is |kxxxx| replace:: string.
.. 
.. 

.. K
.. 

.. |keepalive| replace:: Indicates whether HTTP keepalive is used (if available).
.. |keepalive request_time| replace:: The amount of time (in seconds) to wait for requests on a connection.
.. |keepcache| replace:: Indicates whether the cache of headers and packages are kept after a successful installation.
.. |keep_releases| replace:: The number of releases for which a backup is kept.
.. |kerberos-realm| replace:: The administrative domain to which a user belongs.
.. |kerberos-service| replace:: The service principal used during |kerberos|-based authentication.
.. |kernelpkgnames| replace:: A list of package names that are kernels.
.. |key| replace:: The private key that |knife| will use to sign requests made by the |chef api client| to the |chef server|.
.. |key apt_repository| replace:: The fingerprint of the key server or the URI for the |pgp| encryption key associated with the |apt| repository specified by ``repo_name``.
.. |key eucalyptus_access_id| replace:: The access key identifier for |eucalyptus|.
.. |key eucalyptus_access_secret| replace:: The secret access key for |eucalyptus|.
.. |key hp_secret| replace:: The secret key for the |hp cloud| account.
.. |key application_deploy| replace:: The RSA private key needed to deploy an application.
.. |key hp_account| replace:: The access key identifier for the |hp cloud| account.
.. |key_name resource registry_key| replace:: The path to the location in which a registry key will be created or from which a registry key will be deleted.
.. |key_name resource registry_key hives| replace:: The path must include the registry hive, which can be specified either as its full name or as the 3- or 4-letter abbreviation. For example, both ``HKLM\SECURITY`` and ``HKEY_LOCAL_MACHINE\SECURITY`` are both valid and equivalent. The following hives are valid: ``HKEY_LOCAL_MACHINE``, ``HKLM``, ``HKEY_CURRENT_CONFIG``, ``HKCC``, ``HKEY_CLASSES_ROOT``, ``HKCR``, ``HKEY_USERS``, ``HKU``, ``HKEY_CURRENT_USER``, and ``HKCU``.
.. |key_name windows_registry| replace:: The registry key to create or modify.
.. |keyserver apt_repository| replace:: The key server from which a |pgp| encryption key is downloaded.
.. |keytab-file| replace:: The keytab file that contains the encryption key required by |kerberos|-based authentication.

.. |kitchen_auto_init| replace:: Use to invoke the ``init`` command if |kitchen yml| is missing.
.. |kitchen_bare| replace:: Use to print the name of each instance, one instance per line.
.. |kitchen_create_gemfile| replace:: Use to create a |rubygems| file, if one does not already exist.
.. |kitchen_destroy| replace:: Use to set the destroy strategy used at the conclusion of a |kitchen| run. Possible values: ``always`` (always destroy instances), ``never`` (never destroy instances), or ``passing`` (only destroy instances that passed).
.. |kitchen_diagnose_all| replace:: Use to include all diagnostics.
.. |kitchen_diagnose_instances| replace:: Use to include instance diagnostics.
.. |kitchen_diagnose_loader| replace:: Use to include data loader diagnostics.
.. |kitchen_driver| replace:: Use to add one (or more) |kitchen| drivers to a |rubygems| file.
.. |kitchen_license| replace:: Use to specify the license for the |rubygems| file.
.. |kitchen_platform| replace:: Use to run |kitchen| against A single platform listed in the |kitchen yml| file. A |ruby| regular expression can be used to specify the platform against which |kitchen| will run.
.. |kitchen_platforms| replace:: Use to run |kitchen| against one (or more) platforms listed in the |kitchen yml| file. Use ``all`` to run |kitchen| against all platforms. Use a |ruby| regular expression to glob two (or more) platforms into a single run.
.. |kitchen_provisioner| replace:: Use to specify the default provisioner that is used by |kitchen|.


.. |knife azure certificate| replace:: The ``azure`` subcommand must use a management certificate for secure communication with |azure|.
.. |knife option_run_list| replace:: Use for the run-list that is passed as part of a the command itself.



.. Description strings that begin with the letter L.
.. The pattern is |lxxxx| replace:: string.
.. 
.. 

.. L
.. 

.. |latest| replace:: Indicates that the most recent version of a cookbook will be downloaded.
.. |ldap base_dn| replace:: The root |ldap| node under which all other nodes exist in the directory structure.
.. |ldap bind_dn| replace:: The distinguished name used to bind to the |ldap| server.
.. |ldap bind_password| replace:: The password for the binding user.
.. |ldap host| replace:: The name (or IP address) of the |ldap| server.
.. |ldap login_attribute| replace:: The |ldap| attribute that holds the user's login name.
.. |ldap port| replace:: The port on which the |ldap| server listens.
.. |ldap ssl_enabled| replace:: Indicates that |chef server oec| should make |ssl|-enabled connections to the |ldap| server.
.. |ldap system_adjective| replace:: A descriptive name for the login system that is displayed to users in the |chef server oec| management console.
.. |legacy_database_setting| replace:: Indicates that a default settings template will be generate legacy database configuration variables.
.. |level log| replace:: The level of logging that will be displayed by the |chef client|. The |chef client| uses the ``mixlib-log`` (https://github.com/opscode/mixlib-log) to handle logging behavior. Options (in order of priority): ``:debug``, ``:info``, ``:warn``, ``:error``, and ``:fatal``.
.. |level mdadm| replace:: The |raid| level.
.. |license| replace:: The type of license under which a cookbook is distributed: ``apachev2``, ``gplv2``, ``gplv3``, ``mit``, or ``none`` (default). This option will place the appropriate license notice in the pre-created files: ``Apache v2.0`` (for ``apachev2``), ``GPL v2`` (for ``gplv2``), ``GPL v3`` (for ``gplv3``), ``MIT`` (for ``mit``), or ``license 'Proprietary - All Rights Reserved`` (for ``none``). Be aware of the licenses for files inside of a cookbook and be sure to follow any restrictions they describe.
.. |license metadata_rb| replace:: The type of license under which a cookbook is distributed: ``Apache v2.0``, ``GPL v2``, ``GPL v3``, ``MIT``, or ``license 'Proprietary - All Rights Reserved`` (default). Please be aware of the licenses for files inside of a cookbook and be sure to follow any restrictions they describe.
.. |link_type| replace:: The type of link: ``:symbolic`` or ``:hard``.
.. |links interface_lag| replace:: An array of interfaces to be configured as members of a link aggregation group (LAG).
.. |links minimum_physical_lag| replace:: The minimum number of physical links that are required to ensure the availability of the link aggregation group (LAG).
.. |linode-api-key| replace:: The |linode| API key.
.. |linode-datacenter| replace:: The datacenter for the |linode| server.
.. |linode-flavor| replace:: The flavor of the |linode| server.
.. |linode-image| replace:: The image for the |linode| server.
.. |linode-kernel| replace:: The kernel for the |linode| server.
.. |linode-node-name| replace:: The name of the node in the |linode| environment.
.. |load-balancer| replace:: The load balancing application to which a server should be added.
.. |local chef_repo| replace:: Use to show files in the local |chef repo| instead of a remote location.
.. |local_directory| replace:: Indicates that only contents of the local directory will be returned.
.. |local_mode| replace:: Indicates that the |chef client| will be run in local mode, which allows all commands that work against the |chef server| to also work against the local |chef repo|.
.. |local_object| replace:: Indicates that only the local copy of an object should be deleted. (The remote copy will not be deleted.)
.. |local_template| replace:: Use to load a template from a local path. By default, the |chef client| loads templates from a cookbook's ``/templates`` directory. When this attribute is set to ``true``, use the ``source`` attribute specify the path to a template on the local node.
.. |localpkg_gpgcheck| replace:: Indicates whether |yum| should perform a |gnu pg| signature check on local packages.
.. |lockfile| replace:: A lock used by the |chef client| to ensure that only one instance of |chef client| or |chef solo| is modifying the system at any time. By default, the lock file is located in the ``file_cache_path`` so that intentional uses of multiple instances work automatically. If ``file_cache_path`` is located on an NF mount a different location for the lock file is recommended.
.. |logfile_yum| replace:: The full directory and file name for the location in which |yum| should write a log file.
.. |log_level| replace:: The level of logging that will be stored in a log file.
.. |log_location| replace:: The location in which log file output files will be saved. If this location is set to something other than ``STDOUT``, standard output logging will still be performed (otherwise there would be no output other than to a file).
.. |log_rotation| replace:: Use to define the log rotation policy for this service. Log files are rotated when they exceed ``file_maxbytes``. The maximum number of log files in the rotation is defined by ``num_to_keep``.
.. |long| replace:: Display long output when searching nodes while using the default summary format.
.. |long description| replace:: A longer description that ideally contains full instructions on the proper use of a cookbook, including definitions, libraries, dependencies, and so on. There are two ways to use this field: with the contents embedded in the field itself or with the contents pulled from a file at a specified path, such as a README.rdoc located at the top of a cookbook directory.
.. |lwrp action add apt_preference| replace:: Use to create a preferences file under ``/etc/apt/preferences.d``. This creates a "pin" for a package.
.. |lwrp action add apt_repository| replace:: Use to add an |apt| repository.
.. |lwrp action add aws_resource_tag| replace:: Use to add a tag to a resource.
.. |lwrp action add djbdns_rr| replace:: Use to add a new resource record to |tinydns|.
.. |lwrp action add iis_app| replace:: Use to add an application pool.
.. |lwrp action add iis_module| replace:: Use to add a module.
.. |lwrp action add iis_pool| replace:: Use to add an application pool.
.. |lwrp action add iis_site| replace:: Use to add a virtual site.
.. |lwrp action add nagios_nrpecheck| replace:: Use to create a |nagios nrpe| configuration file and restart the process.
.. |lwrp action add php_pear_channel| replace:: Use to add a channel to the channel list. Typically, this is used only for private channels. Public channels should be added using the ``:discover`` action.
.. |lwrp action add rabbitmq_user| replace:: Use to add a user (with a password).
.. |lwrp action add rabbitmq_vhost| replace:: Use to add a virtual host.
.. |lwrp action add windows_path| replace:: Use to add an item to a system path.
.. |lwrp action allow firewall_rule| replace:: Use to set a rule that allows incoming traffic.
.. |lwrp action alrm daemontools_service| replace:: Use to send the ``ALRM`` signal. The following command is used: ``svc -a``.
.. |lwrp action associate aws_elastic_ip| replace:: Use to associate the specified IP address with a node.
.. |lwrp action attach aws_ebs_volume| replace:: Use to attach an existing volume to a node.
.. |lwrp action build pacman_aur| replace:: Use to build a package using the information stored in a |archlinux pkgbuild| script.
.. |lwrp action cancel windows_reboot| replace:: Indicates to remove a reboot request from ``node.run_state``. This will cancel all previously-requested reboots.
.. |lwrp action clear_permissions rabbitmq_user| replace:: Use to clear permissions for a user.
.. |lwrp action config iis_app| replace:: Use to configure an application pool.
.. |lwrp action config iis_config| replace:: Use to run the configuration command on an instance of |microsoft iis|.
.. |lwrp action config iis_pool| replace:: Use to configure an application pool.
.. |lwrp action config iis_site| replace:: Use to configure a virtual site.
.. |lwrp action cont daemontools_service| replace:: Use to send the ``CONT`` signal. The following command is used: ``svc -c``.
.. |lwrp action create aws_ebs_volume| replace:: Use to create a new |amazon ebs| volume. This action will only make the API call to create a new volume, which will get a random volume identifier that is generated by |amazon ec2|. This identifier can be attached in the same resource by specifying the actions as an array.
.. |lwrp action create cloudkick_check| replace:: Use to create a |cloudkick| check.
.. |lwrp action create cloudkick_monitor| replace:: Use to create a |cloudkick| monitor.
.. |lwrp action create dynect_rr| replace:: Use to create a record.
.. |lwrp action create freebsd_port| replace:: Use to create a port options file using a template or an options |ruby hash|.
.. |lwrp action create gunicorn_config| replace:: Use to create a |gunicorn| configuration file.
.. |lwrp action create python_virtualenv| replace:: Use to create a virtual |python| environment.
.. |lwrp action create samba_user| replace:: Use to create a user.
.. |lwrp action create transmission_torrent_file| replace:: Use to download a file using the |bittorrent| protocol.
.. |lwrp action create user| replace:: Use to create a user.
.. |lwrp action create windows_autorun| replace:: Use to add an item to the list of programs that are run at login.
.. |lwrp action create windows_registry| replace:: Use to create a registry key with the provided values.
.. |lwrp action create windows_shortcut| replace:: Use to create a shortcut.
.. |lwrp action create yum_globalconfig| replace:: Use to create a |yum| global configuration file.
.. |lwrp action create yum_repository| replace:: Use to create a |yum| repository file and build a |yum| repository listing.
.. |lwrp action delete dynect_rr| replace:: Use to delete a record.
.. |lwrp action delete gunicorn_config| replace:: Use to delete a |gunicorn| configuration file.
.. |lwrp action delete iis_app| replace:: Use to delete an application pool.
.. |lwrp action delete iis_module| replace:: Use to delete a module.
.. |lwrp action delete iis_pool| replace:: Use to delete an application pool.
.. |lwrp action delete iis_site| replace:: Use to delete a virtual site.
.. |lwrp action delete python_virtualenv| replace:: Use to delete a virtual |python| environment.
.. |lwrp action delete rabbitmq_user| replace:: Use to delete a user.
.. |lwrp action delete rabbitmq_vhost| replace:: Use to delete a virtual host.
.. |lwrp action delete samba_user| replace:: Use to enable a user.
.. |lwrp action delete yum_globalconfig| replace:: Use to delete a |yum| global configuration file.
.. |lwrp action delete yum_repository| replace:: Use to delete a |yum| repository file.
.. |lwrp action deny firewall_rule| replace:: Use to set a rule that denies incoming traffic.
.. |lwrp action deregister aws_elastic_lb| replace:: Use to remove an instance from a load balancer.
.. |lwrp action detach aws_ebs_volume| replace:: Use to detach the specified volume from a node.
.. |lwrp action disable bluepill_service| replace:: Use to disable a service by removing a pill link.
.. |lwrp action disable chef_handler| replace:: Use to disable the handler for the current |chef client| run on the current node.
.. |lwrp action disable cloudkick_check| replace:: Use to disable a |cloudkick| check.
.. |lwrp action disable cloudkick_monitor| replace:: Use to disable a |cloudkick| monitor.
.. |lwrp action disable daemontools_service| replace:: Use to disable a service by removing the link to the service directory.
.. |lwrp action disable firewall| replace:: Use to disable a firewall. Rules will be de-activated and the node will be put into an unprotected state.
.. |lwrp action disable supervisor_fcgi| replace:: Use to disable a |fcgi| process.
.. |lwrp action disable supervisor_group| replace:: Use to disable a group.
.. |lwrp action disable supervisor_service| replace:: Use to disable a service at boot time.
.. |lwrp action disable rabbitmq_plugin| replace:: Use to disable a plugin.
.. |lwrp action disassociate aws_elastic_ip| replace:: Use to disassociate the specified IP address from a node.
.. |lwrp action discover php_pear_channel| replace:: Use to initialize a channel from its server.
.. |lwrp action enable bluepill_service| replace:: Use to enable a service by adding a pill link.
.. |lwrp action enable chef_handler| replace:: Use to enable the handler for the current |chef client| run on the current node.
.. |lwrp action enable cloudkick_check| replace:: Use to enable a |cloudkick| check.
.. |lwrp action enable cloudkick_monitor| replace:: Use to enable a |cloudkick| monitor.
.. |lwrp action enable daemontools_service| replace:: Use to enable a service by setting up the service directory and link.
.. |lwrp action enable firewall| replace:: Use to enable a firewall. Rules that have been defined for that firewall will be activated.
.. |lwrp action enable rabbitmq_plugin| replace:: Use to enable a plugin.
.. |lwrp action enable samba_user| replace:: Use to enable a user.
.. |lwrp action enable supervisor_fcgi| replace:: Use to enable a |fcgi| process.
.. |lwrp action enable supervisor_group| replace:: Use to enable a group.
.. |lwrp action enable supervisor_service| replace:: Use to enable a service at boot time.
.. |lwrp action force_remove aws_resource_tag| replace:: Use to remove all tags from a resource.
.. |lwrp action hup daemontools_service| replace:: Use to send the ``HUP`` signal. The following command is used: ``svc -h``.
.. |lwrp action install dmg_package| replace:: Use to install an application. (There is no ``:uninstall`` action because on in the |mac os x| environment, uninstalling an application only requires it being dragged to the trash can.)
.. |lwrp action install gunicorn_install| replace:: Use to install a virtual environment.
.. |lwrp action install maven| replace:: Use to install |apache maven|.
.. |lwrp action install pacman_aur| replace:: Use to install a package that has been built with the ``:build`` action.
.. |lwrp action install pacman_group| replace:: Use to install a group.
.. |lwrp action install php_pear| replace:: Use to install a |pear| package. If a version is provided, use to install that version.
.. |lwrp action install python_pip| replace:: Use to install a |python pip| package. If a version is provided, use to install that version.
.. |lwrp action install webpi| replace:: Use to install a product.
.. |lwrp action install windows_feature| replace:: Use to install a server role, role service, or feature.
.. |lwrp action install windows_package| replace:: Use to install a package.
.. |lwrp action int daemontools_service| replace:: Use to send the ``INT`` signal. The following command is used: ``svc -i``.
.. |lwrp action join riak_cluster| replace:: Use to join a local node to a cluster.
.. |lwrp action kill daemontools_service| replace:: Use to send the ``KILL`` signal. The following command is used: ``svc -k``.
.. |lwrp action load bluepill_service| replace:: Use to load a service's pill to |bluepill|.
.. |lwrp action modify windows_registry| replace:: Use to modify an existing registry key with the provided values.
.. |lwrp action once daemontools_service| replace:: Use to start a service. The service does not restart if it stops. The following command is used: ``svc -o``.
.. |lwrp action pause daemontools_service| replace:: Use to send the ``STOP`` signal to pause a service. The following command is used: ``svc -p``.
.. |lwrp action prune aws_ebs_volume| replace:: Use to prune older snapshots from a node.
.. |lwrp action purge homebrew| replace:: This action is inherited from the |resource package| resource resource. For |homebrew|, this is effectively the same as the ``:remove`` action.
.. |lwrp action purge php_pear| replace:: Use to purge a |pear| package. This is identical in behavior to the ``:remove`` action.
.. |lwrp action purge python_pip| replace:: Use to purge a |python pip| package. This is identical in behavior to the ``:remove`` action.
.. |lwrp action reject firewall_rule| replace:: Use to set a rule that rejects incoming traffic.
.. |lwrp action reload supervisor_fcgi| replace:: Use to reload a |fcgi| process.
.. |lwrp action reload supervisor_group| replace:: Use to reload a group.
.. |lwrp action reload supervisor_service| replace:: Use to reload a service.
.. |lwrp action remove apt_preference| replace:: Use to remove a preferences file, which will "unpin" a package.
.. |lwrp action remove apt_repository| replace:: Use to delete an |apt| repository.
.. |lwrp action remove aws_resource_tag| replace:: Use to remove a tag from a resource that matches one (or more) tags.
.. |lwrp action remove nagios_nrpecheck| replace:: Use to remove a |nagios nrpe| configuration file and restart the process.
.. |lwrp action remove pacman_group| replace:: Use to remove a group.
.. |lwrp action remove php_pear| replace:: Use to remove a |pear| package.
.. |lwrp action remove php_pear_channel| replace:: Use to remove a channel from the channel list.
.. |lwrp action remove python_pip| replace:: Use to remove a |python pip| package.
.. |lwrp action remove user| replace:: Use to remove a user.
.. |lwrp action remove windows_autorun| replace:: Use to remove an item from the list of programs that are run at login.
.. |lwrp action remove windows_feature| replace:: Use to remove a server role, role service, or feature.
.. |lwrp action remove windows_package| replace:: Use to remove a package.
.. |lwrp action remove windows_path| replace:: Use to remove an item from a system path.
.. |lwrp action replace dynect_rr| replace:: Use to replace an existing record.
.. |lwrp action request windows_reboot| replace:: Use to request a reboot at the completion of a successful |chef client| run. This action requires ``WindowsRebootHandler`` to be registered as a report handler.
.. |lwrp action reregister aws_elastic_lb| replace:: Use to add an instance to a load balancer.
.. |lwrp action reset firewall| replace:: Use to reset a firewall. Rules will be de-activated and the node will be put into the default state. This action does not enable or disable a firewall.
.. |lwrp action restart bluepill_service| replace:: Use to restart a service.
.. |lwrp action restart daemontools_service| replace:: Use to restart a service using the ``TERM`` signal. The following command is used: ``svc -t``.
.. |lwrp action restart iis_pool| replace:: Use to restart an application pool.
.. |lwrp action restart iis_site| replace:: Use to restart a virtual site.
.. |lwrp action restart supervisor_fcgi| replace:: Use to restart a |fcgi| process.
.. |lwrp action restart supervisor_group| replace:: Use to restart a group.
.. |lwrp action restart supervisor_service| replace:: Use to restart a service.
.. |lwrp action run powershell| replace:: Use to run a script.
.. |lwrp action run windows_batch| replace:: Use to run a batch file.
.. |lwrp action set_permissions rabbitmq_user| replace:: Use to set permissions for a user. (The virtual host is optional.)
.. |lwrp action snapshot aws_ebs_volume| replace:: Use to create a snapshot of the volume.
.. |lwrp action start bluepill_service| replace:: Use to start a service.
.. |lwrp action start daemontools_service| replace:: Use to start a service. If the service stops, restart it. The following command is used: ``svc -u``.
.. |lwrp action start iis_pool| replace:: Use to start an application pool.
.. |lwrp action start iis_site| replace:: Use to start a virtual site.
.. |lwrp action start supervisor_fcgi| replace:: Use to start a |fcgi| process.
.. |lwrp action start supervisor_group| replace:: Use to start a group.
.. |lwrp action start supervisor_service| replace:: Use to start a service.
.. |lwrp action stop bluepill_service| replace:: Use to stop a service.
.. |lwrp action stop daemontools_service| replace:: Use to stop a service using the ``STOP`` signal. The following command is used: ``svc -p``.
.. |lwrp action stop iis_pool| replace:: Use to stop an application pool.
.. |lwrp action stop iis_site| replace:: Use to stop a virtual site.
.. |lwrp action stop supervisor_fcgi| replace:: Use to stop a |fcgi| process.
.. |lwrp action stop supervisor_group| replace:: Use to stop a group.
.. |lwrp action stop supervisor_service| replace:: Use to stop a service.
.. |lwrp action tap homebrew| replace:: Use to enable a formula |homebrew| repository located on |git|.
.. |lwrp action term daemontools_service| replace:: Use to send the ``TERM`` signal. The following command is used: ``svc -t``.
.. |lwrp action upgrade homebrew| replace:: This action is inherited from the |resource package| resource resource. For |homebrew|, there isn't an upgrade, rather |homebrew| performs the ``:install`` action every time, effectively upgrading a package when it is newer than the one installed previously.
.. |lwrp action untap homebrew| replace:: Use to disable a formula |homebrew| repository located on |git|.
.. |lwrp action unzip windows_zipfile| replace:: Use to unzip a compressed file.
.. |lwrp action up daemontools_service| replace:: Use to start a service. If the service stops, restart it. The following command is used: ``svc -u``.
.. |lwrp action update aws_resource_tag| replace:: Use to modify a tag already assigned to a resource.
.. |lwrp action update dynect_rr| replace:: Use to update an existing record.
.. |lwrp action update php_pear_channel| replace:: Use to update an existing channel.
.. |lwrp action upgrade php_pear| replace:: Use to upgrade a |pear| package. If a version is provided, use to upgrade to that version.
.. |lwrp action upgrade python_pip| replace:: Use to upgrade a |python pip| package. If a version is provided, use to upgrade to that version.
.. |lwrp action wait_for_ringready riak_cluster| replace:: Use to wait for cluster membership to converge ("all nodes in the cluster agree on the ring state") before joining a local node to a cluster.




.. Description strings that begin with the letter M.
.. The pattern is |mxxxx| replace:: string.
.. 
.. 

.. M
.. 


.. |maintainer| replace:: The name of the person responsible for maintaining a cookbook, either an individual or an organization.
.. |maintainer email| replace:: The email address for the person responsible for maintaining a cookbook. Only one email can be listed here, so if this needs to be forwarded to multiple people consider using an email address that is already setup for mail forwarding.
.. |manage_symlink_source| replace:: Indicates that the |chef client| will detect and manage the source file for a symlink.
.. |manual_list| replace:: Indicates that a search query is a space-separated list of servers.
.. |max_args| replace:: The maximum number of arguments per command line.
.. |max_chars| replace:: The maximum size (in characters) for a command line.
.. |max_connections| replace:: The maximum number of allowed concurrent connections.
.. |max_retry| replace:: The maximum number of attempts made to retrieve a file before returning an error.
.. |maximum_transmission_unit| replace:: The maximum transmission unit (MTU) for the network interface.
.. |mdpolicy| replace:: The metadata download policy for the repository metadata index.
.. |media location| replace:: The geographic location for a virtual machine and its services.
.. |medium| replace:: Display more, but not all, of a node's data when searching using the default summary format.
.. |members_group| replace:: Indicates which users should be set or appended to a group.
.. |memory mb| replace:: The amount of memory, in megabytes. Possible values: ``512``, ``1024``, ``1536``, ``2048``, ``4096``, ``8192``, ``12288``, or ``16384``.
.. |memory maximum_redis| replace:: The maximum amount of memory (in bytes).
.. |memory maximum_policy_redis| replace:: The policy applied when the maximum amount of memory is reached. Possible values: ``allkeys-lru`` (remove keys, starting with those used least frequently), ``allkeys-random`` (remove keys randomly), ``noeviction`` (don't expire, return an error on write operation), ``volatile-lru`` (remove expired keys, starting with those used least frequently), ``volatile-random`` (remove expired keys randomly), and ``volatile-ttl`` (remove keys, starting with nearest expired time).
.. |message http_request| replace:: The message that is sent by the HTTP request.
.. |message resource log| replace:: The message to be added to a log file.
.. |metadata attributes| replace:: The list of attributes that are required to configure a cookbook. An attribute name is required, followed by any of these options: ``display_name`` (the name that appears in the user interface), ``description`` (a short description), ``choice`` (an array of choices that are presented to a user), ``calculated`` (indicates if the default value is calculated by the recipe), ``type`` (the type of value, either ``string``, ``array``, or ``hash``), ``required`` (the level of user input, either ``required``, ``recommended``, or ``optional``), ``recipes`` (an array of recipes), or ``default`` (the attribute's default value).
.. |metadata_expire| replace:: The amount of time (in seconds) before metadata for this repository expires.
.. |metadata rb conflicts| replace:: Indicates that a cookbook conflicts with another cookbook or cookbook version. Use a version constraint to define constraints for cookbook versions: ``<`` (less than), ``<=`` (less than or equal to), ``=`` (equal to), ``>=`` (greater than or equal to), ``~>`` (approximately greater than), or ``>`` (greater than). This field requires that a cookbook with a matching name and version does not exist on the |chef server|. When the match exists, the |chef server| will ensure that any conflicted cookbooks are not included with the set of cookbooks that are sent to the node when the |chef client| runs.
.. |metadata rb depends| replace:: Indicates that a cookbook has a dependency on another cookbook. Use a version constraint to define dependencies for cookbook versions: ``<`` (|ruby less|), ``<=`` (|ruby less_or_equal|), ``=`` (|ruby equal|), ``>=`` (|ruby greater_optimistic|), ``~>`` (|ruby greater_pessimistic|), or ``>`` (|ruby greater|). This field requires that a cookbook with a matching name and version exists on the |chef server|. When the match exists, the |chef server| will include the dependency as part of the set of cookbooks that are sent to the node when the |chef client| runs. It is very important that the ``depends`` field contain accurate data. If a dependency statement is inaccurate, the |chef client| may not be able to complete the configuration of the system.
.. |metadata rb provides| replace:: Adds a recipe, definition, or resource that is provided by this cookbook, should the auto-populated list be insufficient.
.. |metadata rb recommends| replace:: Adds a dependency on another cookbook that is recommended, but not required. A cookbook will still work even if recommended dependencies are not available.
.. |metadata rb replaces| replace:: Indicates that this cookbook should replace another (and can be used in-place of that cookbook).
.. |metadata rb suggests| replace:: Adds a dependency on another cookbook that is suggested, but not required. This field is weaker than ``recommends``; a cookbook will still work even when suggested dependencies are not available.
.. |metadata rb supports| replace:: Indicates that a cookbook has a supported platform. Use a version constraint to define dependencies for platform versions: ``<`` (less than), ``<=`` (less than or equal to), ``=`` (equal to), ``>=`` (greater than or equal to), ``~>`` (approximately greater than), or ``>`` (greater than). To specify more than one platform, use more than one ``supports`` field, once for each platform.
.. |method request type| replace:: The request method: ``DELETE``, ``GET``, ``POST``, or ``PUT``.
.. |migrate command_run| replace:: Indicates that the migration command will be run.
.. |migration command_string| replace:: A string that contains a shell command that can be executed to run a migration operation.
.. |minute cron| replace:: The minute at which the |cron| entry should run (0 - 59).
.. |mirror_expire yum| replace:: The amount of time (in seconds) after which a locally-cached mirror list will expire. When the current ``mirrorlist`` is less than this amount of time, |yum| will not download another copy of the mirror list.
.. |mirrorlist| replace:: A string that contains the URI to the mirror list, starting with ``http://``, ``ftp://``, or ``file://``. Use ``file://`` if the mirror list is a text file or resides on the local system.
.. |mirrorlist yum| replace:: A URL that points to a file that contains a list of base URLs. This attribute can be used with or instead of ``baseurl``.
.. |mirrorlist_expire yum| replace:: The amount of time (in seconds) after which a locally-cached mirror list will expire. An alias for ``mirror_expire``.
.. |mismatch| replace:: Use to show only matching versions.
.. |mod_aspnet| replace:: Use to install |microsoft aspdotnet| runtime components.
.. |mod_auth_basic| replace:: Use to install support for basic authentication.
.. |mod_auth_windows| replace:: Use to install |windows| authentication, which allows clients to authenticate using |kerberos| or |ntlm|.
.. |mod_compress_dynamic| replace:: Use to install dynamic content compression support. Enabling dynamic compression allows a more efficient use of bandwidth; however, if the server's processor utilization is already high, the CPU load imposed by dynamic compression may affect site performance.
.. |mod_compress_static| replace:: Use to install support for static content compression.
.. |mod_deploy| replace:: Use to install the |microsoft web deployment tool|, which simplifies the migration, management, and deployment of |microsoft iis| web servers, applications, and websites.
.. |mod_iis6_metabase_compat| replace:: Use to install |microsoft iis| the metabase compatibility component.
.. |mod_isapi| replace:: Use to install extension and filter support for |microsoft isapi|.
.. |mod_logging| replace:: Use to install and enable HTTP logging for website activity, logging tools, and custom logging (for HTTP request/response headers, |microsoft iis| server variables, and client-side fields with simple configuration).
.. |mod_management| replace:: Use to install the management console, which can be used to support the management of local and remote web servers.
.. |mod_mvc3| replace:: Use to install |microsoft dotnet| MVC3 runtime components.
.. |mod_security| replace:: Use to install URL authorization (which authorizes client access to the URLs that comprise a web application), request filtering (which configures rules to block selected client requests), and IP security (which allows or denies access to content based on an IP address or a domain name).
.. |mod_tracing| replace:: Use to install support for tracing |microsoft aspdotnet| applications and failed requests.
.. |mod_urlrewrite| replace:: Use to install support for URL rewrite rules using rule templates, rewrite maps, and |microsoft dotnet| providers.
.. |mode lacp| replace:: The Link Aggregation Control Protocol (LACP) mode. Possible values: ``active`` (active mode), ``disable`` (not used), or ``passive`` (passive mode).
.. |mode resource_directory| replace:: The octal mode for a directory. If ``mode`` is not specified and if the directory already exists, the existing mode on the directory is used. If ``mode`` is not specified, the directory does not exist, and the ``:create`` action is specified, the |chef client| will assume a mask value of ``0777`` and then apply the umask for the system on which the directory will be created to the ``mask`` value. For example, if the umask on a system is ``022``, the |chef client| would use the default value of ``0755``.
.. |mode resource_directory_11-4| replace:: The octal mode for a directory. If ``mode`` is not specified and if the directory already exists, the existing mode on the directory is used. If ``mode`` is not specified, the directory does not exist, and the ``:create`` action is specified, the |chef client| will assume a mask value of ``0777`` and then apply the umask for the system on which the directory will be created to the ``mask`` value. For example, if the umask on a system is ``022``, the |chef client| would use the default value of ``0755``.
.. |mode resource_file| replace:: The octal mode for a file. If ``mode`` is not specified and if the file already exists, the existing mode on the file is used. If ``mode`` is not specified, the file does not exist, and the ``:create`` action is specified, the |chef client| will assume a mask value of ``0777`` and then apply the umask for the system on which the file will be created to the ``mask`` value. For example, if the umask on a system is ``022``, the |chef client| would use the default value of ``0755``.
.. |mode resource_file_11-4| replace:: The octal mode for a file. If ``mode`` is not specified and if the file already exists, the existing mode on the file is used. If ``mode`` is not specified, the file does not exist, and the ``:create`` action is specified, the |chef client| will assume a mask value of ``0777`` and then apply the umask for the system on which the file will be created to the ``mask`` value. For example, if the umask on a system is ``022``, the |chef client| would use the default value of ``0755``.
.. |mode *nix| replace:: The octal mode that is passed to |chmod|. If the value is specified as a quoted string, it will work exactly as if the ``chmod`` command was passed. If the value is specified as an integer, prepend a zero (``0``) to the value to ensure it is interpreted as an octal number. For example, to assign read, write, and execute rights for all users, use ``0777`` or ``'777'``; for the same rights, plus the sticky bit, use ``01777`` or ``'1777'``.
.. |mode windows security| replace:: The octal mode that is translated into rights for |windows| security. Values up to ``0777`` are allowed (no sticky bits) and mean the same in |windows| as they do in |unix|, where ``4`` equals ``GENERIC_READ``, ``2`` equals ``GENERIC_WRITE``, and ``1`` equals ``GENERIC_EXECUTE``. This attribute cannot be used to set ``:full_control``. This attribute has no effect if not specified, but when this attribute and ``rights`` are both specified, the effects will be cumulative.
.. |month cron| replace:: The month in the year on which a |cron| entry should run (1 - 12).
.. |mount_point| replace:: The directory (or path) in which the device should be mounted.
.. |multilib_policy| replace:: Use to install all possible architectures for any package or only the best architecture for the platform. Possible values: ``all`` or ``best``.

.. Description strings that begin with the letter N.
.. The pattern is |nxxxx| replace:: string.
.. 
.. 

.. N
.. 


.. |name admin_webui| replace:: The name of the administrator for the web user interface.
.. |name apple_disk_image| replace:: The name of the |apple disk image| (if it is not the same as the ``app`` attribute or if the name of the application contains spaces).
.. |name application| replace:: The name of the application.
.. |name application_pool| replace:: The name of the application pool.
.. |name availability_zone| replace:: The name of the availability zone. Each availability zone is unique within a region.
.. |name class_chef_handler| replace:: The name of the handler class. This can be module name-spaced.
.. |name client_webui| replace:: The name of the |chef server| web user interface.
.. |name cluster| replace:: The name of the cluster.
.. |name command| replace:: The name of the command to be executed.
.. |name cookbook| replace:: The name of the cookbook.
.. |name cookbook_authorized_keys| replace:: The name of the cookbook in which the ``authorized_keys`` template is located.
.. |name data_bag| replace:: The name of the data bag.
.. |name data_bag_item| replace:: The name of a specific item within a data bag.
.. |name distribution| replace:: The name of the distribution.
.. |name dns_azure| replace:: The name of the DNS server (also known as the |azure hosted_service|).
.. |name environment| replace:: The name of the environment.
.. |name environment_eucalyptus| replace:: The name of the |eucalyptus| environment.
.. |name firewall| replace:: The name of the firewall.
.. |name firewall_rule| replace:: The name of the firewall rule.
.. |name fqdn| replace:: The |fqdn| of the host.
.. |name git_repo| replace:: The name of the |git| repository.
.. |name key_gnupg| replace:: The name of the |gnupg| key.
.. |name group| replace:: The name of the group.
.. |name group_owner_config_file| replace:: The name of the group that owns the configuration file.
.. |name group_owner_python_virtualenv| replace:: The name of the group that owns the virtual |python| environment.
.. |name group_process_owner| replace:: The name of the group that owns a process. This is required when starting any executable as a daemon.
.. |name group_search| replace:: The name of the group to be searched.
.. |name group_service_directory| replace:: The name of the group for which access to service directory and scripts is granted.
.. |name group_sudo| replace:: The name of the group for which |sudo cmd| privileges are provided.
.. |name gunicorn_process| replace:: The name of an instance of |gunicorn|. This attribute is only necessary when more than one instance of |gunicorn| is running.
.. |name interface| replace:: The name of the interface.
.. |name key_directory| replace:: The name of the key that will be created, deleted, or modified.
.. |name lag| replace:: The name of the link aggregation group (LAG).
.. |name_link| replace:: The name of the link.
.. |name load_balancer| replace:: The name of the load balancer.
.. |name local_riak_node| replace:: The name of the local node, as identified by the ``riak.erlang.node_name`` attribute.
.. |name module| replace:: The name of the module.
.. |name monitor| replace:: The name of the monitor.
.. |name nagios_nrpecheck| replace:: The name of the |nagios nrpe| check.
.. |name node| replace:: The name of the node.
.. |name node_client_rb| replace:: This is used to determine which configuration should be applied and to set the ``client_name`` (which is the name used when authenticating to a |chef server|). The default value is set automatically to be the |fqdn| of the |chef client|, as detected by |ohai|. In general, leaving this setting blank and letting |ohai| assign the |fqdn| of the node as the ``node_name`` during each |chef client| run is the recommended approach.
.. |name openstack_compute| replace:: The |openstack compute| user name.
.. |name openstack_tenant| replace:: The |openstack compute| tenant name.
.. |name owner| replace:: The name of the owner.
.. |name package| replace:: The name of the package.
.. |name package_group| replace:: The name of the package group.
.. |name package_yum| replace:: One of the following: the name of a package, the name of a package and its architecture; the name of a dependency.
.. |name pear_channel| replace:: The name of a channel that a |pear| installation needs to know about (i.e. "channel discovery").
.. |name pid_file| replace:: The file name for the process identifier (PID) file.
.. |name plugin| replace:: The name of the plugin.
.. |name port| replace:: The name of the port.
.. |name process_supervisor| replace:: A |python| string expression that is used to compose the |python supervisor| process name for a process.
.. |name program| replace:: The name of the program.
.. |name proxy| replace:: The user name for the proxy.
.. |name repository_apt| replace:: The name of the |apt| repository.
.. |name repository_yum| replace:: The name of the |yum| repository.
.. |name ruby_block| replace:: The name of the |ruby| block.
.. |name scm_provider| replace:: The name of the source control management provider.
.. |name server| replace:: The name of the server.
.. |name service| replace:: The name of the service.
.. |name site| replace:: The name of the site.
.. |name sname_or_name| replace:: Indicates whether the ``node_name`` attribute is a short node name (``sname``) or a long node name (``name``). A node with a long node name cannot communicate with a node with a short node name.
.. |name status| replace:: Indicates that only the names of files with a status of ``Added``, ``Deleted``, ``Modified``, or ``Type Changed`` will be shown.
.. |name template_settings_file| replace:: The name of a template that will be rendered to create the local settings file.
.. |name user| replace:: The name of the user.
.. |name user api_dns_update| replace:: The |dns update api| username.
.. |name user bluebox| replace:: The user name for the |bluebox| server.
.. |name user bluelock| replace:: The user name for the |bluelock| account.
.. |name user cron| replace:: The name of the user that runs the command. If the ``user`` attribute is changed, the original ``user`` for the |crontab| program will continue to run until that |crontab| program is deleted.
.. |name user postgresql| replace:: The user name for the |postgresql| account.
.. |name user rackspace| replace:: The user name for the |rackspace| account.
.. |name user vcloud| replace:: The |vcloud| user name.
.. |name user yum_basic_auth| replace:: The user name for basic authentication to a repository or to a URL.
.. |name virtual_host| replace:: The name of the virtual host.
.. |name virtual_machine| replace:: The host name for the virtual machine.
.. |name vlan| replace:: The name of the VLAN.
.. |name windows_feature| replace:: The name of a server role, role service, or feature. Depending on the provider being used, the same feature may have different names. For example: ``DHCPServer`` vs. ``DHCP``; ``DNS-Server-Full-Role`` vs. ``DNS``.
.. |name windows_package| replace:: The display name of the application installation package. This is the same as the ``DisplayName`` registry value in the uninstallation data that is created during package installation.
.. |name windows_shortcut| replace:: The name of the |windows| shortcut.
.. |name windows_registry_value| replace:: The name of the value to be stored in the |windows| registry.
.. |name only| replace:: Indicates that only the names of modified files will be shown.
.. |netmask| replace:: The decimal representation of the network mask.
.. |network_name| replace:: The name of the network in which a virtual machine is created.
.. |network_address| replace:: The address for the network interface.
.. |no name tags| replace:: Indicates that tag names will not be displayed in the output.
.. |no_bootstrap| replace:: Indicates whether the |chef client| bootstrap is enabled.
.. |no_diff| replace:: Use to show a diff when a file changes.
.. |no_editor| replace:: Indicates that |chef editor| will not be opened; data will be accepted as-is.
.. |no_force| replace:: Use to force the upload of files even if they haven't been changed.
.. |no_host_key_verify| replace:: Use ``--no-host-key-verify`` to disable host key verification.
.. |no_lazy_load| replace:: Use to download all cookbook files and templates at the beginning of the |chef client| run.
.. |no_options| replace:: This command does not have any specific options.
.. |no_pretty| replace:: Use ``--no-pretty`` to disable |prettyprint| output for |json|.
.. |no_proxy| replace:: A comma-separated list of URLs that do not need a proxy.
.. |no_recurse_delete| replace:: Use ``--recurse`` to delete directories recursively.
.. |no_recurse_deps| replace:: Use ``--recurse`` to list dependencies recursively.
.. |no_recurse_diff| replace:: Use ``--no-recurse`` to disable listing a directory recursively.
.. |no_recurse_download| replace:: Use ``--no-recurse`` to disable downloading a directory recursively.
.. |no_recurse_upload| replace:: Use ``--no-recurse`` to disable uploading a directory recursively.
.. |node_environment| replace:: The environment to which the node is associated.
.. |node_fqdn| replace:: The |fqdn| for the node.
.. |node_last_checkin| replace:: The time of the most recent check-in by the |chef client| running on that node.
.. |node_uptime| replace:: The amount of time the node has been running.
.. |node_hostname| replace:: The hostname to which the node will connect.
.. |node_purge| replace:: The name of the node to be deleted, if different from the server name.
.. |node_path| replace:: The location in which to look for node-specific recipes.
.. |non_unique_members| replace:: Indicates that ``gid`` duplication is allowed. May only be used with the ``Groupadd`` provider.
.. |nopasswd| replace:: Indicates whether a password must be supplied when invoking |sudo cmd|.
.. |notes cloudkick| replace:: Notes about the monitor.
.. |num_to_keep| replace:: The number of log files to keep.
.. |num_versions| replace:: The number of cookbook versions to include in the response, where ``n`` is the number of cookbook versions. For example: ``num_versions=3`` will return the three latest versions, in descending order (newest to oldest). Use ``num_versions=all`` to return all cookbook versions. If ``num_versions`` is not specified, it will return a single cookbook version. ``0`` is an invalid input (it will return an empty array for the versions of each cookbook).
.. |number_of_processes| replace:: The number of instances that will be started.
.. |number_of_processes_start| replace:: An integer offset that is used to compute the point at which the number of processes begins.



.. Description strings that begin with the letter O.
.. The pattern is |oxxxx| replace:: string.
.. 
.. 

.. O
.. 

.. |oauth_key cloudkick| replace:: The |oauth| key used to authenticate to the |cloudkick| API.
.. |oauth_secret cloudkick| replace:: The |oauth| secret used to authenticate to the |cloudkick| API.
.. |obsoletes| replace:: Indicates whether obsoletes logic processing is used during distribution level upgrades.
.. |onboot  ifconfig| replace:: Indicates that the network interface should be brought up on boot when this value is set to ``yes``.
.. |once| replace:: Indicates that the |chef client| is run once and that interval and splay options are cancelled.
.. |one_column| replace:: Indicates that only one column of results will be shown.
.. |onparent ifconfig| replace:: Indicates that the network interface should be brought up when its parent interface is brought up when this value is set to ``yes``.
.. |openid_cstore_couchdb| replace:: Indicates whether |open id| data is stored in |couch db| (instead of the file system).
.. |openid_cstore_path| replace:: The location in which |open id| data is stored in the file system.
.. |opscode_support| replace:: This setting should not be changed without first consulting an |company_name| support engineer.
.. |options freebsd| replace:: A |ruby hash| with the option name as the key and a boolean value. For example: ``"APACHE" => true``.
.. |options mount| replace:: An array or string that contains mount options. If this value is a string, it will be converted to an array.
.. |orgmapper desc| replace:: |orgmapper| is a tool that can be used with non-hosted |chef server oec| to provide administrative access to back-end objects. |orgmapper| can be a dangerous tool and should be used carefully. In general, anything that needs to be done around automating user creation, making permissions changes, and so on, can be done more easily using the ``knife-acl`` plugin and by using the |chef server oec| web interface.
.. |orgmapper desc_private_chef| replace:: |orgmapper| is a tool that can be used with |chef private| to provide administrative access to back-end objects. |orgmapper| can be a dangerous tool and should be used carefully. In general, anything that needs to be done around automating user creation, making permissions changes, and so on, can be done more easily using the ``knife-acl`` plugin and by using the |chef private| web interface.
.. |os-disk-name| replace:: The operating system type of the |azure| OS image: ``Linux`` or ``Windows``.
.. |override_runlist| replace:: Replace the current run list with the specified items.
.. |overwrite_groups| replace:: Indicates whether |yum| will use all matching repositories or only the last matching repository.
.. |owner python_virtualenv| replace:: The owner of the virtual |python| environment.
.. |owner directory_service| replace:: The owner of a service directory and scripts.
.. |owner file| replace:: The owner of a file.
.. |owner file_artifact| replace:: The owner of an artifact file.
.. |owner file_config| replace:: The owner of a configuration file.
.. |owner system| replace:: The system owner responsible for the checked-out code.
.. |owner resource link| replace:: The owner associated with a symbolic link.
.. |owner windows security| replace:: A string or ID that identifies the group owner by user name, including fully qualified user names such as ``domain\user`` or ``user@domain``. If this value is not specified, existing owners will remain unchanged and new owner assignments will use the current user (when necessary).







.. Description strings that begin with the letter P.
.. The pattern is |pxxxx| replace:: string.
.. 
.. 

.. P
.. 

.. |packages array| replace:: An array of packages to install.
.. |params| replace:: A |ruby hash| of extra parameters that will be passed to a template file.
.. |PART| replace:: The part of the cookbook to show: ``attributes``, ``definitions``, ``files``, ``libraries``, ``providers``, ``recipes``, ``resources``, or ``templates``. More than one part can be specified.
.. |pass_number| replace:: The pass number used by the file system check (``fsck``) command while creating a file systems table (``fstab``) entry.
.. |password bluelock| replace:: The password for the |bluelock| account.
.. |password customer_dynect| replace:: The |dns update api| password.
.. |password shadow_hash| replace:: The password shadow hash. This attribute requires that ``ruby-shadow`` be installed. This is part of the |debian| package: ``libshadow-ruby1.8``.
.. |password application| replace:: The application password.
.. |password openstack_compute| replace:: The |openstack compute| password.
.. |password proxy_server| replace:: The password for the proxy server.
.. |password rabbitmq| replace:: The password for the |rabbitmq| user.
.. |password terremark| replace:: The password for the |terremark| service.
.. |password user| replace:: The user password.
.. |password vcloud| replace:: The |vcloud| password.
.. |password yum_basic_auth| replace:: The password used with ``username`` for basic authentication.
.. |patch file_array| replace:: An array of files to be used as patches for the package.
.. |path application_physical| replace:: The physical path to the location where the application resides.
.. |path application_virtual| replace:: The virtual path to the location where the application resides.
.. |path bootstrap_template| replace:: The path to a template file that will be used during a bootstrap operation. Do not use the ``--distro`` option when ``--template-file`` is specified.
.. |path chef_handler| replace:: The full path to the handler file or the path to a |gem| (if the handler ships as part of a |ruby| |gem|).
.. |path chef_handler_directory| replace:: The directory in which handlers are dropped.
.. |path chef_repo| replace:: The path to the |chef repo|.
.. |path directory| replace:: The path to the directory.
.. |path directory_chdir| replace:: The path to a directory in which a temporary ``chdir`` will occur.
.. |path directory_unzip| replace:: The path to the directory in which a file will be unzipped.
.. |path environment| replace:: The path to the environment.
.. |path file| replace:: The path to the file.
.. |path file_backup| replace:: The location in which backup files are stored. If this value is empty, backup files will be stored in the directory of the target file.
.. |path file_cookbook| replace:: The path to the location in which a file will be created.
.. |path file_created| replace:: The path to the location in which the configuration file will be created.
.. |path hint_ohai| replace:: The path to the file that contains hints for |ohai|.
.. |path iis_pool| replace:: A local path that is mapped to the root application and root virtual directory. If this is not specified, |microsoft iis| will generate this path.
.. |path pid_file| replace:: The location in which a process identification number (pid) is saved. An executable, when started as a daemon, will write the pid to the specified file.
.. |path plugin_ohai| replace:: The directory in which |ohai| plugins are located.
.. |path python_virtualenv| replace:: The path to the location in which the virtual |python| environment will be created.
.. |path recipe_file| replace:: The path to a recipe. For example, if a recipe file is in the current directory, use ``recipe_file.rb``. This is typically used with the ``--local-mode`` option.
.. |path repository| replace:: The path to the repository.
.. |path requirements_file| replace:: The relative path to a requirements file. If this attribute is unspecified, the provider will look for one in the project root named ``requirements/#{chef_environment}.txt`` or ``requirements.txt``.
.. |path resource execute| replace:: An array of paths to use when searching for a command. These paths are not added to the command's environment $PATH.
.. |path riak_admin| replace:: The directory in which ``riak`` and ``riak-admin`` scripts are located.
.. |path roles_chef| replace:: The location in which role files are located.
.. |path ssl_certificate yum_client| replace:: The path to the |ssl| client certificate that |yum| should use to connect to repositories and/or remote sites.
.. |path ssl_certificate yum_client_key| replace:: The path of the location in which the |ssl| client key used by |yum| is located.
.. |path ssl_certificate yum_directory| replace:: The path to the directory in which the certificate authorities |yum| should use to verify |ssl| certificates are located.
.. |path torrent_file| replace:: The path to the torrent file.
.. |path windows_path| replace:: The value to be added to or removed from a system path.
.. |pattern command_line| replace:: One (or more) patterns for a command line. If this option is not specified, a list of patterns may be expected on standard input.
.. |pattern process_table| replace:: The pattern to look for in the process table.
.. |permission create| replace:: Use the |webui permission create| global permission to define which users and groups may create the following server object types: cookbooks, data bags, environments, nodes, roles, and tags.
.. |permission delete| replace:: Use the |webui permission delete| permission to define which users and groups may delete an object.
.. |permission grant| replace:: Use the |webui permission grant| permission to define which users and groups may configure permissions on an object.
.. |permission list| replace:: Use the |webui permission list| global permission to define which users and groups may view the following server object types: cookbooks, data bags, environments, nodes, roles, and tags.
.. |permission read| replace:: Use the |webui permission read| permission to define which users and groups may view the details of an object.
.. |permission update| replace:: Use the |webui permission update| permission to define which users and groups may edit the details of an object. 
.. |permissions| replace:: One (or more) permissions that will be set.
.. |persistdir| replace:: The directory in which |yum| stores information that should persist across multiple |chef client| runs.
.. |pin| replace:: The package version or |apt| repository to be pinned.
.. |pin_priority| replace:: The priority for the package version or |apt| repository, in comparison to the priority for other versions of the same package or repository. The higher value will have the higher priority.
.. |pipeline_mode| replace:: The pipeline mode with which an application pool is created.
.. |platform| replace:: The platform for which a cookbook is designed.
.. |platform_node| replace:: The platform on which a node is running.
.. |platform_version| replace:: The version of the platform.
.. |plugin reload_by_ohai| replace:: Indicates that the specified plug-ins are reloaded by |ohai|.
.. |pluginconfpath| replace:: The list of directories in which |yum| should look for plugin configuration files.
.. |pluginpath| replace:: The list of directories in which |yum| should look for plugin modules.
.. |plugins_yum| replace:: Indicates whether plugins are enabled.
.. |port chef_zero| replace:: The port on which |chef zero| will listen.
.. |port iis| replace:: The port on which a |microsoft iis| site will listen.
.. |port listen| replace:: The port on which the application will bind. This value must be a string in the form: ``HOST``, ``HOST:PORT``, or ``unix:PATH``.
.. |port listen_postgresql| replace:: The connection source to which |postgresql| will respond.
.. |port non_ssl_nginx| replace:: The port on which the WebUI and API are bound for non-|ssl| connections.
.. |port nginx| replace:: The port to which the |nginx| service will bind.
.. |port nrpe| replace:: The port on which the |service nrpe| service will listen.
.. |port number| replace:: The port number.
.. |port opscode_authz| replace:: The port on which the |service authz| service will listen.
.. |port opscode_certificate| replace:: The port on which the |service certificate| service will listen.
.. |port opscode_chef| replace:: The port on which the |service chef| service will listen.
.. |port opscode_erchef| replace:: The port on which the |service erchef| service will listen.
.. |port opscode_orgcreator| replace:: The port on which the |service orgcreator| service will listen.
.. |port opscode_solr| replace:: The port on which the |service solr| service will listen.
.. |port opscode_webui| replace:: The port on which the |service webui| service will listen.
.. |port postgresql| replace:: The port on which the |service postgresql| service will listen.
.. |port redis| replace:: The port on which the |redis| service will listen.
.. |port rabbitmq| replace:: The port on which the |rabbitmq| service will listen.
.. |precompile_assets| replace:: Indicates whether assets will be pre-compiled. Unless this attribute is specified, the |chef client| will attempt to auto-detect whether the pipeline is in use by looking in ``config/assets.yml``.
.. |precondition iis_module| replace:: The pre-condition for a module, if applicable.
.. |preload_app| replace:: Indicates whether an application is loaded before a worker process is forked.
.. |preferred_state php_pear| replace:: By default, |pear| only installs stable packages. Packages can be installed in various non-stable states: ``devel``, ``alpha`` or ``beta``.
.. |prerelease| replace:: Indicates that pre-release gems should be installed.
.. |print_after| replace:: Indicates that data will be shown after a destructive operation.
.. |print_on_command_line| replace:: Indicates that the print command will be run on the command line.
.. |priority process| replace:: A priority value assigned to the process.
.. |priority group| replace:: A priority value assigned to the group.
.. |priority service| replace:: The relative priority of the program for start and shutdown ordering.
.. |priority yum| replace:: The priority for repository entries; a repository will have priority when its priority value is higher than another repository's priority value.
.. |private-key-file| replace:: The file in which the |ssh| private key used for authentication is located.
.. |private_memory| replace:: The maximum amount of private memory (in KB) that a worker process can consume before the application pool will recycle. A value of ``0`` means there is no limit.
.. |private_network| replace:: Indicates that a private IP address is used for a bootstrap operation.
.. |programs supervisor_group| replace:: An array of program names. Programs that are listed will become members of the group.
.. |protected_multilib| replace:: Indicates whether |yum| will perform a check to ensure multilib packages are of the same version.
.. |protected_packages| replace:: The list of packages that should never be completely removed by |yum|.
.. |protocol http| replace:: The HTTP protocol type to which a site responds: ``:http`` or ``:https``.
.. |provider resource_parameter| replace:: Use to specify a provider by using its long name. For example: ``provider Chef::Provider::Long::Name``. See the Providers section below for the list of providers available to this resource.
.. |public-key-file| replace:: The file in which the |ssh| public key used for authentication is located.
.. |purge amazon ec2| replace:: Indicates that all corresponding nodes and clients on the |chef server| will be destroyed, in addition to the |amazon ec2| node itself. This action (by itself) assumes that the node and client have the same name as the server; if they do not have the same names, then the ``--node-name`` option must be used to specify the name of the node.
.. |purge cookbook| replace:: Indicates that a cookbook (or cookbook version) will be removed entirely from the |chef server|. This action should be used carefully because only one copy of any single file is stored on the |chef server|. Consequently, purging a cookbook will disable any other cookbook that references one or more files from a cookbook that has been purged.
.. |purge google| replace:: Indicates that all corresponding nodes and clients on the |chef server| will be destroyed, in addition to the |google compute engine| node itself. This action (by itself) assumes that the node and client have the same name as the server; if they do not have the same names, then the ``--node-name`` option must be used to specify the name of the node.
.. |purge knife download| replace:: Use ``--purge`` to delete local files and directories that do not exist on the |chef server|. By default, if a role, cookbook, etc. does not exist on the |chef server|, the local file for said role will be left alone and NOT deleted.
.. |purge knife upload| replace:: Use ``--purge`` to delete roles, cookbooks, etc. from the |chef server| if their corresponding files do not exist in the |chef repo|. By default, such objects are left alone and NOT purged.
.. |purge node bluelock| replace:: Indicates that all corresponding nodes on the |chef server| will be destroyed, in addition to the |bluelock| node itself. This option (by itself) assumes that the node and client have the same name as the server. If they do not, use the ``--node-name`` option to specify the correct name for the node.
.. |purge node hp| replace:: Indicates that all corresponding nodes on the |chef server| will be destroyed, in addition to the |hp cloud| node itself. This option (by itself) assumes that the node and client have the same name as the server. If they do not, use the ``--node-name`` option to specify the correct name for the node.
.. |purge node rackspace| replace:: Indicates that all corresponding nodes on the |chef server| will be destroyed, in addition to the |rackspace| node itself. This option (by itself) assumes that the node and client have the same name as the server. If they do not, use the ``--node-name`` option to specify the correct name for the node.
.. |purge node vcloud| replace:: Indicates that all corresponding nodes on the |chef server| will be destroyed, in addition to the |vcloud| node itself. This option (by itself) assumes that the node and client have the same name as the server. If they do not, use the ``--node-name`` option to specify the correct name for the node.
.. |purge os disk windows azure| replace:: Indicates that all corresponding operating system disks will be destroyed, in addition to the |azure| node itself.
.. |purge target_directory| replace:: Indicates that extra files found in the target directory will be purged.
.. |purge windows azure| replace:: Indicates that all corresponding nodes and clients on the |chef server| will be destroyed, in addition to the |azure| node itself. This action (by itself) assumes that the node and client have the same name as the server; if they do not have the same names, then the ``--node-name`` option must be used to specify the name of the node.
.. |purge_before_symlink| replace:: Use this attribute to specify an array of directories (relative to the application root) that should be removed from a checkout before symbolic links are created. This attribute runs before ``create_dirs_before_symlink`` and before ``symlink``.



.. Description strings that begin with the letter Q.
.. The pattern is |qxxxx| replace:: string.
.. 
.. 

.. Q
.. 

.. |query| replace:: Use to protect search queries that start with a hyphen (-). A ``-q`` query may be specified as an argument or an option, but not both.
.. |query cloudkick| replace:: A node-based query that identifies one (or more) targets to which the monitor will be applied. If this attribute is unspecified, it will default to the name of the node.
.. |quorum push jobs| replace:: The minimum number of nodes that match the search criteria, are available, and acknowledge the job request. This can be expressed as a percentage (e.g. ``50%``) or as an absolute number of nodes (e.g. ``145``).


.. Description strings that begin with the letter R.
.. The pattern is |rxxxx| replace:: string.
.. 
.. 

.. R
.. 

.. |r knife list| replace:: Indicates that directories will be listed recursively.
.. |rackspace_api_auth_url| replace:: The URL used to authenticate the |rackspace| API key.
.. |rackspace_api_key| replace:: The unique alphanumeric identifier that is associated with a |rackspace| account.
.. |rackspace-metadata| replace:: A |json| string that contains a metadata hash.
.. |raid_device mdadm| replace:: The name of the |raid| device.
.. |record_data| replace:: The record data.
.. |record_ttl| replace:: The record time to live.
.. |record_type| replace:: The record type: ``ns``, ``childns``, ``host``, ``alias``, or ``mx``.
.. |readme-format| replace:: The document format of the readme file: ``md`` (markdown) and ``rdoc`` (|ruby| docs).
.. |reason windows_reboot| replace:: The reason for a |windows| reboot.
.. |recent_yum| replace:: The age (in days) of a package, after which a package is no longer considered a "recent" package.
.. |recipe_url| replace:: The URL location from which a remote cookbook |tar gz| will be downloaded.
.. |recursive directory| replace:: Use to create or delete parent directories recursively. For the ``owner``, ``group``, and ``mode`` attributes, the value of this attribute applies only to the leaf directory.
.. |recursive registry_key| replace:: When creating a key, this value indicates whether the required keys for the specified path will be created. When using the ``:delete_key`` action in a recipe, and if the registry key has subkeys, then the value for this attribute should be set to ``true``.
.. |recursive remote_directory| replace:: Use to create or delete directories recursively.
.. |redirect_stderr| replace:: Indicates that the ``STDERR`` output for a process is sent back to |python supervisor| using ``STDOUT``.
.. |reference resource scm| replace:: The alias for revision.
.. |region amazon| replace:: The name of the region from which instances of hosted applications are launched. Each region has a unique endpoint.
.. |region eucalyptus| replace:: The name of the region from which instances of hosted applications are launched.
.. |remote resource| replace:: The remote repository to be used when synchronizing an existing clone.
.. |remote deps_on_server| replace:: Indicates that dependencies will be determined from objects located on the |chef server| instead of the local |chef repo|.
.. |replace_file| replace:: Use to define a string that will be used to replace the first occurrence of a file name.
.. |replace_string| replace:: Use to define a string that will be used to replace all occurrences of a file name.
.. |repo_gpgcheck| replace:: Indicates whether |yum| will perform a |gnu pg| signature check on data in the repository.
.. |repo_mode| replace:: The layout of the local |chef repo|. Possible values: ``static``, ``everything``, or ``hosted_everything``. Use ``static`` for just roles, environments, cookbooks, and data bags. By default, ``everything`` and ``hosted_everything`` are dynamically selected depending on the server type.
.. |repository| replace:: The path to the |chef repo|.
.. |repository git_or_svn| replace:: The alias for the repository.
.. |repository application| replace:: The name of the sub-directory in which the pristine copy of an application’s source is kept.
.. |repository_cache| replace:: The name of the sub-directory in which the pristine copy of an application's source is kept.
.. |repositories maven| replace:: An array of |apache maven| repositories.
.. |reset_nice| replace:: Indicates whether |yum| will attempt to reset the nice value to zero before running the transaction.
.. |resource action add ifconfig| replace:: Use to run |ifconfig| to configure a network interface and (on some platforms) write a configuration file for that network interface.
.. |resource action add route| replace:: Use to add a route.
.. |resource action assemble mdadm| replace:: Use to assemble a previously created array into an active array.
.. |resource action checkout scm| replace:: Use to clone or check out the source. When a checkout is available, this provider does nothing.
.. |resource action create cookbook_file| replace:: Use to create a file.
.. |resource action create cron| replace:: Use to create an entry in a |cron| table file ("crontab"). If an entry already exists with the same name, use to update that entry.
.. |resource action create directory| replace:: Use to create a directory.
.. |resource action create env| replace:: Use to create a new environment variable.
.. |resource action create file| replace:: Use to create a file.
.. |resource action create group| replace:: Use to create a group.
.. |resource action create link| replace:: Use to create a link.
.. |resource action create mdadm| replace:: Use to create a new array with per-device superblocks.
.. |resource action create remote_directory| replace:: Use to create a directory and/or the contents of that directory.
.. |resource action create remote_file| replace:: Use to synchronize a file from a remote source to the file system.
.. |resource action create ruby_block| replace:: Use to create a |ruby| block.
.. |resource action create template| replace:: Use to create a file.
.. |resource action create user| replace:: Use to create a user with given attributes. If the user already exists, use to ensure that the resource is in the correct state (which is effectively the same as ``:modify``).
.. |resource action create registry_key| replace:: Use to create a registry key.
.. |resource action create_if_missing cookbook_file| replace:: Use to create a file if it does not exist.
.. |resource action create_if_missing directory| replace:: Use to create a directory if it does not exist.
.. |resource action create_if_missing file| replace:: Use to create a file only if the file does not exist. (When the file exists, nothing happens.)
.. |resource action create_if_missing remote_directory| replace:: Use to create a directory and/or the contents of that directory, but only if it does not exist.
.. |resource action create_if_missing remote_file| replace:: Use to create a file locally by fetching from the remote source, but only if the file does not exist.
.. |resource action create_if_missing template| replace:: Use to create a file only if it does not exist.
.. |resource action create_if_missing registry_key| replace:: Use to create a registry key if it does not exist. Also, use to create a registry key value if it does not exist.
.. |resource action delete cookbook_file| replace:: Use to delete a file.
.. |resource action delete cron| replace:: Use to delete an entry from a |cron| table file ("crontab").
.. |resource action delete directory| replace:: Use to delete a directory.
.. |resource action delete env| replace:: Use to delete an environment variable.
.. |resource action delete file| replace:: Use to delete a file.
.. |resource action delete http_request| replace:: Use to send a ``DELETE`` request.
.. |resource action delete ifconfig| replace:: Use to run |ifconfig| to disable a network interface and (on some platforms) delete that network interface's configuration file.
.. |resource action delete link| replace:: Use to delete a link.
.. |resource action delete registry_key| replace:: Use to delete the specified values for a registry key.
.. |resource action delete key registry_key| replace:: Use to delete the specified registry key and all of its subkeys.
.. |resource action delete remote_directory| replace:: Use to delete a directory, including the contents of that directory.
.. |resource action delete route| replace:: Use to delete a route.
.. |resource action deploy deploy| replace:: Use to deploy an application.
.. |resource action disable ifconfig| replace:: Use to run |ifconfig| to disable a network interface.
.. |resource action disable mount| replace:: Use to remove an entry from the file systems table (fstab).
.. |resource action disable service| replace:: Use to disable a service.
.. |resource action enable ifconfig| replace:: Use to run |ifconfig| to enable a network interface.
.. |resource action enable mount| replace:: Use to add an entry to the file systems table (fstab).
.. |resource action export scm| replace:: Use to export the source, excluding or removing any version control artifacts.
.. |resource action export service| replace:: Use to enable a service at boot.
.. |resource action force_deploy deploy| replace:: Use to remove any existing release of the same code version and re-deploy a new one in its place.
.. |resource action force_export scm| replace:: Use to export the source, excluding or removing any version control artifacts and to force an export of the source that is overwriting the existing copy (if it exists).
.. |resource action get http_request| replace:: Use to send a ``GET`` request.
.. |resource action head http_request| replace:: Use to send a ``HEAD`` request.
.. |resource action install package| replace:: Use to install a package. If a version is specified, use to install the specified version of a package.
.. |resource action lock user| replace:: Use to lock a user's password.
.. |resource action manage group| replace:: Use to manage an existing group. This action will do nothing if the group does not exist.
.. |resource action manage user| replace:: Use to manage an existing user. This action will do nothing if the user does not exist.
.. |resource action modify env| replace:: Use to modify an existing environment variable. This will append the new value to the existing value, using the delimiter specified by the ``delim`` attribute.
.. |resource action modify group| replace:: Use to modify an existing group. This action will raise an exception if the group does not exist.
.. |resource action modify user| replace:: Use to modify an existing user. This action will raise an exception if the user does not exist.
.. |resource action mount mount| replace:: Use to mount a device.
.. |resource action nothing erlang| replace:: Indicates that the |erlang| call should not be run.
.. |resource action nothing execute| replace:: Indicates that the command should not be run. This action is used to specify that a command is run only when another resource notifies it.
.. |resource action nothing service| replace:: Use to do nothing with a service.
.. |resource action options http_request| replace:: Use to send an ``OPTIONS`` request.
.. |resource action post http_request| replace:: Use to send a ``POST`` request.
.. |resource action purge package| replace:: Use to purge a package. This action typically removes the configuration files as well as the package.
.. |resource action put http_request| replace:: Use to send a ``PUT`` request.
.. |resource action reconfigure package| replace:: Use to reconfigure a package. This action requires a response file.
.. |resource action reload ohai| replace:: Use to reload the |ohai| configuration on a node.
.. |resource action reload service| replace:: Use to reload the configuration for this service.
.. |resource action remount mount| replace:: Use to remount a device.
.. |resource action remove group| replace:: Use to remove a group.
.. |resource action remove package| replace:: Use to remove a package.
.. |resource action remove user| replace:: Use to remove a user.
.. |resource action restart service| replace:: Use to restart a service.
.. |resource action rollback deploy| replace:: Use to roll an application back to the previous release.
.. |resource action run erlang| replace:: Indicates that the |erlang| call should be run.
.. |resource action run execute| replace:: Indicates that the command should be run.
.. |resource action run powershell_script| replace:: Use to run the script.
.. |resource action run script| replace:: Use to run a script.
.. |resource action run windows_batch| replace:: Use to run a batch file.
.. |resource action start service| replace:: Use to start a service (and keep it running until stopped or disabled).
.. |resource action stop mdadm| replace:: Use to stop an active array.
.. |resource action stop service| replace:: Use to stop a service.
.. |resource action sync scm| replace:: Use to update the source to the specified version, or to get a new clone or checkout.
.. |resource action touch file| replace:: Use to touch a file. This updates the access (atime) and file modification (mtime) times for a file.
.. |resource action umount mount| replace:: Use to unmount a device.
.. |resource action unlock user| replace:: Use to unlock a user's password.
.. |resource action upgrade package| replace:: Use to install a package and/or to ensure that a package is the latest version.
.. |resource action write log| replace:: Use to write to log.
.. |resource short_actions| replace:: The ``:nothing`` action can be used with any resource or lightweight resource.
.. |resource short_attributes| replace:: The ``ignore_failure``, ``provider``, ``retries``, ``retry_delay``, and ``supports`` attributes can be used with any resource or lightweight resources.
.. |resource short_conditions| replace:: The ``not_if`` and ``only_if`` conditional executions can be used to put additional guards around certain resources so that they are only run when the condition is met.
.. |resource short_notifications| replace:: The ``notifies`` and ``subscribes`` notifications can be used with any resource.
.. |resource short_relative_paths| replace:: The ``#{ENV['HOME']}`` relative path can be used with any resource.
.. |resource short_windows_file_security| replace:: The |resource template|, |resource file|, |resource remote_file|, |resource cookbook_file|, |resource directory|, and |resource remote_directory| resources support the use of inheritance and access control lists (ACLs) within recipes.
.. |resource short_run_during_compile| replace:: Sometimes a resource needs to be run before every other resource or after all resources have been added to the resource collection.
.. |response code 200 ok| replace:: OK. The request was successful.
.. |response code 201 created| replace:: Created. The object was created.
.. |response code 400 bad request| replace:: Bad request. The contents of the request are not formatted correctly.
.. |response code 400 bad request sandbox| replace:: Bad request. The object has already been committed or one (or more) of the objects were not properly uploaded.
.. |response code 400 checksum| replace:: The contents of the file do not have the correct checksum.
.. |response code 400 unsuccessful| replace:: The request was unsuccessful.
.. |response code 401 conflict| replace:: Conflict. The object already exists.
.. |response code 401 unauthorized| replace:: Unauthorized. The user which made the request is not authorized to perform the action.
.. |response code 403 forbidden| replace:: Forbidden. The user which made the request is not authorized to perform the action.
.. |response code 404 not found| replace:: Not found. The requested object does not exist.
.. |response code 409 conflict| replace:: Conflict. The object already exists.
.. |response code 409 unauthorized| replace:: Unauthorized. The user which made the request is not authorized to perform the action.
.. |response code 412 cookbook version| replace:: Not allowed. A set of cookbooks and/or cookbook versions could not be found that met all of the requirements of the run-list. A cookbook in the run-list may not exist. A dependency may be present for a cookbook that does not exist. A constraint on a cookbook made by a run-list, environment, or cookbook version may not match an available cookbook version.
.. |response code 413 entity_too_large| replace:: Request entity too large. A request may not be larger than 1000000 bytes.
.. |response_file| replace:: The direct path to the file used to pre-seed a package.
.. |restart shell_command| replace:: A string that contains a shell command that can be executed to run a restart operation.
.. |retries| replace:: Use to specify the number of times to catch exceptions and retry the resource.
.. |retry_delay| replace:: Use to specify the retry delay (in seconds).
.. |returns| replace:: A comma-delimited list of return codes, which indicate the success or failure for the command that was run remotely.
.. |return_value cmd| replace:: The return value for a command. This may be an array of accepted values. An exception is raised when the return value(s) do not match.
.. |revision| replace:: The revision to be checked out. This can be symbolic, like ``HEAD`` or it can be a source control management-specific revision identifier.
.. |rights windows security| replace:: The permissions for users and groups in a |windows| environment. For example: ``rights <permissions>, <principal>, <options>`` where ``<permissions>`` specifies the rights granted to the principal, ``<principal>`` is the group or user name, and ``<options>`` is a |ruby hash| with one (or more) advanced rights options.
.. |role memcached| replace:: The name of a role. During a |chef client| run, a search will be performed to find a node with the same name as this value in the same environment as the current role. If a node is found, it's IP address will be used when rendering the ``memcached.yml`` file.
.. |role-name| replace:: The name of the virtual machine.
.. |role-size| replace:: The size of the virtual machine: ``ExtraSmall``, ``Small``, ``Medium``, ``Large``, or ``ExtraLarge``.
.. |rollback_on_error| replace:: Indicates whether a resource will roll back to a previously-deployed release if an error occurs when deploying a new release.
.. |root redis| replace:: The root directory for |redis|.
.. |route_gateway| replace:: The gateway for the route.
.. |route_device| replace:: The network interface to which the route applies.
.. |routing_metric| replace:: The routing metric for the interface.
.. |rows| replace:: The number of rows to be returned.
.. |rpc_host| replace:: The address for the host to which a |bittorrent| transmission connection is made.
.. |rpc_password| replace:: The password for the |bittorrent| transmission account. This is often ``node['transmission']['rpc_password']``, which by default is a secure password generated for the node.
.. |rpc_port| replace:: The port for the host to which a |bittorrent| transmission connection is made.
.. |rpc_username| replace:: The user name for the |bittorrent| transmission account.
.. |rpm_verbosity| replace:: Use to set the output level: ``critical``, ``debug``, ``info`` (default), ``emergency``, ``error``, or ``warn``.
.. |ruby dsl cookbook| replace:: A version constraint for a single cookbook.
.. |ruby dsl cookbook version| replace:: A version constraint for a group of cookbooks.
.. |ruby dsl default attribute| replace:: Optional. A set of attributes that should be applied to all nodes, assuming the node does not already have a value for the attribute. This is useful for setting global defaults that can then be overridden for specific nodes. If more than one role attempts to set a default value for the same attribute, the last role applied will be the role to set the attribute value. When nested attributes are present, they will be preserved.
.. |ruby dsl description| replace:: A description of the functionality that is covered.
.. |ruby dsl environment run list| replace:: Optional. A list of environments, each specifying a recipe or a role that will be applied to that environment. This setting must specify the ``_default`` environment. If the ``_default`` environment is set to ``[]`` or ``nil``, then the run list will be empty.
.. |ruby dsl name| replace:: A unique name within the organization. Each name must be unique and must be made up of letters (upper- and lower-case), numbers, underscores, and hyphens: [A-Z][a-z][0-9] and [_-]. Spaces are not allowed.
.. |ruby dsl override attribute| replace:: Optional. A set of attributes that should be applied to all nodes, even if the node already has a value for an attribute. This is useful for ensuring that certain attributes always have specific values. If more than one role attempts to set an override value for the same attribute, the last role applied will win. When nested attributes are present, they will be preserved.
.. |ruby dsl run list| replace:: A list of recipes and/or roles that will be applied and the order in which those recipes and/or roles will be applied.

.. |ruby equal| replace:: equal to
.. |ruby greater| replace:: greater than
.. |ruby greater_optimistic| replace:: greater than or equal to; also known as "optimistically greater than", or "optimistic"
.. |ruby greater_pessimistic| replace:: approximately greater than; also known as "pessimistically greater than", or "pessimistic"
.. |ruby less| replace:: less than
.. |ruby less_or_equal| replace:: less than or equal to

.. |run-list| replace:: A comma-separated list of roles and/or recipes to be applied.
.. |run-list indicator| replace:: Indicates that only the run-list will be shown.
.. |runlist_items| replace:: Use to permanently replace the current run-list with the specified run-list items.


.. Description strings that begin with the letter S.
.. The pattern is |sxxxx| replace:: string.
.. 
.. 

.. S
.. 

.. |s3_url_ttl| replace:: The amount of time (in seconds) before the |chef client| run will time out.
.. |sandbox_path| replace:: The location in which cookbook files are stored (temporarily) during upload.
.. |save_frequency_redis| replace:: Use to set the save frequency. Pattern: ``{ "seconds" => "keys", "seconds" => "keys", "seconds" => "keys" }``.
.. |script-path| replace:: A colon-separated path at which |ruby| scripts are located.
.. |search index| replace:: A search index is a full-text list of objects that are stored on the |chef server|, against which search queries can be made.
.. |search index_data_bag| replace:: A data bag is a global variable that is stored as |json| data and is accessible from a |chef server|.
.. |search index_environment| replace:: An environment is a way to map an organization's real-life workflow to what can be configured and managed when using |chef server|.
.. |search index_node| replace:: A node is any server or virtual server that is configured to be maintained by a |chef client|.
.. |search index_role| replace:: A role is a way to define certain patterns and processes that exist across nodes in an organization as belonging to a single job function.
.. |search key| replace:: A key (or field name) is located in the |json| description for the object that is to be searched.
.. |search pattern| replace:: A search pattern is a way to fine-tune search results by returning anything that matches some type of incomplete search query.
.. |search operator| replace:: A Boolean operator can be used to ensure that certain terms are included in the results, are excluded from the results, or are not included even when other aspects of the query match.
.. |search partial| replace:: A partial search query allows a search query to be made against specific attribute keys that are stored on the |chef server|.
.. |search query syntax| replace:: A search query is comprised of two parts: the key and the search pattern.
.. |search special character| replace:: A special character can be used to fine-tune a search query and to increase the accuracy of the search results.
.. |search_index| replace:: The name of the index to be queried: ``client``, ``environment``, ``node``, ``role``, or ``DATA_BAG_NAME``.
.. |search_query| replace:: The search query used to identify a a list of items on a |chef server|. This option uses the same syntax as the ``search`` sub-command.
.. |search_query ssh| replace:: The search query used to return a list of servers to be accessed using |ssh| and the specified ``SSH_COMMAND``. This option uses the same syntax as the search sub-command.
.. |secret| replace:: The encryption key that is used for values contained within a data bag item.
.. |secret-file| replace:: The path to the file that contains the encryption key.
.. |server_aliases| replace:: An array of server aliases.
.. |server_fqdn| replace:: The |fqdn| for the server.
.. |server_hooks| replace:: A |ruby hash| with values that are rendered as |gunicorn| server hook functions named after the |ruby hash| item's key name.
.. |service_order keepalived| replace:: The order by which |keepalived| will start and stop services when transitioning from a primary server to a backup.
.. |settings django_template| replace:: A |ruby hash| of additional settings that will be made available to a template.
.. |shallow_clone| replace:: Indicates that the clone depth is set to ``5``.
.. |shared_buffers postgresql| replace:: The amount of memory that is dedicated to |postgresql| for data caching.
.. |shell| replace:: The login shell.
.. |show_all_images| replace:: Indicates that all fields for all images will be shown.
.. |show_local_files| replace:: Indicates that instead of remote files, local files will be shown.
.. |showdupesfromrepos| replace:: Indicates whether duplicate packages are shown. When false, only the newest packages are shown.
.. |signing_ca_cert| replace:: The path to where the certificate is located. This setting is generated automatically by the |chef client| and is passed to |open ssl|.
.. |signing_ca_country| replace:: The country code associated with the |ca| policy. This setting is passed by the |chef client| to |open ssl|.
.. |signing_ca_domain| replace:: The domain associated with the |ca| policy. This setting is passed by the |chef client| to |open ssl|.
.. |signing_ca_email| replace:: The email address associated with the |ca| policy. This setting is passed by the |chef client| to |open ssl|.
.. |signing_ca_group| replace:: The group associated with the |ca| policy. This setting is passed by the |chef client| to |open ssl|.
.. |signing_ca_key| replace:: The path to where the private key is located. This setting is generated automatically by the |chef client| and is passed to |open ssl|.
.. |signing_ca_location| replace:: The location associated with the |ca| policy. This setting is passed by the |chef client| to |open ssl|.
.. |signing_ca_org| replace:: The organization associated with the |ca| policy. This setting is passed by the |chef client| to |open ssl|.
.. |signing_ca_state| replace:: The state (or province) associated with the |ca| policy. This setting is passed by the |chef client| to |open ssl|.
.. |signing_ca_user| replace:: The user associated with the |ca| policy. This setting is passed by the |chef client| to |open ssl|.
.. |size volume| replace:: The size of the volume (in gigabytes).
.. |size disk| replace:: The size of a disk, in GB.
.. |skip_broken| replace:: Indicates whether packages are removed from the transaction if they are causing problems.
.. |skip-dependencies| replace:: Indicates that all cookbooks to which the installed cookbook has a dependency will not be installed.
.. |smtp server| replace:: The |smtp| server to which a connection is made.
.. |snapshots_to_keep| replace:: The number of snapshots to maintain. This attribute is available only when the ``:prune`` action is used.
.. |socket fcgi| replace:: The |fcgi| socket for a program.
.. |socket mode| replace:: A parameter that specifies the permission mode.
.. |socket owner| replace:: The user and group for a |fcgi| socket.
.. |solo mode| replace:: Indicates whether the |chef client| is being run in |chef solo| mode. This setting determines if the |chef client| should attempt to communicate with the |chef server|.
.. |solr_commit_interval| replace:: The frequency (in seconds) at which node objects are added to the |apache solr| search index.
.. |solr_data_path| replace:: The location in which the |apache solr| indexes are located.
.. |solr_heap_size| replace:: The amount of memory allocated to the |jvm| that is being used to run |apache solr|.
.. |solr_home_path| replace:: The path to the |apache solr| home directory.
.. |solr_java_opts| replace:: The additional options (if any) that are passed to the |jvm| that is being used to run |apache solr|.
.. |solr_jetty_path| replace:: The path to the settings that control the |apache jetty| environment.
.. |solr_max_commit_docs| replace:: The frequency (in documents) at which node objects are added to the |apache solr| search index.
.. |solr_max_field_length| replace:: The maximum field length (in number of tokens/terms). If a field length exceeds this value, |apache solr| may not be able to complete building the index.
.. |solr_update_frequency_caveat| replace:: When data is committed to the |apache solr| index, all incoming updates are blocked. If the duration between updates is too short, it is possible for the rate at which updates are asked to occur to be faster than the rate at which objects can be actually committed.
.. |solr_url| replace:: The URL for the server from which the |apache solr| search engine is run.
.. |sort| replace:: The order in which search results will be sorted.
.. |sort_reverse| replace:: Indicates that the list will be sorted by last run time, descending.
.. |source cookbook_file| replace:: The location of a file in the ``/files`` directory in a cookbook located in the |chef repo|.
.. |source dmg_package| replace:: The remote URL for the |apple disk image| to be download.
.. |source freebsd| replace:: A template that is used to create the port options file.
.. |source file_location| replace:: The location (URI) of the source file. This value may also specify HTTP (``http://``), FTP (``ftp://``),  or local (``file://``) source file locations.
.. |source file_location chef_11-4| replace:: The location (URI) of the source file.
.. |source template| replace:: The location of a template file.
.. |source template_cookbook| replace:: By default, the |chef client| will look for a template file in the ``/templates`` directory of a cookbook.
.. |source template_local| replace:: When the ``local`` attribute is set to ``true``, use this attribute to specify path to a template on the local node.
.. |source windows_package| replace:: A URI or a local path that specifies the source of a |windows| installer. A local file must be expressed as a URI, for example ``"file:///C:/Users/Downloads/myinstaller.msi"``.
.. |source windows_zipfile| replace:: A URI or a local path that specifies the source of a |zip| file.
.. |source resource apt_package| replace:: The direct path to a |debian dpkg| or |deb_package| package.
.. |source resource package| replace:: The package source for providers that use a local file.
.. |source remote_directory| replace:: The base name of the source file (and inferred from the ``path`` attribute).
.. |source-image| replace:: The name of the disk image that will be used to create the virtual machine.
.. |speed interface| replace:: The speed for the interface. Possible values: ``auto``, ``100m``, ``1g``, ``10g``, ``40g``, ``56g``, or ``100g``.
.. |splay| replace:: A number (in seconds) to add to the ``interval`` that is used to determine the frequency of |chef client| runs. This number can help prevent server load when there are many clients running at the same time.
.. |ssh_command| replace:: The command that will be run against the results of a search query.
.. |ssh_gateway| replace:: The |ssh| tunnel or gateway that is used to run a bootstrap action on a machine that is not accessible from the workstation.
.. |ssh_key amazon_ec2| replace:: The |ssh| key for the |amazon ec2| environment.
.. |ssh_key eucalyptus| replace:: The |ssh| key for the |eucalyptus| environment.
.. |ssh_key hp| replace:: The |ssh| key for the |hp cloud| environment.
.. |ssh_key openstack| replace:: The |ssh| key for the |openstack| environment.
.. |ssh_password| replace:: The |ssh| password. This can be used to pass the password directly on the command line. If this option is not specified (and a password is required) |knife| will prompt for the password.
.. |ssh_port| replace:: The |ssh| port.
.. |ssh_user| replace:: The |ssh| user name.
.. |ssh_wrapper resource| replace:: The path to the wrapper script used when running |ssh| with |git|. The ``GIT_SSH`` environment variable is set to this.
.. |ssl_ca_cert_yum| replace:: The path to the directory in which the certificate authorities |yum| should use to verify |ssl| certificates are located.
.. |ssl_ca_file| replace:: The file in which the |open ssl| key is saved. This setting is generated automatically by the |chef client| and most users will not need to modify it.
.. |ssl_ca_path| replace:: The path to where the |open ssl| key is located. This setting is generated automatically by the |chef client| and most users will not need to modify it.
.. |ssl_certificate| replace:: The |ssl| certificate used to verify communication over HTTPS.
.. |ssl_certificate key| replace:: The certificate key used for |ssl| communication.
.. |ssl_certificate verify| replace:: Indicates whether SSL certificates are verified.
.. |ssl_check_cert_permissions_yum| replace:: Indicates whether |yum| should check permissions on both local and remote paths for certificates.
.. |ssl_ciphers| replace:: The list of supported cipher suites that are used to establish a secure connection.
.. |ssl_client_cert| replace:: The |open ssl| |x509| certificate. This setting is generated automatically by the |chef client| and most users will not need to modify it.
.. |ssl_client_cert_yum| replace:: The path to the |ssl| client certificate that |yum| should use to connect to repositories and/or remote sites.
.. |ssl_client_key| replace:: The |open ssl| |x509| key. This setting is generated automatically by the |chef client| and most users will not need to modify it.
.. |ssl_client_key_yum| replace:: The path of the location in which the |ssl| client key used by |yum| is located.
.. ssl_verify_mode is also in the server_security.html topic.
.. |ssl_verify_mode| replace:: The verify mode for HTTPS requests.
.. |ssl_verify_mode_verify_api_cert| replace:: Use ``verify_api_cert`` to only do SSL validation of the chef server connection; may be needed if the |chef client| needs to talk to other services that have broken SSL certificates.
.. |ssl_verify_mode_verify_none| replace:: Use ``:verify_none`` to do no validation of SSL certificates.
.. |ssl_verify_mode_verify_peer| replace:: Use ``:verify_peer`` to do validation of all SSL certificates, including the |chef server| connections, S3 connections, and any HTTPS |resource remote_file| resource URLs used in the |chef client| run.
.. |ssl_verify_yum| replace:: Indicates whether |yum| verifies |ssl| certificates.
.. |start| replace:: The row at which return results will begin.
.. |startretries| replace:: The number of serial failure attempts |python supervisor| will allow when attempting to start a program before giving up.
.. |startsecs| replace:: The length of time (in seconds) a program will stay running after startup, at which point the startup will be considered successful.
.. |static_files| replace:: A |ruby hash| that maps URLs to files.
.. |stdin chef_apply| replace:: Use to execute a resource using standard input.
.. |stderr_capture_maxbytes| replace:: The maximum number of bytes written to capture for ``stderr_logfile``.
.. |stderr_events_enabled| replace:: Indicates whether events are omitted from ``stderr_logfile``.
.. |stderr_logfile| replace:: The location of the ``STDERR`` logfile.
.. |stderr_logfile_backups| replace:: The number of ``stderr_logfile`` backups to keep.
.. |stderr_logfile_maxbytes| replace:: The maximum size (in bytes) that may be consumed by ``stderr_logfile`` before it is rotated.
.. |stdout_capture_maxbytes| replace:: The maximum number of bytes written to capture for ``stdout_logfile``.
.. |stdout_events_enabled| replace:: Indicates whether events are omitted from ``stdout_logfile``.
.. |stdout_logfile| replace:: The location of the ``STDOUT`` logfile.
.. |stdout_logfile_backups| replace:: The number of ``stdout_logfile`` backups to keep.
.. |stdout_logfile_maxbytes| replace:: The maximum size (in bytes) that may be consumed by ``stdout_logfile`` before it is rotated.
.. |stopsignal| replace:: The signal used to kill a program when a stop is requested: ``TERM``, ``HUP``, ``INT``, ``QUIT``, ``KILL``, ``USR1``, or ``USR2``.
.. |stopwaitsecs| replace:: The amount of time (in seconds) to wait (after ``stopsignal``) before a ``SIGKILL`` message is sent.
.. |storage account| replace:: The name of the storage account used with the hosted service.
.. |strategy| replace:: The deploy strategy: ``timestamped_deploy`` or ``deploy_revision`` (default). Use ``deploy_revision`` to ensure that the name of a release sub-directory is based on a revision identifier and puts deployed components under the destination location that is owned by the user who runs the application. For users of |git|, this will be the familiar SHA checksum. For users of |svn|, it will be the integer revision number. If a name other than a revision identifier is provided---branch names, tags, and so on---the |chef client| will ignore the alternate names and will look up the revision identifier and use it to name the release sub-directory. Use ``timestamped_deploy`` to name a release sub-directory with a timestamp in the form of YYYYMMDDHHMMSS. For example: /my/deploy/dir/releases/20121120162342.
.. |subnet| replace:: The |amazon vpc| instance in which a node will be created.
.. |success_codes| replace:: Use to set an array of possible successful installation return codes.
.. |sudo bootstrap| replace:: Indicates that a bootstrap operation should be executed using |sudo cmd|.
.. |supervisor_inet_port| replace:: The port on which to serve the internal web-based admin dashboard. For example: 'localhost:9001'.
.. |supervisor_inet_username| replace:: The user name used to authenticate to the HTTP server.
.. |supervisor_inet_password| replace:: The password used during authentication to the HTTP server. This setting supports both clear text and SHA-1 hashed passwords (that are prefixed by ``{SHA}``).
.. |supervisor_dir| replace:: The location of supervisor configuration files.
.. |supervisor_log_dir| replace:: The location of supervisor log files.
.. |supervisor_minfds| replace:: The minimum number of file descriptors that must be available before ``supervisord`` will start successfully.
.. |supervisor_minprocs| replace:: The minimum number of process descriptors that must be available before ``supervisord`` will start successfully.
.. |supervisor_version| replace:: Sets the version of ``supervisor`` to install; must be version 3.0 (or higher) to use ``minprocs`` and ``minfds``.
.. |supports chef_handler| replace:: The type of handler.
.. |supports mount| replace:: A |ruby hash| of options for supported mount features.
.. |supports service| replace:: A list of attributes that controls how the |chef client| will attempt to manage a service: ``:restart``, ``:reload``, ``:status``. For ``:restart``, the init script or other service provider can use a restart command; if ``:restart`` is not specified, the |chef client| will attempt to stop and then start a service. For ``:reload``, the init script or other service provider can use a reload command. For ``:status``, the init script or other service provider can use a status command to determine if the service is running; if ``:status`` is not specified, the |chef client| will attempt to match the ``service_name`` against the process table as a regular expression, unless a pattern is specified as a parameter attribute.
.. |supports user| replace:: A Mash where keys represent features and values are booleans that indicate if that feature is supported.
.. |svlogd_num| replace:: The number of |svlogd| log files to retain.
.. |svlogd_size| replace:: The size (in bytes) of the |svlogd| log file.
.. |svn_arguments resource| replace:: The extra arguments that are passed to the |svn| command.
.. |svn_info_args resource| replace:: Use when the ``svn info`` command is used by the |chef client| and arguments need to be passed. (The ``svn_arguments`` command does not work when the ``svn info`` command is used.)
.. |svn_password resource| replace:: The password for the user that has access to the |svn| repository.
.. |svn_username resource| replace:: The user name for a user that has access to the |svn| repository.
.. |symlink_before_migrate| replace:: Use this attribute to map files in a shared directory to the current release directory. The symbolic links for these files will be created before any migration is run. Use ``symlink_before_migrate({})`` or ``symlink_before_migrate nil`` instead of ``symlink_before_migrate {}`` because ``{}`` will be interpreted as a block rather than an empty |ruby hash|. Set to ``nil`` to prevent the creation of default symbolic links.
.. |symlinks| replace:: Use this attribute to map files in a shared directory to their paths in the current release directory. This attribute runs after ``create_dirs_before_symlink`` and ``purge_before_symlink``.
.. |syntax_check_cache_path| replace:: All files in a cookbook must contain valid |ruby| syntax. Use this setting to specify the location in which |knife| caches information about files that have been checked for valid |ruby| syntax.
.. |syslog_device| replace:: The path of the location to which syslog messages are sent.
.. |syslog_facility| replace:: The facility name for syslog messages.
.. |syslog_ident| replace:: The program name for syslog messages.
.. |system group| replace:: Indicates whether a group is a system group (``true``) or is not a system group (``false``).
.. |system user| replace:: Indicates that a system user should be created. This attribute may be used with ``useradd`` as the provider to create a system user which passes the ``-r`` flag to ``useradd``.



.. Description strings that begin with the letter T.
.. The pattern is |txxxx| replace:: string.
.. 
.. 

.. T
.. 

.. |tags| replace:: The tags for this server.
.. |tags list| replace:: A list of tags that will be displayed in the output.
.. |tags hash| replace:: A |ruby hash| of key value pairs that are used as resource tags. For example: ``{ "Name" => "foo", "Environment" => "node.chef_environment" }``.
.. |tapped| replace:: Indicates that a |homebrew| formula repository is tapped.
.. |target windows_shortcut| replace:: The unique identifier for the object to which a |windows| shortcut will link.
.. |target_interface| replace:: The IP address that will be assigned to the network interface.
.. |target_address| replace:: The IP address of the target route.
.. |tcp_ports| replace:: A comma-separated list of local and public TCP ports that will be opened. For example: ``80:80,433:5000``.
.. |template context_file| replace:: The name of a template that will be rendered to create the context file.
.. |template daemontools| replace:: The name variable for the template files. The run script is set up by a template named ``sv-NAME-run.erb``. The log/run script is set up by a template named ``sv-NAME-log-run.erb``. The finish script is set up by a template named ``sv-NAME-finish.erb``. For each of these scripts, the ``NAME`` placeholder will be replaced by the value specified for this attribute. These templates should be located in the directory of a cookbook that uses this lightweight resource.
.. |template database_yml| replace:: The name of a template that will be rendered to create the ``database.yml`` file.
.. |template file_config| replace:: The template to use when rendering a configuration file. 
.. |template sudo| replace:: A |erb| template file in the current cookbook (not the ``sudo`` cookbook). If this attribute is used, all other attributes will be ignored except for ``variables``.
.. |thirty_two_bit| replace:: Indicates whether an |microsoft iis| application pool can run in 64-bit mode.
.. |throttle| replace:: Indicates whether bandwidth throttling is enabled for downloads. When set to ``0``, bandwidth throttling is disabled. When set to an integer, along with ``k``, ``M``, or ``G``, represents the bandwidth value. For example: ``6.5k`` represents 6.5 kilobytes per second and ``4M`` represents 4 megabytes per second. Use a ``%`` to assign an integer as a percentage of total bandwidth. For example: ``80%`` will use 80% of the total available bandwidth.
.. |time reports_end| replace:: Use to find runs with an end time less than or equal to the specified date. This option must be used in conjunction with ``--starttime`` and may define up to a 90-day time period.
.. |time reports_start| replace:: Use to find runs with a start time greater than or equal to the specified date. This option must be used in conjunction with ``--endtime`` and may define up to a 90-day time period.
.. |timestamp reports_unix| replace:: Indicates whether the start and end times are given as |unix| timestamps. This option may be used when the ``--endtime`` and ``--starttime`` options are used.
.. |timeout| replace:: The amount of time (in seconds) to wait before timing out.
.. |timeout aws_ec2| replace:: The connection timeout for the |amazon ec2| API.
.. |timeout command| replace:: The amount of time (in seconds) a command will wait before timing out.
.. |timeout connection| replace:: The amount of time (in seconds) to wait before a connection times out.
.. |timeout os_process| replace:: The amount of time (in milliseconds) before an external process times out.
.. |timeout push jobs| replace:: The maximum amount of time (in seconds) by which a job must complete, before it will be stopped.
.. |timeout reboot| replace:: The amount of time (in seconds) a command will wait before proceeding with a reboot.
.. |timeout redis| replace:: The amount of time (in seconds) a client may be idle before timeout.
.. |timeout rest| replace:: The time (in seconds) after which an HTTP REST request will time out.
.. |timeout ring_convergence| replace:: The amount of time (in seconds) a command will wait for ring convergence.
.. |timeout smtp_connect| replace:: The amount of time (in seconds) to wait for a connection to an |smtp| server.
.. |timeout worker| replace:: The amount of time (in seconds) that a worker can be silent before it is killed and restarted.
.. |timeout worker_process| replace:: The amount of time (in seconds) before a worker process times out.
.. |to resource link| replace:: The actual file to which the link will be created.
.. |tolerant| replace:: Indicates whether |yum| will be tolerant of errors that may occur on the command line.
.. |torrent_file| replace:: A URI or a local path that specifies a file in a |bittorrent| swarm that will be joined.
.. |trace functions_on_server| replace:: Indicates whether trace functions are executed by the server.
.. |tree| replace:: Indicates that dependencies are shown in a visual tree structure (including duplicates, if they exist).
.. |tsflags| replace:: A comma- or space-separated list of transaction flags to be passed to the transaction set.
.. |type module| replace:: The module type.
.. |type package| replace:: The package type.



.. Description strings that begin with the letter U.
.. The pattern is |uxxxx| replace:: string.
.. 
.. 

.. U
.. 

.. |udp_ports| replace:: A comma-separated list of local and public UDP ports that will be opened. For example: ``80:80,433:5000``.
.. |umask| replace:: The file mode creation mask, or umask.
.. |uri hp_auth| replace:: The URI used during authentication to the |hp cloud| account.
.. |uri repository| replace:: The URI for the repository.
.. |uri repository_apt| replace:: The URI for the |apt| repository.
.. |uri repository_git| replace:: The URI for the |git| repository.
.. |uri repository_svn| replace:: The URI for the |svn| repository.
.. |url_bugtracker| replace:: The URL at which bugs are filed.
.. |url chef_server| replace:: The URL for the |chef server|.
.. |url http_request| replace:: The URL to which an HTTP request is sent.
.. |url key_download| replace:: The URL from which a key is downloaded.
.. |url package_download| replace:: The URL from which a package is downloaded.
.. |url proxy_server| replace:: The URL for the proxy server.
.. |url server_supervisor| replace:: The URL passed in the environment to the sub-process process.
.. |use bundler| replace:: Indicates whether ``bundler`` will be used. If ``false``, |bundler| will never be used. This attribute defaults to ``true`` when a |gem| includes |bundler|.
.. |use bundler_option_deployment| replace:: Indicates whether |bundler| will be run with the ``--deployment`` options. This attribute defaults to ``true`` when a |gemfilelock| is present.
.. |use conditional_get| replace:: Use to enable conditional HTTP requests by using a conditional ``GET`` (with the |if_modified_since| header) or an opaque identifier (|etag|). To use |if_modified_since| headers, ``use_last_modified`` must also be set to ``true``. To use |etag| headers, ``use_etag`` must also be set to ``true``.
.. |use current_branch| replace:: Indicates that the current branch will be used.
.. |use custom_log_script| replace:: Indicates whether a service has a custom logging script.
.. |use debsrc| replace:: Indicates whether the ``deb-src`` source repository is added.
.. |use etag| replace:: Indicates that |etag| headers are enabled. Set to ``false`` to disable |etag| headers. To use this setting, ``use_conditional_get`` must also be set to ``true``.
.. |use ha| replace:: Indicates whether the |chef server| is running in a high availability topology.
.. |use file_overwrite| replace:: Indicates that a file (if different) will be overwritten.
.. |use interface| replace:: Indicates whether the interface is activated.
.. |use keepalive| replace:: Indicates whether HTTP keepalive is used (if available).
.. |use last_modified| replace:: Indicates that |if_modified_since| headers are enabled. Set to ``false`` to disable |if_modified_since| headers. To use this setting, ``use_conditional_get`` must also be set to ``true``.
.. |use nagle| replace:: Indicates whether the |nagle| buffering algorithm is enabled.
.. |use null_character| replace:: Indicates that a ``NULL`` character (``\0``) will be used as a separator, instead of white space.
.. |use pkgbuild| replace:: Indicates that a custom ``PKGBUILD`` file will be used. When ``true``, the |lwrp pacman aur| lightweight resource will look for a ``cookbook_file`` named ``PKGBUILD`` to use as package instructions.
.. |use repo| replace:: Indicates that a repository is enabled.
.. |use sendfile| replace:: Indicates whether ``sendfile()`` is used to copy data between file descriptors.
.. |use ssl| replace:: Indicates whether |ssl| is being used.
.. |use sudo_password| replace:: Indicates that a bootstrap operation is done using |sudo cmd|, with the password specified by the ``-P`` (or ``--ssh-password``) option.
.. |use tcpip| replace:: Indicates whether |tcpip| transactions are enabled.
.. |use trailing_slash| replace:: Indicates that trailing slashes (/) will be shown for directories.
.. |user checked_out_code| replace:: The system user that is responsible for the checked-out code.
.. |user chef_client| replace:: The user that owns a process. This is required when starting any executable as a daemon.
.. |user command| replace:: The user name or user ID that should be changed before running a command.
.. |user data_file_ec2| replace:: The |amazon ec2| user data file used during instance provisioning.
.. |user knife| replace:: The user name used by |knife| to sign requests made by the |chef api client| to the |chef server|. Authentication will fail if the user name does not match the private key.
.. |user name_or_id| replace:: A user name or identifier that must be changed before running a command.
.. |user sudo| replace:: The user for which |sudo cmd| privileges are provided.
.. |user terremark| replace:: A user name with permission to access a |terremark| service.
.. |user uid| replace:: The numeric user identifier.
.. |user unix_account| replace:: The |unix| user account that runs the program.

       
.. Description strings that begin with the letter V.
.. The pattern is |vxxxx| replace:: string.
.. 
.. 

.. V
.. 

.. |validation_client_name| replace:: The name of the server that--along with the ``validation_key``--is used to determine whether a |chef client| may register with a |chef server|. The validation_client_name located in the server and client configuration files must match.
.. |validation_key| replace:: The location of the file which contains the key used when a |chef client| is registered with a |chef server|. A validation key is signed using the ``validation_client_name`` for authentication.
.. |value resource directory| replace:: The value with which ``key_name`` is set.
.. |values windows_registry| replace:: A |ruby hash| of values to be set under a registry key. The individual |ruby hash| items will become  ``value_name => value_data`` items in the registry key.
.. |values resource registry_key| replace:: An array of hashes, where each |ruby hash| contains the values that will be set under a registry key. Each |ruby hash| must contain ``:name``, ``:type``, and ``:data`` (and must contain no other key values). 
.. |values resource registry_key types| replace:: ``:type`` represents the values available for registry keys in |windows|. Use ``:binary`` for REG_BINARY, ``:string`` for REG_SZ, ``:multi_string`` for REG_MULTI_SZ, ``:expand_string`` for REG_EXPAND_SZ, ``:dword`` for REG_DWORD, ``:dword_big_endian`` for REG_DWORD_BIG_ENDIAN, or ``:qword`` for REG_QWORD.
.. |variables passed_to_template| replace:: A |ruby hash| of variables that are passed into a |ruby| template file.
.. |vcpus| replace:: The number of virtual CPUs that are available per virtual machine. Possible values: ``1``, ``2``, ``4``, or ``8``.
.. |verbose| replace:: Set for more verbose outputs. Use ``-VV`` for maximum verbosity.
.. |verbose_logging| replace:: Indicates the level of logging. Options: ``true``, ``nil``, and ``false``. When this is set to ``false``, notifications about individual resources being processed will be suppressed (and will be output at the ``:info`` logging level). Setting this to ``false`` can be useful when a |chef client| is run as a daemon.
.. |version artifact| replace:: The version of an artifact.
.. |version chef| replace:: The version of the |chef client|.
.. |version ohai| replace:: The version of |ohai|.
.. |version cookbook| replace:: The current version of a cookbook. Version numbers always follow a simple three-number version sequence.
.. |version cookbook_download| replace:: The version of a cookbook to download.
.. |version dotnet_runtime| replace:: The version of |microsoft dotnet|.
.. |version package| replace:: The version of a package to be installed or upgraded.
.. |version package_version_assumed| replace:: The version of a package to be installed or upgraded. If a version is not specified, the latest version is assumed.
.. |version package_windows_registry| replace:: The version number of a package, as indicated by the ``DisplayVersion`` property for an ``Uninstall`` registry key. If the version number equals the display version, the package will not be installed.
.. |version push jobs| replace:: The version of |push jobs|.
.. |version protocols_ssl| replace:: The |ssl| protocol versions that are enabled.
.. |versioned_cookbooks| replace:: Use to append cookbook versions to cookbooks. Set to ``false`` to hide cookbook versions: ``cookbooks/apache``. Set to ``true`` to show cookbook versions: ``cookbooks/apache-1.0.0`` and/or ``cookbooks/apache-1.0.1``. When this setting is ``true``, |subcommand knife download| will download ALL cookbook versions, which can be useful if a full-fidelity backup of data on the |chef server| is required.
.. |virtual_environment| replace:: The name of the virtual environment.
.. |vlan tag_array| replace:: An array of VLANs that carry traffic on a trunk interface.
.. |vlan tagged| replace:: Indicates whether a port is in access or trunk mode.
.. |vlan untagged| replace:: The native VLAN on an interface.
.. |vrrp_instance_advert| replace:: The frequency (in seconds) at which the primary |vrrp| server should advertise.
.. |vrrp_instance_interface| replace:: The interface over which |vrrp| traffic is sent.
.. |vrrp_instance_ipaddress| replace:: The virtual IP address to be managed.
.. |vrrp_instance_ipaddress_device| replace:: The device to which the virtual IP address is added.
.. |vrrp_instance_password| replace:: The secret key for |vrrp| pairs.
.. |vrrp_instance_priority| replace:: The priority for this server.
.. |vrrp_instance_state| replace:: The state of the |vrrp| server.
.. |vrrp_instance_virtual_router_id| replace:: The virtual router identifier used by the |keepalived| pair.
.. |vrrp_unicast_bind| replace:: The unicast cluster IP address to which |keepalived| binds. 
.. |vrrp_unicast_peer| replace:: The unicast cluster IP address used by |keepalived| to talk to its peer.


                     

.. Description strings that begin with the letter W.
.. The pattern is |wxxxx| replace:: string.
.. 
.. 

.. W
.. 

.. |warning_condition| replace:: A string that is passed to the command using the ``-w`` flag.
.. |web_ui_admin_default_password| replace:: The default password for the |chef server| web user interface. This password should be changed immediately after logging in for the first time.
.. |web_ui_admin_user_name| replace:: The default user name for the |chef server| web user interface.
.. |web_ui_key| replace:: The path to where the key used by the |chef server| web user interface is located.
.. |webui backlog| replace:: xxxxx.
.. |webui cookie_domain| replace:: xxxxx.
.. |webui cookie_secret| replace:: xxxxx.
.. |webui dir| replace:: xxxxx.
.. |webui enable| replace:: xxxxx.
.. |webui environment| replace:: xxxxx.
.. |webui ha| replace:: xxxxx.
.. |webui listen| replace:: xxxxx.
.. |webui log_directory| replace:: xxxxx.
.. |webui port| replace:: xxxxx.
.. |webui session_key| replace:: xxxxx.
.. |webui tcp_nodelay| replace:: xxxxx.
.. |webui umask| replace:: xxxxx.
.. |webui url| replace:: xxxxx.
.. |webui validation_client_name| replace:: The name of the |chef validator|.
.. |webui vip| replace:: xxxxx.
.. |webui worker_processes| replace:: xxxxx.
.. |webui worker_timeout| replace:: xxxxx.
.. |webapp_template| replace:: The template used to render the virtual host configuration file.
.. |weekday cron| replace:: The day of the week on this entry should run (0 - 6), where Sunday = 0.
.. |whyrun_mode| replace:: Indicates that the executable will be run in |whyrun| mode, which is a type of |chef client| run that does everything except modify the system. Use |whyrun| mode to understand why the |chef client| makes the decisions that it makes and to learn more about the current and proposed state of the system.
.. |windows group_identifier| replace:: A string or ID that identifies the group owner by group name, including fully qualified group names such as ``domain\group`` or ``group@domain``. If this value is not specified, existing groups will remain unchanged and new group assignments will use the default ``POSIX`` group (if available).
.. |windows registry| replace:: The |windows| registry is a database that stores configuration information for machines that run |windows|. The registry stores information about the system hardware, installed programs, and other settings, including for each user of the computer.
.. |winrm_basic| replace:: Set this value to ``true`` for development and testing purposes. The ``knife windows`` subcommand supports |kerberos| and |windows basic| authentication schemes.
.. |winrm_allow_unencrypted| replace:: Set this value to ``true`` for development and testing purposes.
.. |winrm_max_memory_per_shell_mb| replace:: The |chef client| and |ohai| typically require more memory than the default setting allows. Increase this value to ``300MB``. (Only required on |windows 2008 server r2 standard| and older. The default in |windows 2012| was increased to ``1024MB``.)
.. |winrm_max_timeouts| replace:: A bootstrap command can take longer than allowed by the default setting. Increase this value to ``1800000`` (30 minutes).
.. |winrm_password| replace:: The |windows remote management| password.
.. |winrm_port| replace:: The |windows remote management| port.
.. |winrm_transport| replace:: The |windows remote management| transport type: ``ssl`` or ``plaintext``.
.. |winrm_user| replace:: The |windows remote management| user name.
.. |with_uri| replace:: Indicates that the corresponding URIs will be shown.
.. |work_mem| replace:: The size (in megabytes) of allowed in-memory sorting.
.. |worker_class| replace:: The type of worker to use: ``sync``, ``eventlet``, ``gevent``, or ``tornado``.
.. |worker_connections| replace:: The maximum number of simultaneous clients.
.. |worker_kill_restart| replace:: The amount of time (in seconds) to wait before a worker is killed and restarted.
.. |worker_max_keepalive| replace:: The amount of time (in seconds) to wait for requests on a |keepalived| connection.
.. |worker_max_requests| replace:: The maximum number of requests a worker will process before restarting.
.. |worker_processes| replace:: The number of allowed worker processes.




.. Description strings that begin with the letter X.
.. The pattern is |xxxxx| replace:: string.
.. 
.. 

.. X
.. 

.. |x_forwarded_proto| replace:: The protocol used to connect to the server. Possible values: ``http`` and ``https``.

                     


.. Description strings that begin with the letter Y.
.. The pattern is |yxxxx| replace:: string.
.. 
.. 

.. Y
.. 

.. |yes| replace:: Indicates that the response to all confirmation prompts will be "Yes" (and that |knife| will not ask for confirmation).




.. Description strings that begin with the letter Z.
.. The pattern is |zxxxx| replace:: string.
.. 
.. 

.. Z
.. 

.. |zenoss zenpack desc| replace:: A |zenoss zenpack| is used to add or override functionality within the |zenoss| platform.
.. |zone google| replace:: The |google compute engine| zone in which a disk is located.
.. |zone hp| replace:: The name of the |hp cloud| availability zone.











                     


                     



