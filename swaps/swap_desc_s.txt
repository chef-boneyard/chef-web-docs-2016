.. Description strings that begin with the letter S.
.. The pattern is |sxxxx| replace:: string.
.. 
.. 

.. S
.. 

.. |sandbox_path| replace:: The location in which cookbook files are stored (temporarily) during upload.

.. |scm_provider resource deploy| replace:: The name of the source control management provider to be used. Default value: ``Chef::Provider::Git``. Optional values: ``Chef::Provider::Subversion``.
.. |script-path| replace:: A colon-separated path at which |ruby| scripts are located.

.. |SEARCH_QUERY| replace:: The search query used to identify a a list of items on a |chef server|. This option uses the same syntax as the ``search`` sub-command.
.. |SEARCH_QUERY SSH| replace:: The search query used to return a list of servers to be accessed using |ssh| and the specified ``SSH_COMMAND``. This option uses the same syntax as the search sub-command.
.. |secret| replace:: The encryption key that is used for values contained within a data bag.
.. |secret-file| replace:: The path to the file that contains the encryption key.
.. |server-name| replace:: The name of the server.
.. |server-url| replace:: The URL for the |chef server|.
.. |service_name lwrp bluepill_service| replace:: The name of the service. A recipe that uses the |lwrp bluepill service| lightweight resource must contain a template resource for the pill and it must be named ``NAME.pill.erb`` where ``NAME`` is the ``service_name`` attribute.
.. |service_name lwrp daemontools_service| replace:: The name of the service.
.. |service_name resource service| replace:: The name of the service. Default value: ``name``.

.. |shallow_clone resource deploy| replace:: Indicates that the clone depth is set to 5. Default value: ``true``. This action only works with |git|.
.. |shell resource cron| replace:: Sets the SHELL environment variable.
.. |shell resource user| replace:: The login shell. Default value: ``nil``.

.. |signing_ca_cert| replace:: The path to where the certificate is located. This setting is generated automatically by |chef| and is passed to |open ssl| Default value: ``/var/chef/ca/cert.pem``.
.. |signing_ca_key| replace:: The path to where the private key is located. This setting is generated automatically by |chef| and is passed to |open ssl| Default value: ``/var/chef/ca/key.pem``.
.. |signing_ca_user| replace:: The user associated with the |ca| policy. This setting is passed by |chef| to |open ssl|.
.. |signing_ca_group| replace:: The group associated with the |ca| policy. This setting is passed by |chef| to |open ssl|.
.. |signing_ca_country| replace:: The country code associated with the |ca| policy. This setting is passed by |chef| to |open ssl|.
.. |signing_ca_state| replace:: The state (or province) associated with the |ca| policy. This setting is passed by |chef| to |open ssl|.
.. |signing_ca_location| replace:: The location associated with the |ca| policy. This setting is passed by |chef| to |open ssl|.
.. |signing_ca_org| replace:: The organization associated with the |ca| policy. This setting is passed by |chef| to |open ssl|.
.. |signing_ca_domain| replace:: The domain associated with the |ca| policy. This setting is passed by |chef| to |open ssl|.
.. |signing_ca_email| replace:: The email address associated with the |ca| policy. This setting is passed by |chef| to |open ssl|. Default value: ``opensource.opscode.com``.
.. |size lwrp aws_ebs_volume| replace:: The size of the volume (in gigabytes).

.. |skip-dependencies| replace:: Indicates that all cookbooks to which the installed cookbook has a dependency will not be installed.

.. |slicehost-password| replace:: The administrative password for the server.

.. |snapshot_id lwrp aws_ebs_volume| replace:: The snapshot with which to build an |amazon ebs| volume.
.. |snapshots_to_keep lwrp aws_ebs_volume| replace:: The number of snapshots to maintain. This attribute is available only when the ``:prune`` action is used. Default value: ``2``.

.. |solo mode| replace:: Indicates whether |chef| is being run in "solo" mode. This setting determines if the |chef client| should attempt to communicate with a |chef server|. Default value: ``false``.
.. |solr_data_path| replace:: The location in which the Solr indexes are located. Default value: ``/var/chef/solr/data``.
.. |solr_heap_size| replace:: The amount of memory allocated to the Java Virtual Machine (JVM) that is being used to run Solr. Default value: ``256M``.
.. |solr_home_path| replace:: The path to the Solr home directory. Default value: ``/var/chef/solr``.
.. |solr_java_opts| replace:: The additional options (if any) that are passed to the Solr JVM. Default value: ``nil``.
.. |solr_jetty_path| replace:: The path to the settings that control the Jetty environment. Default value: ``/var/chef/solr-jetty``.
.. |solr_url| replace:: The URL for the server from which the Solr search engine is run. Default value: ``http://localhost:8983``.
.. |sort| replace:: The order in which search results will be sorted.
.. |source lwrp chef_handler| replace:: The full path to the handler file or the path to a |gem| (if the handler ships as part of a |ruby| |gem|).
.. |source lwrp dmg_package| replace:: The remote URL for the |apple disk image| to be download. Default value: ``nil``.
.. |source lwrp firewall_rule| replace:: The IP address or subnet from which incoming traffic originates. Default value: ``0.0.0.0/0`` (from "anywhere").
.. |source lwrp windows_package| replace:: A URI or a local path that specifies the source of a |windows| installer.
.. |source lwrp windows_zipfile| replace:: A URI or a local path that specifies the source of a |zip| file.
.. |source resource cookbook_file| replace:: The base name of the source file (and inferred from the ``path`` attribute).
.. |source resource package| replace:: Optional. The package source for providers that use a local file (such as |rubygems|, |debian dkpg|, |yum| or |rpm|).
.. |source resource remote_directory| replace:: The base name of the source file (and inferred from the ``path`` attribute).
.. |source resource remote_file| replace:: The base name of the source file (and inferred from the ``path`` attribute).
.. |source resource template| replace:: The location of the template source file. Default value: ``nil``.
.. |source resource yum| replace:: Indicates that the ``yum localinstall`` command will be used. When this attribute is specified, |yum| will use repositories to satisfy any remote dependencies. Default value: none.
.. |source-image| replace:: The name of the disk image that will be used to create the virtual machine.

.. |splay| replace:: A randomly-generated number (in seconds) to add to the ``interval`` that is used to determine the frequency of |chef client| runs. This random number can help prevent server load when there are many clients running at the same time. Default value: ``nil``.

.. |SSH_COMMAND| replace:: The command that will be run against the results of a search query.
.. |ssh-gateway| replace:: The |ssh| tunnel or gateway that is used to run a bootstrap action on a machine that is not accessible from the workstation.
.. |ssh-key amazon ec2| replace:: The |ssh| key for the |amazon ec2| environment.
.. |ssh-key eucalyptus| replace:: The |ssh| key for the |eucalyptus| environment.
.. |ssh-key hp| replace:: The |ssh| key for the |hp cloud| environment.
.. |ssh-key openstack| replace:: The |ssh| key for the |openstack| environment.
.. |ssh-password| replace:: The |ssh| password. This can be used to pass the password directly on the command line. If this option is not specified (and a password is required) |knife| will prompt for the password.
.. |ssh-port| replace:: The |ssh| port.
.. |ssh-user| replace:: The |ssh| user name.
.. |ssh_wrapper resource deploy| replace:: |git| only. The path to the wrapper script used when running |ssh| with |git|. The ``GIT_SSH`` environment variable is set to this.
.. |ssh_wrapper resource scm| replace:: |git| only. The path to the wrapper script that is used when running |ssh| with |git|. The ``GIT_SSH`` environment variable is set to this value.

.. |ssl_ca_file| replace:: The file in which the |open ssl| key is saved. This setting is generated automatically by |chef| and most users will not need to modify it.
.. |ssl_ca_path| replace:: The path to where the |open ssl| key is located. This setting is generated automatically by |chef| and most users will not need to modify it.
.. |ssl_client_cert| replace:: The |open ssl| X509 certificate. This setting is generated automatically by |chef| and most users will not need to modify it.
.. |ssl_client_key| replace:: The |open ssl| X509 key. This setting is generated automatically by |chef| and most users will not need to modify it.
.. |ssl_verify_mode| replace:: The verify mode for HTTPS requests. Set to ``:verify_none`` to not send certificate requests. Set to ``:verify_peer`` to send certificate requests to a |chef client|. For users of |chef hosted|, ``:verify_peer`` is recommended as the verification mode; depending on how |open ssl| is configured, the ``ssl_ca_path`` may need to be specified.

.. |start| replace:: The row at which return results will begin.
.. |start_command resource service| replace:: The command used to start a service. Default value: ``nil``.
.. |status_command resource service| replace:: The command used to check the run status for a service. Default value: ``nil``.
.. |stop_command resource service| replace:: The command used to stop a service. Default value: ``nil``.
.. |storage account| replace:: The name of the storage account used with the hosted service.

.. |subnet| replace:: The |amazon vpc| instance in which a node will be created.
.. |sudo| replace:: Indicates that a bootstrap operation should be executed using |sudo cmd|.
.. |supports lwrp bluepill_service| replace:: A list of attributes that controls how |chef| will attempt to manage a service: ``:restart``, ``:reload``, ``:status``. For ``:restart``, the init script or other service provider can use a restart command; if ``:restart`` is not specified, |chef| will attempt to stop and then start a service. For ``:reload``, the init script or other service provider can use a reload command. For ``:status``, the init script or other service provider can use a status command to determine if the service is running; if ``:status`` is not specified, |chef| will attempt to match the ``service_name`` against the process table as a regular expression, unless a pattern is specified as a parameter attribute. Default value: ``{ :restart => true, :status => true }``.
.. |supports lwrp chef_handler| replace:: The type of |chef| handler to be registered as: ``:report``, ``:exception`` or ``both``. Default value: ``{ :report => true, :exception => true }``.
.. |supports resource mount| replace:: A hash of options for supported mount features. Default value: ``{ :remount => false }``.
.. |supports resource service| replace:: A list of attributes that controls how |chef| will attempt to manage a service: ``:restart``, ``:reload``, ``:status``. For ``:restart``, the init script or other service provider can use a restart command; if ``:restart`` is not specified, |chef| will attempt to stop and then start a service. For ``:reload``, the init script or other service provider can use a reload command. For ``:status``, the init script or other service provider can use a status command to determine if the service is running; if ``:status`` is not specified, |chef| will attempt to match the ``service_name`` against the process table as a regular expression, unless a pattern is specified as a parameter attribute. Default value: ``{ :restart => true, :status => true }``.
.. |supports resource user| replace:: A Mash where keys represent features and values are booleans that indicate if that feature is supported. Default value: ``{:manage_home => false, :non_unique => false }``.

.. |svn_arguments resource deploy| replace:: |svn| only. The extra arguments that are passed to the |svn| command.
.. |svn_arguments resource scm| replace:: |svn| only. The extra arguments that are passed to the |svn| command.
.. |svn_info_args resource scm| replace:: |svn| only. Use when the ``svn info`` command is used by |chef| and arguments need to be passed. (The ``svn_arguments`` command does not work when the ``svn info`` command is used by |chef|.)
.. |svn_password resource deploy| replace:: |svn| only. The password for the user that has access to the |svn| repository.
.. |svn_password resource scm| replace:: |svn| only. The password for the user that has access to the |svn| repository.
.. |svn_username resource deploy| replace:: |svn| only. The user name for a user that has access to the |svn| repository.
.. |svn_username resource scm| replace:: |svn| only. The user name for a user that has access to the |svn| repository.

.. |symlink_before_migrate resource deploy| replace:: A hash that maps files in a shared directory into the current release. Runs before migration. Default value: ``{"config/database.yml" => "config/database.yml"}``.
.. |symlinks resource deploy| replace:: A hash that maps files in a shared directory to their paths in the current release. Default value: ``{"system" => "public/system", "pids" => "tmp/pids", "log" => "log"}``.
.. |system resource group| replace:: Indicates whether a group is a system group (``true``) or is not a system group (``false``). Default value: ``nil``.
.. |system resource user| replace:: Indicates that a system user should be created. This attribute may be used with ``useradd`` as the provider to create a system user which passes the ``-r`` flag to ``useradd``. Default value: ``nil``.



