.TH "KNIFE OVERVIEW" "1" "September 28, 2012" "0.0.1" "Knife Overview"
.SH NAME
Knife Overview \- Knife Overview
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.\" Man page generated from reStructuredText.
.
.sp
Knife is a command\-line tool that provides an interface between a local Chef repository and the Chef server. Knife helps users of Chef to manage:
.INDENT 0.0
.IP \(bu 2
Nodes
.IP \(bu 2
Cookbooks and recipes
.IP \(bu 2
Roles
.IP \(bu 2
Stores of JSON data (data bags), including encrypted data
.IP \(bu 2
Environments
.IP \(bu 2
Cloud resources, including provisioning
.IP \(bu 2
The installation of Chef on management workstations
.IP \(bu 2
Searching of indexed data on the Chef server
.UNINDENT
.SH WORKING WITH KNIFE
.sp
Knife runs from a management workstation and sits in\-between a Chef server and an organization\(aqs infrastructure. Knife interacts with a Chef server by using the same REST API that is used by a chef\-client. Role\-based authentication controls (RBAC) can be used to authorize changes when Knife is run with Hosted Chef or Private Chef. Knife is configured during workstation setup, but subsequent modifications can be made using the knife.rb configuration file.
.SS JSON Data Format
.sp
All data is entered using a text editor in JSON format, unless the \fB\-\-no\-editor\fP option is entered as part of a command. JSON is a common, language\-independent data format that provides a simple text representation of arbitrary data structures. For more information about JSON, see \fI\%http://www.json.org/\fP or \fI\%http://en.wikipedia.org/wiki/JSON\fP.
.SS Using Quotes
.sp
Values can be entered with double quotes (" ") or single quotes (\(aq \(aq), but this should be done consistently.
.SS Sub\-commands
.sp
Knife comes with a collection of built in sub\-commands that work together to provide all of the functionality required to take specific actions against any object in a Chef environment, including cookbooks, nodes, roles, data bags, and environments. A Knife plugin extends the functionality beyond built\-in sub\-commands.
.sp
Knife has the following sub\-commands: \fBbootstrap\fP, \fBclient\fP, \fBconfigure\fP, \fBcookbook\fP, \fBcookbook site\fP, \fBdata bag\fP, \fBenvironment\fP, \fBexec\fP, \fBindex rebuild\fP, \fBnode\fP, \fBrecipe list\fP, \fBrole\fP, \fBsearch\fP, \fBssh\fP, \fBstatus\fP, and \fBtag\fP.
.sp
Opscode provides the following plug\-ins, which work the same as built\-in sub\-commands (including common options), but must be downloaded separately from github: \fBazure\fP, \fBbluebox\fP, \fBec2\fP, \fBeucalyptus\fP, \fBgoogle\fP, \fBhp\fP, \fBlinode\fP, \fBopenstack\fP, \fBrackspace\fP, \fBslicehost\fP, \fBterremark\fP, and \fBwindows\fP.
.IP Note
The following sub\-command runs only against the Open Source Chef Server: \fBindex rebuild\fP.
.RE
.sp
The Chef community provides many other plugins for Knife: \fI\%http://community.opscode.com/\fP.
.SS Syntax
.sp
All Knife sub\-commands have the following syntax:
.sp
.nf
.ft C
knife subcommand [ARGUMENT] (options)
.ft P
.fi
.sp
Each sub\-command has its own set of arguments and options.
.IP Note
All syntax examples in this document show variables in ALL_CAPS. For example \fB\-u PORT_LIST\fP (where PORT_LIST is a comma\-separated list of local and public UDP ports) or \fB\-F FORMAT\fP (where FORMAT determines the output format, either \fBsummary\fP, \fBtext\fP, \fBjson\fP, \fByaml\fP, or \fBpp\fP). These variables often require specific values that are unique to your organization\(aqs Chef environment.
.RE
.SS Common Options
.sp
The following options can be run with all Knife sub\-commands:
.INDENT 0.0
.TP
.B \fB\-c CONFIG\fP, \fB\-\-config CONFIG\fP
The configuration file to use.
.TP
.B \fB\-\-color\fP
Indicates that colored output will be used.
.TP
.B \fB\-\-defaults\fP
Indicates that Knife will use the default value, instead of asking a user to provide one.
.TP
.B \fB\-e EDITOR\fP, \fB\-\-editor EDITOR\fP
The $EDITOR that is used for all interactive commands.
.TP
.B \fB\-E ENVIRONMENT\fP, \fB\-\-environment ENVIRONMENT\fP
The name of the Chef server environment.
.TP
.B \fB\-F FORMAT\fP, \fB\-\-format FORMAT\fP
The output format: \fBsummary\fP (default), \fBtext\fP, \fBjson\fP, \fByaml\fP, and \fBpp\fP.
.TP
.B \fB\-h\fP, \fB\-\-help\fP
Shows help for Knife or for a sub\-command.
.TP
.B \fB\-k KEY\fP, \fB\-\-key KEY\fP
The API key that a chef\-client must provide before it can access a Chef server.
.TP
.B \fB\-\-no\-color\fP
Indicates that color will not be used in the output.
.TP
.B \fB\-n\fP, \fB\-\-no\-editor\fP
Indicates that $EDITOR will not be opened; data will be accepted as\-is.
.TP
.B \fB\-\-print\-after\fP
Indicates that data will be shown after a destructive operation.
.TP
.B \fB\-s URL\fP, \fB\-\-server\-url URL\fP
The URL for the Chef server.
.TP
.B \fB\-u USER\fP, \fB\-\-user USER\fP
The user name for the chef\-client.
.TP
.B \fB\-v\fP, \fB\-\-version\fP
Shows the version of Chef.
.TP
.B \fB\-V\fP, \fB\-\-verbose\fP
Set for more verbose outputs. Use \fB\-VV\fP for maximum verbosity.
.TP
.B \fB\-y\fP, \fB\-\-yes\fP
Indicates that "yes" will be the response to all confirmation prompts (and that Knife will not ask a user for confirmation).
.UNINDENT
.SH AUTHOR
Opscode, Inc.
.SH COPYRIGHT
2012, Opscode, Inc
.\" Generated by docutils manpage writer.
.
